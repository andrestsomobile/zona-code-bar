package ingreso.action;import java.io.IOException;import java.sql.SQLException;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.struts.action.Action;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import administracion.entity.usuario;import ingreso.control.gstentrada_locacion;import ingreso.entity.entrada_locacion;import ingreso.entity.trafico;import ingreso.form.entrada_locacionForm;import ingreso.form.traficoForm;public final class entrada_locacionAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {		entrada_locacionForm _form = (entrada_locacionForm) form;		gstentrada_locacion control = new gstentrada_locacion();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear" : opcion;		String mensaje = "";		String destino = "cambiolocacion";		usuario usu = (usuario) request.getSession().getAttribute("usuario");		String elusuario = usu.getusucodsx();				// OPCION DE set:		if (opcion.equals("set")) {			entrada_locacion entity = control.getentrada_locacion(request.getParameter("codsx"));			entrada_locacionForm temp = new entrada_locacionForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("entrada_locacionForm", temp);			request.setAttribute("elcodsx", temp.getElcodsx());			destino = "cambiolocacion_datos";		}		// opcion de CREAR		if (opcion.equals("crear")) {			String elcodsx = _form.getElcodsx();			String elcodentrada = _form.getElcodentrada();			String elcodlocacionorigen = _form.getElcodlocacionorigen();			String elcodlocaciondestino = _form.getElcodlocaciondestino();			String elcantidadnac = _form.getElcantidadnac(); 			String elsaldonac = _form.getElcantidadnac();			String elcantidadsnac = _form.getElcantidadsnac();			String elsaldosnac = _form.getElcantidadsnac();			String elfecha = _form.getElfecha();			String elpersona = elusuario;			String elcodcia = _form.getElcodcia(); 									try {				control.crearentrada_locacion(elcodentrada, elcodlocacionorigen, elcodlocaciondestino, elcantidadnac, elsaldonac, elcantidadsnac, elsaldosnac, elfecha, elpersona);								destino = "entrada_locacion";				// _form.setopcion("update");				entrada_locacion entity_creada = control.getentrada_locacion_last(elcodsx);				_form.setElcodsx(entity_creada.getElcodsx());				request.setAttribute("trafcodsx", entity_creada.getElcodsx());				mensaje = "Cambio Locacion Creado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Crear el Cambio Locacion: <br> " + e.getLocalizedMessage();				destino = "cambiolocacion_datos";			}		}		// Opcion de update		if (opcion.equals("update")) {			try {				_form.setElpersona(elusuario);				// actualizo los datos generales								entrada_locacion entity = control.getentrada_locacion(_form.getElcodsx());								control.updateentrada_locacion(_form);				mensaje = "Cambio Locacion Actualizado con Exito";				destino = "cambiolocacion_datos";				request.setAttribute("codsx", _form.getElcodsx());			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el Cambio Locacion: <br> " + e.getLocalizedMessage();				destino = "cambiolocacion_datos";			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			String codsx = request.getParameter("codsx");			try {				control.eliminar(codsx);				mensaje = "Cambio Locacion Eliminado con Exito";				destino = "cambiolocacion";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el Cambio Locacion: <br> " + e.getLocalizedMessage();				destino = "cambiolocacion";			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward(destino);	}}