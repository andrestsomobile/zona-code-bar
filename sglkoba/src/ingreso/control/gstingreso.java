package ingreso.control;import ingreso.form.*;import ingreso.entity.*;import db.*;import java.util.Collection;import java.sql.SQLException;/******************************************************** ***** CLASE GENERADA CON generator V3.0 By pablito *******/public class gstingreso extends GstTabla {	public gstingreso() {		db = new beanConnector();		this.classEntidad = ingreso.class;	}	public gstingreso(beanConnector db) {		this.db = db;		this.classEntidad = ingreso.class;	}	public Collection getlistaingreso() {		String consulta = " SELECT * FROM ingreso";		return getLista(consulta);	}	public Collection getlistaingreso(String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " SELECT * FROM ingreso where " + getTextoBusquedaResumen(param) + " order by ingcodsx desc " + "  limit " + this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistaingreso(String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM ingreso where  " + getTextoBusquedaResumen(param);		return getPaginas(consulta);	}	public Collection getlistaingreso(String tipo, String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		tipo = tipo == null ? "" : tipo;		String consulta = " SELECT * FROM ingreso where " + (tipo.equals("") ? "" : " ingtipo= '" + tipo + "' and ") + getTextoBusquedaResumen(param) + " order by ingcodsx desc " + "  limit " + this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistaingreso(String tipo, String param) {		param = param == null ? "" : param;		tipo = tipo == null ? "" : tipo;		String consulta = " SELECT count(1) FROM ingreso where " + (tipo.equals("") ? "" : " ingtipo= '" + tipo + "' and ") + getTextoBusquedaResumen(param);		return getPaginas(consulta);	}	public boolean crearingreso(String ingcodcia, String ingfecha, String ingtipo, String ingtrafico, String ingobservacion, String ingestado, String ingcausal, String ingcli_devolucion, String ingpesoneto, String ingpesobruto, String ingfob, String ingcantidad, String ingciudad_dev,			String ingconsec, String ingconseczfp, String ingplanilla) throws SQLException {		String insert = "INSERT INTO ingreso (ingcodcia,ingfecha,ingtipo,ingtrafico, ingobservacion, ingestado, ingcausal, ingcli_devolucion," + " ingpesoneto, ingpesobruto, ingfob, ingcantidad, ingciudad_dev, ingconsec, ingconseczfp, ingplanilla ) VALUES ("				+ (ingcodcia == null ? "NULL" : "'" + ingcodcia + "'") + "," + (ingfecha == null ? "NULL" : "'" + ingfecha + "'") + "," + (ingtipo == null ? "NULL" : "'" + ingtipo + "'") + "," + (ingtrafico == null ? "NULL" : "'" + ingtrafico + "' ") + ","				+ (ingobservacion == null ? "NULL" : "'" + ingobservacion + "' ") + "," + (ingestado == null ? "NULL" : "'" + ingestado + "' ") + "," + (ingcausal == null ? "NULL" : "'" + ingcausal + "' ") + "," + (ingcli_devolucion == null ? "NULL" : "'" + ingcli_devolucion + "' ") + ","				+ (ingpesoneto == null ? "NULL" : "'" + ingpesoneto + "' ") + "," + (ingpesobruto == null ? "NULL" : "'" + ingpesoneto + "' ") + "," + (ingfob == null ? "NULL" : "'" + ingfob + "' ") + "," + (ingcantidad == null ? "NULL" : "'" + ingcantidad + "' ") + ","				+ (ingciudad_dev == null ? "NULL" : "'" + ingciudad_dev + "' ") + "," + (ingconsec == null ? "NULL" : "'" + ingconsec + "' ") + "," + (ingconseczfp == null ? "NULL" : "'" + ingconseczfp + "' ") + "," + (ingplanilla == null ? "NULL" : "'" + ingplanilla + "' ") +				")";		int resp = db.executeUpdate(insert);		return resp == 0 ? false : true;	}		public boolean crearingreso(String ingcodcia, String ingfecha, String ingtipo, String ingtrafico, String ingobservacion, String ingestado, String ingcausal, String ingcli_devolucion, String ingpesoneto, String ingpesobruto, String ingfob, String ingcantidad, String ingciudad_dev,			String ingconsec, String ingconseczfp, String ingplanilla, String ingtipoasignacion) throws SQLException {		String insert = "INSERT INTO ingreso (ingcodcia,ingfecha,ingtipo,ingtrafico, ingobservacion, ingestado, ingcausal, ingcli_devolucion," + " ingpesoneto, ingpesobruto, ingfob, ingcantidad, ingciudad_dev, ingconsec, ingconseczfp, ingplanilla,ingtipoasignacion ) VALUES ("				+ (ingcodcia == null ? "NULL" : "'" + ingcodcia + "'") 				+ "," + (ingfecha == null ? "NULL" : "'" + ingfecha + "'") 				+ "," + (ingtipo == null ? "NULL" : "'" + ingtipo + "'") 				+ "," + (ingtrafico == null ? "NULL" : "'" + ingtrafico + "' ") 				+ "," + (ingobservacion == null ? "NULL" : "'" + ingobservacion + "' ") 				+ "," + (ingestado == null ? "NULL" : "'" + ingestado + "' ") 				+ "," + (ingcausal == null ? "NULL" : "'" + ingcausal + "' ") 				+ "," + (ingcli_devolucion == null ? "NULL" : "'" + ingcli_devolucion + "' ") 				+ "," + (ingpesoneto == null ? "NULL" : "'" + ingpesoneto + "' ") 				+ "," + (ingpesobruto == null ? "NULL" : "'" + ingpesoneto + "' ") 				+ "," + (ingfob == null ? "NULL" : "'" + ingfob + "' ") 				+ "," + (ingcantidad == null ? "NULL" : "'" + ingcantidad + "' ") 				+ "," + (ingciudad_dev == null ? "NULL" : "'" + ingciudad_dev + "' ") 				+ "," + (ingconsec == null ? "NULL" : "'" + ingconsec + "' ") 				+ "," + (ingconseczfp == null ? "NULL" : "'" + ingconseczfp + "' ") 				+ "," + (ingplanilla == null ? "NULL" : "'" + ingplanilla + "' ") 				+ "," + (ingtipoasignacion == null ? "NULL" : "'" + ingtipoasignacion + "' ") +				")";		int resp = db.executeUpdate(insert);		return resp == 0 ? false : true;	}		public boolean crearingreso(String ingcodcia, String ingfecha, String ingtipo, String ingtrafico, String ingobservacion, String ingestado, String ingcausal, String ingcli_devolucion, String ingpesoneto, String ingpesobruto, String ingfob, String ingcantidad, String ingciudad_dev,			String ingconsec, String ingconseczfp, String ingplanilla, String ingtipoasignacion, String ingusuario) throws SQLException {		String insert = "INSERT INTO ingreso (ingcodcia,ingfecha,ingtipo,ingtrafico, ingobservacion, ingestado, ingcausal, ingcli_devolucion," + " ingpesoneto, ingpesobruto, ingfob, ingcantidad, ingciudad_dev, ingconsec, ingconseczfp, ingplanilla,ingtipoasignacion, ingusuario ) VALUES ("				+ (ingcodcia == null ? "NULL" : "'" + ingcodcia + "'") 				+ "," + (ingfecha == null ? "NULL" : "'" + ingfecha + "'") 				+ "," + (ingtipo == null ? "NULL" : "'" + ingtipo + "'") 				+ "," + (ingtrafico == null ? "NULL" : "'" + ingtrafico + "' ") 				+ "," + (ingobservacion == null ? "NULL" : "'" + ingobservacion + "' ") 				+ "," + (ingestado == null ? "NULL" : "'" + ingestado + "' ") 				+ "," + (ingcausal == null ? "NULL" : "'" + ingcausal + "' ") 				+ "," + (ingcli_devolucion == null ? "NULL" : "'" + ingcli_devolucion + "' ") 				+ "," + (ingpesoneto == null ? "NULL" : "'" + ingpesoneto + "' ") 				+ "," + (ingpesobruto == null ? "NULL" : "'" + ingpesoneto + "' ") 				+ "," + (ingfob == null ? "NULL" : "'" + ingfob + "' ") 				+ "," + (ingcantidad == null ? "NULL" : "'" + ingcantidad + "' ") 				+ "," + (ingciudad_dev == null ? "NULL" : "'" + ingciudad_dev + "' ") 				+ "," + (ingconsec == null ? "NULL" : "'" + ingconsec + "' ") 				+ "," + (ingconseczfp == null ? "NULL" : "'" + ingconseczfp + "' ") 				+ "," + (ingplanilla == null ? "NULL" : "'" + ingplanilla + "' ") 				+ "," + (ingtipoasignacion == null ? "NULL" : "'" + ingtipoasignacion + "' ")				+ "," + (ingusuario == null ? "NULL" : "'" + ingusuario + "' ") +				")";		int resp = db.executeUpdate(insert);		return resp == 0 ? false : true;	}	public ingreso getingreso(String ingcodsx) {		String cad = "SELECT * FROM ingreso WHERE ingcodsx='" + ingcodsx + "'";		return (ingreso) getEntidad(cad);	}	public ingreso getingreso(String ingcodcia, String ingfecha, String ingtipo) {		String cad = "SELECT * FROM ingreso WHERE ingcodcia='" + ingcodcia + "' and ingfecha='" + ingfecha + "' and ingtipo='" + ingtipo + "'";		return (ingreso) getEntidad(cad);	}	public ingreso getIngresoByTrafico(String ingcodcia, String trafico, String ingtipo) {		String cad = "SELECT * FROM ingreso WHERE ingcodcia='" + ingcodcia + "' and ingtrafico=" + trafico + " and ingtipo='" + ingtipo + "'";		return (ingreso) getEntidad(cad);	}		public boolean updateingreso(ingreso entity) throws SQLException {		String cad = " update ingreso set  " 				+ " ingcodcia = " + (entity.getingcodcia() == null ? "NULL" : "'" + entity.getingcodcia() + "'") 				+ "," + " ingfecha = " + (entity.getingfecha() == null ? "NULL" : "'" + entity.getingfecha() + "'") 				+ "," + " ingtipo = " + (entity.getingtipo() == null ? "NULL" : "'" + entity.getingtipo() + "'")				+ "," + " ingtrafico = " + (entity.getingtrafico() == null ? "NULL" : "'" + entity.getingtrafico() + "'") 				+ ", " + " ingobservacion= " + (entity.getIngobservacion() == null ? "NULL" : "'" + entity.getIngobservacion() + "'") 				+ ", " + " ingestado = " + (entity.getIngestado() == null ? "NULL" : "'" + entity.getIngestado() + "'") 				+ ", " + " ingcausal = " + (entity.getIngcausal() == null ? "NULL" : "'" + entity.getIngcausal() + "'") 				+ ", " + " ingcli_devolucion= " + (entity.getIngcli_devolucion() == null ? "NULL" : "'" + entity.getIngcli_devolucion() + "'") 				+ ", " + " ingpesoneto= " + (entity.getIngpesoneto() == null ? "NULL" : "'" + entity.getIngpesoneto() + "'") 				+ ", " + " ingpesobruto= " + (entity.getIngpesobruto() == null ? "NULL" : "'" + entity.getIngpesobruto() + "'") 				+ ", " + " ingfob= " + (entity.getIngfob() == null ? "NULL" : "'" + entity.getIngfob() + "'") 				+ ", " + " ingcantidad= " + (entity.getIngcantidad() == null ? "NULL" : "'" + entity.getIngcantidad() + "'") 				+ ", " + " ingciudad_dev= " + (entity.getIngciudad_dev() == null ? "NULL" : "'" + entity.getIngciudad_dev() + "'") 				+ ", " + " ingconsec= " + (entity.getIngconsec() == null ? "NULL" : "'" + entity.getIngconsec() + "'") 				+ ", " + " ingconseczfp= "	+ (entity.getIngconseczfp() == null ? "NULL" : "'" + entity.getIngconseczfp() + "'") 				+ ", " + " ingplanilla= " + (entity.getIngplanilla() == null ? "NULL" : "'" + entity.getIngplanilla() + "'") 				+ ", " + " ingtipoasignacion= " + (entity.getIngtipoasignacion() == null ? "NULL" : "'" + entity.getIngtipoasignacion() + "'") 				+ " where ingcodsx = " + entity.getingcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean updateingreso(ingresoForm entity) throws SQLException {		String cad = " update ingreso set  " 				+ " ingcodcia = " + (entity.getingcodcia() == null ? "NULL" : "'" + entity.getingcodcia() + "'") 				+ "," + " ingfecha = " + (entity.getingfecha() == null ? "NULL" : "'" + entity.getingfecha() + "'") 				+ "," + " ingtipo = " + (entity.getingtipo() == null ? "NULL" : "'" + entity.getingtipo() + "'")				+ "," + " ingtrafico = " + (entity.getingtrafico() == null ? "NULL" : "'" + entity.getingtrafico() + "'") 				+ ", " + " ingobservacion= " + (entity.getIngobservacion() == null ? "NULL" : "'" + entity.getIngobservacion() + "'") 				+ ", " + " ingestado = " + (entity.getIngestado() == null ? "NULL" : "'" + entity.getIngestado() + "'") 				+ ", " + " ingcausal = " + (entity.getIngcausal() == null ? "NULL" : "'" + entity.getIngcausal() + "'") 				+ ", " + " ingcli_devolucion= " + (entity.getIngcli_devolucion() == null ? "NULL" : "'" + entity.getIngcli_devolucion() + "'") 				+ ", " + " ingpesoneto= " + (entity.getIngpesoneto() == null ? "NULL" : "'" + entity.getIngpesoneto() + "'") 				+ ", " + " ingpesobruto= " + (entity.getIngpesobruto() == null ? "NULL" : "'" + entity.getIngpesobruto() + "'") 				+ ", " + " ingfob= " + (entity.getIngfob() == null ? "NULL" : "'" + entity.getIngfob() + "'") 				+ ", " + " ingcantidad= " + (entity.getIngcantidad() == null ? "NULL" : "'" + entity.getIngcantidad() + "'") 				+ ", " + " ingciudad_dev= " + (entity.getIngciudad_dev() == null ? "NULL" : "'" + entity.getIngciudad_dev() + "'") 				+ ", " + " ingconsec= " + (entity.getIngconsec() == null ? "NULL" : "'" + entity.getIngconsec() + "'") 				+ ", " + " ingconseczfp= "	+ (entity.getIngconseczfp() == null ? "NULL" : "'" + entity.getIngconseczfp() + "'") 				+ ", " + " ingplanilla= " + (entity.getIngplanilla() == null ? "NULL" : "'" + entity.getIngplanilla() + "'") 				+ ", " + " ingtipoasignacion= " + (entity.getIngtipoasignacion() == null ? "NULL" : "'" + entity.getIngtipoasignacion() + "'") 				+ " where ingcodsx = " + entity.getingcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}		public boolean updateIngresoMovil(String ingTrafico, String estado) throws SQLException {		String cad = " update ingreso set  " 				+ " ingestado = " + (estado == null ? "NULL" : "'" + estado + "'") 				+ " where ingtrafico = " + ingTrafico;		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean eliminar(String ingcodsx) throws SQLException {		String elim = " delete from ingreso where ingcodsx = '" + ingcodsx + "'";		int r = db.executeUpdate(elim);		return r == 0 ? false : true;	}	public int getTotalReferenciasIngreso(String ingcodsx) {		String cad = "select  count(distinct producto.procodsx) from producto,entrada where " + " procodsx = entcodproducto and entcodingreso = " + ingcodsx;		return getConteo(cad);	}	public String getTotalUnidadesIngreso(String ingcodsx) {		String cad = "select  sum(entcantidad) from entrada where " + " entcodingreso = " + ingcodsx;		String resp = getCampo(cad);		return resp == null ? "0.00" : resp;	}	public Collection getlistaingreso_nacionalizaciones(String ingcodcia, String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " select distinct ingcodsx, ingcodcia, ingfecha, ingtipo, ingtrafico, trafdocumento as ingobservacion, " + "	trafnumdta as ingestado, trafembarque as ingcausal, ingcli_devolucion, "				+ "ingpesoneto, ingpesobruto, ingfob, ingcantidad, ingciudad_dev, ingreso.resumen , ingconsec, ingconseczfp, ingplanilla, ingtipoasignacion  " + "from ingreso, trafico, entrada where entcodingreso = ingcodsx and entsaldosinnac >0  and " + "	ingtrafico = trafcodsx and ingcodcia = " + ingcodcia				+ " and ingtipo='TRAFICO' and ingestado= 'FINALIZADO' " + "	and ( trafdocumento like '%" + param + "%' or trafnumdta like '%" + param + "%')" + "  limit " + this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistaingreso_nacionalizaciones(String ingcodcia, String param) {		param = param == null ? "" : param;		String consulta = " select count(distinct ingcodsx) from ingreso, trafico, entrada  where entcodingreso = ingcodsx and entsaldosinnac >0 and " + "	ingtrafico = trafcodsx and ingcodcia = " + ingcodcia + " and ingtipo='TRAFICO' and ingestado= 'FINALIZADO' " + "	and ( trafdocumento like '%"				+ param + "%' or trafnumdta like '%" + param + "%')";		return getPaginas(consulta);	}	public Collection getlistaingreso_manual(String ingcodcia, String tipo, String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String saldo = tipo != null && tipo.equalsIgnoreCase("NAC") ? "entsaldonac" : "entsaldosinnac";		String consulta = " select distinct ingcodsx, ingcodcia, ingfecha, ingtipo, ingtrafico, trafdocumento as ingobservacion, " + "	trafnumdta as ingestado, trafembarque as ingcausal, ingcli_devolucion, "				+ "ingpesoneto, ingpesobruto, ingfob, ingcantidad, ingciudad_dev, ingreso.resumen , ingconsec, ingconseczfp, ingplanilla, ingtipoasignacion  " + "from ingreso, trafico, entrada where entcodingreso = ingcodsx and "				+ saldo				+ " >0  and "				+ "	ingtrafico = trafcodsx and ingcodcia = "				+ ingcodcia				+ " and ingtipo='TRAFICO' and ingestado= 'FINALIZADO' "				+ "	and ( trafdocumento like '%"				+ param				+ "%' or trafnumdta like '%"				+ param				+ "%')"				+ " UNION "				+ " select distinct ingcodsx, ingcodcia, ingfecha, ingtipo, ingtrafico, '' as ingobservacion, "				+ "	'' as ingestado, '' as ingcausal, ingcli_devolucion, "				+ "ingpesoneto, ingpesobruto, ingfob, ingcantidad, ingciudad_dev, ingreso.resumen , ingconsec, ingconseczfp, ingplanilla, ingtipoasignacion  "				+ "from ingreso, entrada where entcodingreso = ingcodsx and "				+ saldo				+ " >0  and "				+ "  ingcodcia = "				+ ingcodcia				+ " and ingtipo!='TRAFICO' and ingestado= 'FINALIZADO' "				+ "  order by ingcodsx desc "				+ "  limit "				+ this.maxfilas				+ " offset  "				+ (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistaingreso_manual(String ingcodcia, String tipo, String param) {		param = param == null ? "" : param;		String saldo = tipo != null && tipo.equalsIgnoreCase("NAC") ? "entsaldonac" : "entsaldosinnac";		String consulta = " select count(distinct ingcodsx) from ingreso, trafico, entrada  where entcodingreso = ingcodsx and " + saldo + " >0 and " + "	ingtrafico = trafcodsx and ingcodcia = " + ingcodcia + " and ingtipo='TRAFICO' and ingestado= 'FINALIZADO' " + "	and ( trafdocumento like '%"				+ param + "%' or trafnumdta like '%" + param + "%')";		return getPaginas(consulta);	}	public Collection getlistaingreso_saldo_mayor_cero(String ingcodcia, String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " select DISTINCT ingreso.* from ingreso, entrada where ingcodcia = " + ingcodcia + " and ingestado='FINALIZADO' AND entcodingreso = ingcodsx and (entsaldonac >0 or entsaldosinnac >0)  " + " and " + getTextoBusquedaResumen("ingreso", param) + " " + "  limit "				+ this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistaingreso_saldo_mayor_cero(String ingcodcia, String param) {		param = param == null ? "" : param;		String consulta = " select count (DISTINCT ingreso.ingcodsx) from ingreso, entrada where ingcodcia = " + ingcodcia + " " + " and ingestado='FINALIZADO' AND entcodingreso = ingcodsx and (entsaldonac >0 or entsaldosinnac >0)" + " and " + getTextoBusquedaResumen("ingreso", param) + " " + "  ";		return getPaginas(consulta);	}	public Collection getlistaingresoByTrafico(String ingtrafico) {		String consulta = " SELECT * FROM ingreso where ingtrafico=" + ingtrafico;		return getLista(consulta);	}	public Collection getlistaingresoFinalizadoByTrafico(String ingtrafico) {		String consulta = " SELECT * FROM ingreso where ingtrafico=" + ingtrafico + " and ingestado='FINALIZADO'";		return getLista(consulta);	}	public Collection getlistaingresoByCia(String compania, String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " SELECT * FROM ingreso where ingcodcia =" + compania + "  and " + getTextoBusquedaResumen(param) + "  limit " + this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistaingresoByCia(String compania, String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM ingreso where ingcodcia =" + compania + "  and " + getTextoBusquedaResumen(param);		return getPaginas(consulta);	}	public Collection getlistaingresoByCia(String compania, String estado, String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " SELECT * FROM ingreso where ingcodcia =" + compania + "  and ingestado= '" + estado + "'  and " + getTextoBusquedaResumen(param) + "  limit " + this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistaingresoByCia(String compania, String estado, String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM ingreso where ingcodcia =" + compania + "  and ingestado= '" + estado + "'  and " + getTextoBusquedaResumen(param);		return getPaginas(consulta);	}	public ingreso getingresoBytrafembarque(String ingcodcia, String trafembarque) {		String cad = "SELECT ingreso.* FROM ingreso, trafico WHERE ingtrafico = trafcodsx " + "and trafcompania =  " + ingcodcia + "  and trafembarque= '" + trafembarque + "'";		return (ingreso) getEntidad(cad);	}	public ingreso getingresoByKA(String ingcodcia, String ka) {		String cad = "SELECT ingreso.* FROM ingreso WHERE ingcodcia = " + ingcodcia + "  and ingobservacion= '" + ka + "'";		return (ingreso) getEntidad(cad);	}		public boolean crearEntradasTraficoMovil (String codBarra, String codingreso, String codtrafico, String codbodega, String posicion, String cantidad) throws SQLException {		//Cual es la cantidad		/*String insert = "INSERT INTO movimiento.entrada (entcodingreso, entcodproducto, entbodega, entposicion, entcantidad, entpesoneto, entpesonetototal, entpesobruto, entpesobrutototal, entsaldopesoneto,entsaldopesobruto,entsaldonac,entsaldosinnac, entvalor, entvalortotal,entsaldonacf, entsaldosinnacf, entunidad) " +				"select " + codingreso + ",procodsx," + codbodega + ",'" + posicion + "'||ftrafnumtrafico,reftcantidad, reftpesoneto, reftpesoneto*reftcantidad,reftpesoneto, reftpesoneto*reftcantidad, 0,0,0,0,reftfobunit,reftfobunit*reftcantidad,0,0,'UND' " +				"from public.producto, movimiento.referencia_trafico, movimiento.factura_trafico " + 					"where procodsx = reftproducto and reftnumfacturatrafico = ftrafnumtrafico " +				"and ftrafnumtrafico = " + codtrafico + " and procodigobarra = '"  + codBarra + "'" +                " group by procodsx, reftcantidad, reftpesoneto, reftfobunit, prouniempaque, ftrafnumtrafico "+                "order by procodsx desc";*/						String insert = "INSERT INTO movimiento.entrada (entcodingreso, entcodproducto, entbodega, entposicion, entcantidad, entpesoneto, entpesonetototal, entpesobruto, entpesobrutototal, entsaldopesoneto,entsaldopesobruto,entsaldonac,entsaldosinnac, entvalor, entvalortotal,entsaldonacf, entsaldosinnacf, entunidad) " +				"select " + codingreso + ",procodsx," + codbodega + ",'" + posicion + "'," + cantidad + ", 0, 0,0, 0, 0,0,0,0,0,0,0,0,'UND' " +				"from public.producto, movimiento.ingreso " + 					"where ingtrafico = " + codtrafico + " and procodigobarra = '"  + codBarra + "'" +                "order by procodsx desc";		System.out.println(insert);		int resp = db.executeUpdate(insert);		return resp == 0 ? false : true;	}		public boolean crear_entradas_trafico (String codcia, String codingreso, String codtrafico, String codbodega, String posicion, String lctrafcodsx) throws SQLException {		/*		String noseusa_insertaba_entradas = "INSERT INTO entrada (entcodingreso, entcodproducto, entbodega, entposicion, entcantidad, entpesoneto, entpesonetototal, entpesobruto, entpesobrutototal, entsaldopesoneto,entsaldopesobruto,entsaldonac,entsaldosinnac, entvalor, entvalortotal,entsaldonacf, entsaldosinnacf, entunidad) " +				"select " + codingreso + ",procodsx," + codbodega + ",'" + posicion + "'||ftrafcodsx,reftcantidad, reftpesoneto, reftpesoneto*reftcantidad,reftpesoneto, reftpesoneto*reftcantidad, 0,0,0,0,reftfobunit,reftfobunit*reftcantidad,0,0,'UND' " +				"from producto, referencia_trafico, factura_trafico " + 					"where procodsx = reftproducto and reftnumfacturatrafico = ftrafcodsx " +				"and ftrafnumtrafico = " + codtrafico + " and procodigocia = "  + codcia +                " group by procodsx, reftcantidad, reftpesoneto, reftfobunit, prouniempaque, ftrafcodsx "+                "order by procodsx desc";  		String noseusa_jalaba_referencia_trafico = "select (select * from movimiento.entrada_x_estiba ( " +				 codingreso + ",procodsx," + codbodega + ",''::character varying,reftcantidad, reftpesoneto, reftpesoneto*reftcantidad,reftpesoneto, reftpesoneto*reftcantidad," +			    " 0,0,0,0,reftfobunit,reftfobunit*reftcantidad,0,0,'UND'::character varying, null::integer)) " +				"from producto, referencia_trafico, factura_trafico " + 					"where procodsx = reftproducto and reftnumfacturatrafico = ftrafcodsx " +				"and ftrafnumtrafico = " + codtrafico + " and procodigocia = "  + codcia +                "group by procodsx, reftcantidad, reftpesoneto, reftfobunit, prouniempaque, ftrafcodsx "+                "order by procodsx desc";		*//* se cambia pra pruebas en muma		String cad = "select (select distinct * from movimiento.entrada_x_estiba ( " +				codingreso + ",procodsx," + codbodega + ",''::character varying,lctrafcantidad,reftpesoneto, reftpesoneto*lctrafcantidad,reftpesoneto, reftpesoneto*lctrafcantidad," +				" 0,0,0,0,reftfobunit,reftfobunit*lctrafcantidad,0,0,proump::character varying, ltrafcodsx, lctrafcodsx)) " +				" from lote_trafico " +				" inner join lote_contenedor_trafico on lctraflote = ltrafcodsx and lctrafcodsx = " + lctrafcodsx +				" inner join producto on procodsx = ltrafcodproducto " +				" inner join factura_trafico on ftrafnumtrafico = ltrafnumtrafico " +				" inner join referencia_trafico on reftnumfacturatrafico = ftrafcodsx and reftproducto = ltrafcodproducto " +				" where ltrafnumtrafico = " + codtrafico + " and procodigocia = "  + codcia +				" order by procodsx asc";*/				String cad = "select distinct movimiento.entrada_x_estiba ( " +				codingreso + ",procodsx," + codbodega + ",''::character varying,lctrafcantidad,max(reftpesoneto), max(reftpesoneto)*lctrafcantidad,max(reftpesoneto), max(reftpesoneto)*lctrafcantidad," +				" 0,0,0,0,max(reftpesoneto),max(reftpesoneto)*lctrafcantidad,0,0,proump::character varying, lctraflote,lctrafcodsx) " +				" from lote_trafico " +				" inner join lote_contenedor_trafico on lctraflote = ltrafcodsx and lctrafcodsx = " + lctrafcodsx +				" inner join producto on procodsx = ltrafcodproducto " +				" inner join factura_trafico on ftrafnumtrafico = ltrafnumtrafico " +				" inner join referencia_trafico on reftnumfacturatrafico = ftrafcodsx and reftproducto = ltrafcodproducto " +				" where ltrafnumtrafico = " + codtrafico + " and procodigocia = "  + codcia +				" group by procodsx, lctrafcantidad, proump, ltrafcodsx, lctrafcodsx ";				getCampo(cad);		return true;	}		public boolean crear_entradas_lote_contenedor_trafico(String lctrafcodsx, String codcia, String codingreso, String codtrafico, String codbodega, String posicion) throws SQLException {	//este metodo no se esta usando		String cad = "select (select * from movimiento.entrada_x_estiba ( " +				codingreso + ",procodsx," + codbodega + ",''::character varying,lctrafcantidad,max(reftpesoneto), max(reftpesoneto)*lctrafcantidad,max(reftpesoneto), max(reftpesoneto)*lctrafcantidad," +				" 0,0,0,0,max(reftpesoneto),max(reftpesoneto)*lctrafcantidad,0,0,proump::character varying, ltrafcodsx)) " +				" from lote_trafico " +				" inner join lote_contenedor_trafico on lctraflote = ltrafcodsx and lctrafcodsx = " + lctrafcodsx +				" inner join producto on procodsx = ltrafcodproducto " +				" inner join factura_trafico on ftrafnumtrafico = ltrafnumtrafico " +				" inner join referencia_trafico on reftnumfacturatrafico = ftrafcodsx and reftproducto = ltrafcodproducto " +				" where ltrafnumtrafico = " + codtrafico + " and procodigocia = "  + codcia +				" group by procodsx, 1,lctrafcantidad, proump,ltrafcodsx.lctrafcodsx " +				" order by procodsx asc";		getCampo(cad);		return true;			}		public boolean tiene_entradas_sin_posicion(String ingcodsx) {		String cad = "select count(1) from entrada where entcodingreso = " + ingcodsx + " and (entposicion is null or entposicion='')";		int cant = getConteo(cad);		if (cant > 0) {			return true;		} else {			return false;		}	}	}