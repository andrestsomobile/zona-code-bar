package ingreso.control;import ingreso.form.*;import ingreso.entity.*;import db.*;import java.util.Collection;import java.sql.SQLException;  /*************************************************************CLASE GENERADA CON generator V3.0 By pablito*******/public class gstreubicacion extends GstTabla { public gstreubicacion() {  db= new beanConnector();  this.classEntidad =reubicacion.class; 
}public gstreubicacion(beanConnector db) {  this.db= db;  this.classEntidad =reubicacion.class; 
}public Collection getlistareubicacion() {String consulta = " SELECT * FROM reubicacion";    return getLista(consulta);  }public Collection getlistareubicacion(String start, String param ) { start= start==null ? "0" :  start;   param= param==null ? "" :  param; String consulta = " SELECT * FROM reubicacion where " +  getTextoBusquedaResumen(param) + " order by recodsx desc " +  "  limit " + this.maxfilas  + " offset  " + (Integer.parseInt(start) * this.maxfilas);     return getLista(consulta);  } public int getTotalPaginaslistareubicacion(String param) {  param= param==null ? "" :  param; String consulta = " SELECT count(1) FROM reubicacion where  "  + getTextoBusquedaResumen(param);      return getPaginas(consulta);  	}  public boolean crearreubicacion(String recodcia, String reingreso, String retipo,		 String reentradaor,String reentradafin,String recantidad,String reestado,		 String refecha, String retipomov) throws SQLException { String insert = "INSERT INTO reubicacion (recodcia, reingreso, retipo,reentradaor,reentradafin," + 		"recantidad,reestado,refecha, retipomov) VALUES (" +  (recodcia==null ? "NULL" : "'" + recodcia+"'") + "," +  (reingreso==null ? "NULL" : "'" + reingreso+"'") + "," +   (retipo==null ? "NULL" : "'" + retipo+"'") + "," +   (reentradaor==null ? "NULL" : "'" + reentradaor+"'") + "," +   (reentradafin==null ? "NULL" : "'" + reentradafin+"'") + "," +   (recantidad==null ? "NULL" : "'" + recantidad+"'") + "," +   (reestado==null ? "NULL" : "'" + reestado+"'") + "," +   (refecha==null ? "NULL" : "'" + refecha+"'")   + "," + (retipomov==null ? "NULL" : "'" + retipomov+"'")   + ")";int resp = db.executeUpdate(insert);return resp ==0 ? false : true;  } public reubicacion getreubicacion(String recodsx) { String cad = "SELECT * FROM reubicacion WHERE recodsx='"+recodsx+ "'" ; return (reubicacion)getEntidad(cad);  }public boolean updatereubicacion( reubicacion entity ) throws SQLException {  String cad = " update reubicacion set  " + " recodcia= " + ( entity.getrecodcia() == null ? "NULL": "'" + entity.getrecodcia() + "'" ) + "," +" reingreso = " + ( entity.getreingreso() == null ? "NULL": "'" + entity.getreingreso() + "'" ) + "," +" retipo = " + ( entity.getretipo() == null ? "NULL": "'" + entity.getretipo() + "'" ) + "," + " reentradaor = " + ( entity.getreentradaor() == null ? "NULL": "'" + entity.getreentradaor() + "'" ) + "," + " reentradafin = " + ( entity.getreentradafin() == null ? "NULL": "'" + entity.getreentradafin() + "'" ) + "," + " recantidad = " + ( entity.getrecantidad() == null ? "NULL": "'" + entity.getrecantidad() + "'" ) + "," + " reestado = " + ( entity.getreestado() == null ? "NULL": "'" + entity.getreestado() + "'" ) + "," + " refecha = " +( entity.getrefecha() == null ? "NULL": "'" + entity.getrefecha()  + "'" ) + "," +" retipomov = " +( entity.getRetipomov() == null ? "NULL": "'" + entity.getRetipomov()  + "'"  ) + " where recodsx = " +  entity.getrecodsx() ;   int resp= db.executeUpdate(cad);      return resp ==0 ? false : true ;      } public boolean updatereubicacion( reubicacionForm entity ) throws SQLException {  String cad = " update reubicacion set  " +  " recodcia= " + ( entity.getRecodcia() == null ? "NULL": "'" + entity.getRecodcia() + "'" ) + "," +" reingreso = " + ( entity.getreingreso() == null ? "NULL": "'" + entity.getreingreso() + "'" ) + "," + " retipo = " + ( entity.getretipo() == null ? "NULL": "'" + entity.getretipo() + "'" ) + "," + " reentradaor = " + ( entity.getreentradaor() == null ? "NULL": "'" + entity.getreentradaor() + "'" ) + "," + " reentradafin = " + ( entity.getreentradafin() == null ? "NULL": "'" + entity.getreentradafin() + "'" ) + "," + " recantidad = " + ( entity.getrecantidad() == null ? "NULL": "'" + entity.getrecantidad() + "'" ) + "," + " reestado = " + ( entity.getreestado() == null ? "NULL": "'" + entity.getreestado() + "'" ) + "," + " refecha = " +( entity.getrefecha() == null ? "NULL": "'" + entity.getrefecha()  + "'" ) + "," +" retipomov = " +( entity.getRetipomov() == null ? "NULL": "'" + entity.getRetipomov()  + "'"  ) + " where recodsx = " +  entity.getrecodsx() ;   int resp= db.executeUpdate(cad);      return resp ==0 ? false : true ;      }  public boolean eliminar(String recodsx) throws SQLException {   String elim = " delete from reubicacion where recodsx = '"+ recodsx+ "'"; int r = db.executeUpdate(elim) ; return  r==0? false : true ;  }   public reubicacion getreubicacion(String recodcia, String refecha) {	 String cad = "SELECT * FROM reubicacion WHERE recodcia='"+recodcia+ "' and refecha='" + refecha+"' " ;	 return (reubicacion)getEntidad(cad);  } }