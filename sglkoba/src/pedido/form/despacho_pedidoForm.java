package pedido.form;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import pedido.control.*;import pedido.entity.*;import org.apache.struts.action.ActionMessage;/** * CLASE GENERADA CON generator V3.0 By pablito****** *  * @uml.dependency supplier="pedido.entity.despacho_pedido" */public class despacho_pedidoForm extends ActionForm {	private String despedcodsx;	private String despeddespacho;	private String despedpedido;	private String opcion;	/**	 * @uml.property name="despedbultos"	 */	private String despedbultos;	/**	 * @uml.property name="despedbultosarmados"	 */	private String despedbultosarmados;		private String despedvalorfac;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getdespedcodsx() {		return despedcodsx;	}	public String getdespeddespacho() {		return despeddespacho;	}	public String getdespedpedido() {		return despedpedido;	}	public void setdespedcodsx(String new_despedcodsx) {		this.despedcodsx = new_despedcodsx;	}	public void setdespeddespacho(String new_despeddespacho) {		this.despeddespacho = new_despeddespacho;	}	public void setdespedpedido(String new_despedpedido) {		this.despedpedido = new_despedpedido;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstdespacho_pedido gdespacho_pedido = new gstdespacho_pedido();		opcion = opcion == null ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;		if (opcion.equals("crear")) {			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS		}		// valido campos requeridos:		if (!opcion.equals("automaticodespacho") && !opcion.equals("automaticodespacho_pedido") && !opcion.equals("fijar_bultos") ){			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS			if (despeddespacho == null || (despedpedido !=  null && despeddespacho.equals("")))				errors.add("despeddespacho", new ActionMessage("El despeddespacho no puede ser vacio", false));			if (despedpedido.equals(""))				errors.add("despedpedido", new ActionMessage("El despedpedido no puede ser vacio", false));				try {				Float.parseFloat(despedbultos);			} catch (Exception ne) {				errors.add("despedbultos", new ActionMessage("Los bultos no pueden ser vacio", false));			}				try {				Float.parseFloat(despedbultosarmados);			} catch (Exception ne) {				errors.add("despedbultosarmados", new ActionMessage("Los Bultos Armados no pueden ser vacio", false));			}				if (!errors.isEmpty())				errors.add("general", new ActionMessage("No se pudo crear , revise", false));		}		return errors;	}	public void llenar(despacho_pedido entity) {		this.despedcodsx = entity.getdespedcodsx();		this.despeddespacho = entity.getdespeddespacho();		this.despedpedido = entity.getdespedpedido();	}	/**	 * @return	 * @uml.property name="despedbultos"	 */	public String getDespedbultos() {		return despedbultos;	}	/**	 * @param despedbultos	 * @uml.property name="despedbultos"	 */	public void setDespedbultos(String despedbultos) {		this.despedbultos = despedbultos;	}	/**	 * @return	 * @uml.property name="despedbultosarmados"	 */	public String getDespedbultosarmados() {		return despedbultosarmados;	}	/**	 * @param despedbultosarmados	 * @uml.property name="despedbultosarmados"	 */	public void setDespedbultosarmados(String despedbultosarmados) {		this.despedbultosarmados = despedbultosarmados;	}		public String getDespedvalorfac() {		return despedvalorfac;	}	public void setDespedvalorfac(String despedvalorfac) {		this.despedvalorfac = despedvalorfac;	}}