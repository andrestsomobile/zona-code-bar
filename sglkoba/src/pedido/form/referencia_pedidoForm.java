package pedido.form;import javax.servlet.http.HttpServletRequest;import maestro.control.gstproducto;import maestro.entity.producto;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import pedido.control.*;import pedido.entity.*;import util.validador;import org.apache.struts.action.ActionMessage;/** * CLASE GENERADA CON generator V3.0 By pablito****** */public class referencia_pedidoForm extends ActionForm {	private String refpcodsx;	private String refpnumpedido;	private String refpproducto;	private String refpbodega;	private String refpposicion;	private String refpcantidad;	private String refpvalorunit;	private String refpvalortotal;	private String refpentrada;	private String refpnacdetalle;	private String refpsaldo;	private String refppesoneto;	private String refppesobruto;	private String refppesonetototal;	private String refppesobrutototal;	private String opcion;	private String prodesc;	private String procodsx;	private String cantidad;	private String valorunit;	private String ingreso;		private String refpvalorfacunit;	private String refpvalorfactotal;		private String valorfacunit;		private String tipocantidad;		public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getrefpcodsx() {		return refpcodsx;	}	public String getrefpnumpedido() {		return refpnumpedido;	}	public String getrefpproducto() {		return refpproducto;	}	public String getrefpposicion() {		return refpposicion;	}	public String getrefpcantidad() {		return refpcantidad;	}	public String getrefpvalorunit() {		return refpvalorunit;	}	public String getrefpvalortotal() {		return refpvalortotal;	}	public void setrefpcodsx(String new_refpcodsx) {		this.refpcodsx = new_refpcodsx;	}	public void setrefpnumpedido(String new_refpnumpedido) {		this.refpnumpedido = new_refpnumpedido;	}	public void setrefpproducto(String new_refpproducto) {		this.refpproducto = new_refpproducto;	}	public void setrefpposicion(String new_refpposicion) {		this.refpposicion = new_refpposicion;	}	public void setrefpcantidad(String new_refpcantidad) {		this.refpcantidad = new_refpcantidad;	}	public void setrefpvalorunit(String new_refpvalorunit) {		this.refpvalorunit = new_refpvalorunit;	}	public void setrefpvalortotal(String new_refpvalortotal) {		this.refpvalortotal = new_refpvalortotal;	}	public String gettipocantidad() {		return tipocantidad;	}	public void settipocantidad(String tipocantidad) {		this.tipocantidad = tipocantidad;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstreferencia_pedido greferencia_pedido = new gstreferencia_pedido();		gstproducto gprod = new gstproducto();				opcion = opcion == null ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete") || opcion.equals("modificar"))			return null;		if (opcion.equals("agregar_total")) {			if (procodsx.equals(""))				errors.add("procodsx", new ActionMessage("Debe ingresar el producto no puede ser vacio", false));			if (!validador.validarNumero(cantidad))				errors.add("cantidad", new ActionMessage("Debe ingresar la cantidad y debe ser numerico", false));			if (!validador.validarNumero(valorunit))				errors.add("valorunit", new ActionMessage("Debe ingresar el valor unitario y debe ser numerico", false));			if (!validador.validarNumero(valorfacunit))				errors.add("valorfacunit", new ActionMessage("Debe ingresar el valor facturado unitario y debe ser numerico", false));			//se valida que retire cantidades multiplos de ump x estiba			if (procodsx != null && !procodsx.equals("") && validador.validarNumero(cantidad) && tipocantidad != null && !tipocantidad.equalsIgnoreCase("UNIDAD")) {				producto prod = gprod.getproducto(procodsx);				try {					int v_cantidad = (int) Float.parseFloat(cantidad);					int v_und_estiba = (int) Float.parseFloat(prod.getprounimasterpac());					int residuo = v_cantidad % v_und_estiba;					if (residuo != 0) {						errors.add("cantidad", new ActionMessage("Debe registrar la cantidad acorde a las UMP x Estiba", false));					}			 	} catch(Exception e) {   			 		errors.add("cantidad", new ActionMessage("Debe registrar la cantidad acorde a las UMP x Estiba", false));			 	}							}		} else {			// valido campos requeridos:			if (refpproducto.equals(""))				errors.add("refpproducto", new ActionMessage("Debe ingresar el producto no puede ser vacio", false));			if (refpproducto.equals(""))				errors.add("refpproducto", new ActionMessage("Debe ingresar el producto no puede ser vacio", false));			if (refpposicion.equals(""))				errors.add("refpposicion", new ActionMessage("Debe ingresar la posicion no puede ser vacio", false));			if (refpcantidad.equals(""))				errors.add("refpcantidad", new ActionMessage("Debe escribir la cantidad ", false));			try {				Float.parseFloat(refpcantidad);			} catch (NumberFormatException nf) {				errors.add("refpcantidad", new ActionMessage("La cantidad debe ser numerica no puede ser vacio", false));			}			if (refpvalorunit.equals(""))				errors.add("refpvalorunit", new ActionMessage("El valor unitario no puede ser vacio", false));			try {				Float.parseFloat(refpvalorunit);			} catch (NumberFormatException nf) {				errors.add("refpvalorunit", new ActionMessage("El valor unitario debe ser numerico no puede ser vacio", false));			}			if (refpvalorfacunit.equals(""))				errors.add("refpvalorfacunit", new ActionMessage("El valor facturado unitario no puede ser vacio", false));			try {				Float.parseFloat(refpvalorfacunit);			} catch (NumberFormatException nf) {				errors.add("refpvalorfacunit", new ActionMessage("El Valor facturado unitario debe ser numerico y no puede ser vacio", false));			}					}		if (!errors.isEmpty())			errors.add("general", new ActionMessage("No se pudo guardar los datos , revise", false));		return errors;	}	public void llenar(referencia_pedido entity) {		this.refpcodsx = entity.getrefpcodsx();		this.refpnumpedido = entity.getrefpnumpedido();		this.refpproducto = entity.getrefpproducto();		this.refpposicion = entity.getrefpposicion();		this.refpcantidad = entity.getrefpcantidad();		this.refpvalorunit = entity.getrefpvalorunit();		this.refpvalortotal = entity.getrefpvalortotal();		this.refpbodega = entity.getRefpbodega();		this.refpentrada = entity.getRefpentrada();		this.refpnacdetalle = entity.getRefpnacdetalle();		refppesoneto = entity.getRefppesoneto();		refppesobruto = entity.getRefppesobruto();		this.refppesobrutototal = entity.getRefppesobrutototal();		this.refppesonetototal = entity.getRefppesonetototal();		this.refpvalorfacunit = entity.getRefpvalorfacunit();		this.refpvalorfactotal = entity.getRefpvalorfactotal();			// lleno el producto:		gstproducto gprod = new gstproducto();		producto prod = gprod.getproducto(refpproducto);		if (prod != null)			prodesc = prod.getpromodelo();	}	/**	 * @return	 * @uml.property name="prodesc"	 */	public String getProdesc() {		return prodesc;	}	/**	 * @param prodesc	 * @uml.property name="prodesc"	 */	public void setProdesc(String prodesc) {		this.prodesc = prodesc;	}	/**	 * @return	 * @uml.property name="refpbodega"	 */	public String getRefpbodega() {		return refpbodega;	}	/**	 * @param refpbodega	 * @uml.property name="refpbodega"	 */	public void setRefpbodega(String refpbodega) {		this.refpbodega = refpbodega;	}	/**	 * @return	 * @uml.property name="refpentrada"	 */	public String getRefpentrada() {		return refpentrada;	}	/**	 * @param refpentrada	 * @uml.property name="refpentrada"	 */	public void setRefpentrada(String refpentrada) {		this.refpentrada = refpentrada;	}	/**	 * @return	 * @uml.property name="refpnacdetalle"	 */	public String getRefpnacdetalle() {		return refpnacdetalle;	}	/**	 * @param refpnacdetalle	 * @uml.property name="refpnacdetalle"	 */	public void setRefpnacdetalle(String refpnacdetalle) {		this.refpnacdetalle = refpnacdetalle;	}	/**	 * @return	 * @uml.property name="refpsaldo"	 */	public String getRefpsaldo() {		return refpsaldo;	}	/**	 * @param refpsaldo	 * @uml.property name="refpsaldo"	 */	public void setRefpsaldo(String refpsaldo) {		this.refpsaldo = refpsaldo;	}	/**	 * @return	 * @uml.property name="refppesobruto"	 */	public String getRefppesobruto() {		return refppesobruto;	}	/**	 * @param refppesobruto	 * @uml.property name="refppesobruto"	 */	public void setRefppesobruto(String refppesobruto) {		this.refppesobruto = refppesobruto;	}	/**	 * @return	 * @uml.property name="refppesoneto"	 */	public String getRefppesoneto() {		return refppesoneto;	}	/**	 * @param refppesoneto	 * @uml.property name="refppesoneto"	 */	public void setRefppesoneto(String refppesoneto) {		this.refppesoneto = refppesoneto;	}	/**	 * @return	 * @uml.property name="refppesobrutototal"	 */	public String getRefppesobrutototal() {		return refppesobrutototal;	}	/**	 * @param refppesobrutototal	 * @uml.property name="refppesobrutototal"	 */	public void setRefppesobrutototal(String refppesobrutototal) {		this.refppesobrutototal = refppesobrutototal;	}	/**	 * @return	 * @uml.property name="refppesonetototal"	 */	public String getRefppesonetototal() {		return refppesonetototal;	}	/**	 * @param refppesonetototal	 * @uml.property name="refppesonetototal"	 */	public void setRefppesonetototal(String refppesonetototal) {		this.refppesonetototal = refppesonetototal;	}	/**	 * @return	 * @uml.property name="ingreso"	 */	public String getIngreso() {		return ingreso;	}	/**	 * @param ingreso	 * @uml.property name="ingreso"	 */	public void setIngreso(String ingreso) {		this.ingreso = ingreso;	}	/**	 * @return	 * @uml.property name="cantidad"	 */	public String getCantidad() {		return cantidad;	}	/**	 * @param cantidad	 * @uml.property name="cantidad"	 */	public void setCantidad(String cantidad) {		this.cantidad = cantidad;	}	/**	 * @return	 * @uml.property name="procodsx"	 */	public String getProcodsx() {		return procodsx;	}	/**	 * @param procodsx	 * @uml.property name="procodsx"	 */	public void setProcodsx(String procodsx) {		this.procodsx = procodsx;	}	/**	 * @return	 * @uml.property name="valorunit"	 */	public String getValorunit() {		return valorunit;	}	/**	 * @param valorunit	 * @uml.property name="valorunit"	 */	public void setValorunit(String valorunit) {		this.valorunit = valorunit;	}		public String getRefpvalorfacunit() {		return refpvalorfacunit;	}	public void setRefpvalorfacunit(String refpvalorfacunit) {		this.refpvalorfacunit = refpvalorfacunit;	}	public String getRefpvalorfactotal() {		return refpvalorfactotal;	}	public void setRefpvalorfactotal(String refpvalorfactotal) {		this.refpvalorfactotal = refpvalorfactotal;	}		public String getValorfacunit() {		return valorfacunit;	}		public void setValorfacunit(String valorfacunit) {		this.valorfacunit = valorfacunit;	}}