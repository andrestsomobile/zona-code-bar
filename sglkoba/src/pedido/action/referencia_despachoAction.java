package pedido.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import pedido.control.*;import pedido.entity.*;import pedido.form.*;import org.apache.struts.action.*;import db.beanConnector;public final class referencia_despachoAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {		referencia_despachoForm _form = (referencia_despachoForm) form;		gstreferencia_despacho control = new gstreferencia_despacho();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear" : opcion;		String mensaje = "";		String destino = "";		// OPCION DE set:		if (opcion.equals("set")) {			referencia_despacho entity = control.getreferencia_despacho(request.getParameter("codsx"));			referencia_despachoForm temp = new referencia_despachoForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("referencia_despachoForm", temp);			destino = "referencia_despacho_datos";		}		// opcion de CREAR		if (opcion.equals("crear")) {			String refddespacho_pedido = _form.getrefddespacho_pedido();			String refdproducto = _form.getrefdproducto();			String total = _form.getTotal();			destino = "referencia_despacho";			try {				beanConnector db = new beanConnector();				gestionSaldos gsald = new gestionSaldos();				boolean r = gsald.respaldarDespachoByPedidoReferencia(refddespacho_pedido, refdproducto, total, db);				if (r)					db.commit();				else					db.rollback();				mensaje = "referencia_despacho Creado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Crear el referencia_despacho: <br> " + e.getLocalizedMessage();			}		}		// Opcion de update		if (opcion.equals("update")) {			try {				destino = "referencia_despacho_datos";				control.updatereferencia_despacho(_form);				mensaje = "referencia_despacho Actualizado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el referencia_despacho: <br> " + e.getLocalizedMessage();			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			destino = "referencia_despacho";			String codsx = request.getParameter("codsx");			try {				control.eliminar(codsx);				mensaje = "referencia_despacho Eliminado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el referencia_despacho: <br> " + e.getLocalizedMessage();			}		}		// Opcion de update		if (opcion.equals("update")) {			try {				destino = "referencia_despacho_datos";				control.updatereferencia_despacho(_form);				mensaje = "referencia_despacho Actualizado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el referencia_despacho: <br> " + e.getLocalizedMessage();			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward(destino);	}}