package pedido.action;import ingreso.control.gstreferencia_trafico;import ingreso.entity.referencia_trafico;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import pedido.control.*;import pedido.entity.*;import pedido.form.*;import org.apache.struts.action.*;import db.beanConnector;public final class referencia_despacho_serialAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {		referencia_despacho_serialForm _form = (referencia_despacho_serialForm) form;		gstreferencia_despacho_serial control = new gstreferencia_despacho_serial();		gstreferencia_trafico greft = new gstreferencia_trafico();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear" : opcion;		String mensaje = "";		String destino = "";		// OPCION DE set:		if (opcion.equals("set")) {			referencia_despacho_serial entity = control.getreferencia_despacho_serial(request.getParameter("refdsserial"));			referencia_despacho_serialForm temp = new referencia_despacho_serialForm();			temp.setopcion("");			temp.llenar(entity);			request.setAttribute("referencia_despacho_serialForm", temp);			destino = "referencia_despacho_serial";		}		// opcion de CREAR		if (opcion.equals("crear")) {			destino = "referencia_despacho_serial";			String refdsreferencia_despacho = _form.getRefdsreferencia_despacho();			String[] refdsseriales = request.getParameterValues("selectedItems");			String cantidad = request.getParameter("cantidad");			int cantidaddespacho = (int) (cantidad != null && !cantidad.equals("") ? Double.parseDouble(cantidad) : 0);			Collection lista = control.getlistareferencia_despacho_serial(refdsreferencia_despacho);			int cantidadserialesseleccionados = lista != null ? lista.size() : 0;			if (cantidaddespacho == cantidadserialesseleccionados) {				mensaje = "Ya selecciono la cantidad de seriales necesarios para el despacho!";			} else {				if (refdsseriales != null && refdsseriales.length > 0) {					beanConnector db = new beanConnector();					boolean r = true;					try {						for (int i = 0; i < refdsseriales.length && cantidadserialesseleccionados + i < cantidaddespacho; i++) {							referencia_trafico reft = greft.getreferencia_trafico(refdsseriales[i]);							r = r && control.crearreferencia_despacho_serial(refdsreferencia_despacho, reft.getreftserial());							r = r && greft.setdespachoreferencia_trafico(refdsseriales[i], "S");						}						mensaje = "referencia_despacho_serial Creado con Exito";					} catch (SQLException e) {						e.printStackTrace();						mensaje = "No se pudo Crear el referencia_despacho_serial: <br> " + e.getLocalizedMessage();					}				}			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			destino = "referencia_despacho_serial";			String codsx = request.getParameter("codsx");			String serial = request.getParameter("serial");			try {				control.eliminar(codsx);				greft.setdespachoreferencia_traficoBySerial(serial, "N");				mensaje = "referencia_despacho_serial Eliminado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el referencia_despacho_serial: <br> " + e.getLocalizedMessage();			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward(destino);	}}