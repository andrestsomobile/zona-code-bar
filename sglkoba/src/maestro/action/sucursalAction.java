package maestro.action;import java.io.IOException;import java.sql.SQLException;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import maestro.control.gstsucursal;import maestro.entity.sucursal;import maestro.form.sucursalForm;import org.apache.struts.action.Action;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;public final class sucursalAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form,			HttpServletRequest request, HttpServletResponse response)			throws IOException, ServletException {		sucursalForm _form = (sucursalForm) form;		gstsucursal control = new gstsucursal();		String opcion = request.getParameter("opcion");		String cliente = request.getAttribute("cliente")==null ? request.getParameter("cliente") : (String)request.getAttribute("cliente");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear"				: opcion;		// OPCION DE set:		if (opcion.equals("set")) {			sucursal entity = control					.getsucursal(request.getParameter("codsx"));			sucursalForm temp = new sucursalForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("sucursalForm", temp);			request.setAttribute("cliente", cliente);						return mapping.findForward("sucursal_datos");		}		String mensaje = "";		// opcion de CREAR		if (opcion.equals("crear")) {			String succodcliente = _form.getsuccodcliente();			String sucnit = _form.getsucnit();			String sucnombre = _form.getsucnombre();			String succiudad = _form.getsucciudad();			String sucdepartamento = _form.getsucdepartamento();			String succontacto = _form.getsuccontacto();			String succargo = _form.getsuccargo();			String sucemail = _form.getsucemail();			String sucdireccion = _form.getsucdireccion();			String suctelefono = _form.getsuctelefono();			String succodigo = _form.getSuccodigo();			request.setAttribute("cliente", _form.getsuccodcliente());			try {				control.crearsucursal(succodcliente, sucnit, sucnombre,						succiudad, sucdepartamento, succontacto, succargo,						sucemail, sucdireccion, suctelefono, succodigo);				mensaje = "sucursal Creado con Exito";				request.setAttribute("cliente", _form.getsuccodcliente());			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Crear el sucursal: <br> "						+ e.getLocalizedMessage();			}		}		// Opcion de update		if (opcion.equals("update")) {			try {				control.updatesucursal(_form);				request.setAttribute("cliente", _form.getsuccodcliente());				mensaje = "sucursal Actualizado con Exito";			} catch (SQLException e) {				e.printStackTrace();				request.setAttribute("cliente", _form.getsuccodcliente());				mensaje = "No se pudo Actualizar el sucursal: <br> "						+ e.getLocalizedMessage();			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			request.setAttribute("cliente", _form.getsuccodcliente());			String codsx = request.getParameter("codsx");			try {				control.eliminar(codsx);				mensaje = "sucursal Eliminado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el sucursal: <br> "						+ e.getLocalizedMessage();			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward("sucursal");	}}