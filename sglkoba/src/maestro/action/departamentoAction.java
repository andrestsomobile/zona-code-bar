package maestro.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import maestro.control.*;import maestro.entity.*;import maestro.form.*;import org.apache.struts.action.*;public final class departamentoAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form,			HttpServletRequest request, HttpServletResponse response)			throws IOException, ServletException {		departamentoForm _form = (departamentoForm) form;		gstdepartamento control = new gstdepartamento();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear"				: opcion;		// OPCION DE set:		if (opcion.equals("set")) {			departamento entity = control.getdepartamento(request					.getParameter("codsx"));			departamentoForm temp = new departamentoForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("departamentoForm", temp);			return mapping.findForward("departamento_datos");		}		String mensaje = "";		// opcion de CREAR		if (opcion.equals("crear")) {			String depcodigo = _form.getdepcodigo();			String depnombre = _form.getdepnombre();			String depzona = _form.getdepzona();			try {				control.creardepartamento(depcodigo ,depnombre, depzona);				mensaje = "departamento Creado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Crear el departamento: <br> "						+ e.getLocalizedMessage();			}		}		// Opcion de update		if (opcion.equals("update")) {			try {				control.updatedepartamento(_form);				mensaje = "departamento Actualizado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el departamento: <br> "						+ e.getLocalizedMessage();			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			String codsx = request.getParameter("codsx");			try {				control.eliminar(codsx);				mensaje = "departamento Eliminado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el departamento: <br> "						+ e.getLocalizedMessage();			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward("departamento");	}}