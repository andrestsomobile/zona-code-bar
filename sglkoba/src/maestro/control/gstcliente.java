package maestro.control;import maestro.form.*;import maestro.entity.*;import db.*;import java.util.Collection;import java.sql.SQLException;  /*************************************************************CLASE GENERADA CON generator V3.0 By pablito*******/public class gstcliente extends GstTabla { public gstcliente() {  db= new beanConnector();  this.classEntidad =cliente.class; 
}public gstcliente(beanConnector db) {  this.db= db;  this.classEntidad =cliente.class; 
}public Collection getlistacliente() {String consulta = " SELECT * FROM cliente";    return getLista(consulta);  }public cliente getcliente_by_ukeyNit(String clinit) {	 String cad = "SELECT * FROM cliente WHERE clinit='"+clinit+ "'" ;	 return (cliente)getEntidad(cad);  }public cliente getcliente_by_ukeyNombre(String clinombre) {	 String cad = "SELECT * FROM cliente WHERE clinombre='"+clinombre+ "'" ;	 return (cliente)getEntidad(cad);  }public cliente getcliente_porCiayNom(String clicodcompania, String clinombre) {	clinombre = clinombre !=null?clinombre.toUpperCase():"";	 String cad = "SELECT * FROM cliente WHERE clicodcompania="+clicodcompania+ " and upper(clinombre) = '" + clinombre + "'" ;	 return (cliente)getEntidad(cad);  }public cliente getcliente_by_ukeyCodigo(String clicodigo) {	 String cad = "SELECT * FROM cliente WHERE clicodigo='"+clicodigo+ "'" ;	 return (cliente)getEntidad(cad);  }public Collection getlistaclienteByCliente(String codigoCliente) {	String consulta = " SELECT * FROM cliente WHERE clicodsx = '"+codigoCliente+"'";	    return getLista(consulta); 	 }public Collection getlistacliente(String clicodcompania) {	String consulta = " SELECT * FROM cliente where clicodcompania=" + clicodcompania;	    return getLista(consulta); 	 }public Collection getlistacliente(String start, String param ) { start= start==null ? "0" :  start;   param= param==null ? "" :  param; String consulta = " SELECT * FROM cliente where" + 	getTextoBusquedaResumen( param) + " order by clicodsx desc "+ "  limit " + this.maxfilas  + " offset  " + (Integer.parseInt(start) * this.maxfilas);     return getLista(consulta);  } public int getTotalPaginaslistacliente(String param) {  param= param==null ? "" :  param; String consulta = " SELECT count(1) FROM cliente where  " + getTextoBusquedaResumen( param) + "  ";      return getPaginas(consulta);  	}  public boolean crearcliente(String clinombre,String clinit,String clidireccion,String clitelefono,String cliciudad,String clicontacto,String climail,String cliobservacion,String clicodcompania, String clicodigo, String clidevolucion) throws SQLException { String insert = "INSERT INTO cliente (clinombre,clinit,clidireccion,clitelefono,cliciudad,clicontacto,climail,cliobservacion,clicodcompania, clicodigo, clidevolucion) VALUES (" +    (clinombre==null ? "NULL" : "'" + clinombre+"'") + "," +   (clinit==null ? "NULL" : "'" + clinit+"'") + "," +   (clidireccion==null ? "NULL" : "'" + clidireccion+"'") + "," +   (clitelefono==null ? "NULL" : "'" + clitelefono+"'") + "," +   (cliciudad==null ? "NULL" : "'" + cliciudad+"'") + "," +   (clicontacto==null ? "NULL" : "'" + clicontacto+"'") + "," +   (climail==null ? "NULL" : "'" + climail+"'") + "," +   (cliobservacion==null ? "NULL" : "'" + cliobservacion+"'") + "," +   (clicodigo==null ? "NULL" : "'" + clicodcompania+"'")    + "," + (clicodcompania==null ? "NULL" : "'" + clicodigo+"'")  + "," + (clidevolucion==null ? "NULL" : "'" + clidevolucion +"'")  + ")";int resp = db.executeUpdate(insert);return resp ==0 ? false : true;  } public cliente getcliente(String clicodsx) {	 if(clicodsx != null && !clicodsx.isEmpty()) {		 String cad = "SELECT * FROM cliente WHERE clicodsx='"+clicodsx+ "'" ;		 return (cliente)getEntidad(cad);  	 }	 	 return null; } public boolean updatecliente( cliente entity ) throws SQLException {  String cad = " update cliente set  " + " clinombre = " + ( entity.getclinombre() == null ? "NULL": "'" + entity.getclinombre() + "'" ) + "," + " clinit = " + ( entity.getclinit() == null ? "NULL": "'" + entity.getclinit() + "'" ) + "," + " clidireccion = " + ( entity.getclidireccion() == null ? "NULL": "'" + entity.getclidireccion() + "'" ) + "," + " clitelefono = " + ( entity.getclitelefono() == null ? "NULL": "'" + entity.getclitelefono() + "'" ) + "," + " cliciudad = " + ( entity.getcliciudad() == null ? "NULL": "'" + entity.getcliciudad() + "'" ) + "," + " clicontacto = " + ( entity.getclicontacto() == null ? "NULL": "'" + entity.getclicontacto() + "'" ) + "," + " climail = " + ( entity.getclimail() == null ? "NULL": "'" + entity.getclimail() + "'" ) + "," + " cliobservacion = " + ( entity.getcliobservacion() == null ? "NULL": "'" + entity.getcliobservacion() + "'" ) + "," + " clicodcompania = " +( entity.getclicodcompania() == null ? "NULL": "'" + entity.getclicodcompania() + "'" ) + "," +" clicodigo = " +( entity.getClicodigo() == null ? "NULL": "'" + entity.getClicodigo() + "'" ) + "," +" clidevolucion = " +( entity.getClidevolucion() == null ? "NULL": "'" + entity.getClidevolucion() + "'" ) + " where clicodsx = " +  entity.getclicodsx() ;   int resp= db.executeUpdate(cad);      return resp ==0 ? false : true ;      } public boolean updatecliente( clienteForm entity ) throws SQLException {  String cad = " update cliente set  " + " clinombre = " + ( entity.getclinombre() == null ? "NULL": "'" + entity.getclinombre() + "'" ) + "," + " clinit = " + ( entity.getclinit() == null ? "NULL": "'" + entity.getclinit() + "'" ) + "," + " clidireccion = " + ( entity.getclidireccion() == null ? "NULL": "'" + entity.getclidireccion() + "'" ) + "," + " clitelefono = " + ( entity.getclitelefono() == null ? "NULL": "'" + entity.getclitelefono() + "'" ) + "," + " cliciudad = " + ( entity.getcliciudad() == null ? "NULL": "'" + entity.getcliciudad() + "'" ) + "," + " clicontacto = " + ( entity.getclicontacto() == null ? "NULL": "'" + entity.getclicontacto() + "'" ) + "," + " climail = " + ( entity.getclimail() == null ? "NULL": "'" + entity.getclimail() + "'" ) + "," + " cliobservacion = " + ( entity.getcliobservacion() == null ? "NULL": "'" + entity.getcliobservacion() + "'" ) + "," + " clicodcompania = " +( entity.getclicodcompania() == null ? "NULL": "'" + entity.getclicodcompania() + "'" ) + "," +" clicodigo = " +( entity.getClicodigo() == null ? "NULL": "'" + entity.getClicodigo() + "'" ) + "," +" clidevolucion = " +( entity.getClidevolucion() == null ? "NULL": "'" + entity.getClidevolucion() + "'" ) + " where clicodsx = " +  entity.getclicodsx() ;   int resp= db.executeUpdate(cad);      return resp ==0 ? false : true ;      }  public boolean eliminar(String clicodsx) throws SQLException {   String elim = " delete from cliente where clicodsx = '"+ clicodsx+ "'"; int r = db.executeUpdate(elim) ; return  r==0? false : true ;  }  public Collection getlistaclienteByEmpresa(String empresa, String start, String param ) {	 start= start==null ? "0" :  start;  	 param= param==null ? "" :  param; 	String consulta = " SELECT cliente.* FROM cliente  where clicodcompania =" + empresa + " and " + 				getTextoBusquedaResumen(param) +	 "  limit " + this.maxfilas  + " offset  " + (Integer.parseInt(start) * this.maxfilas); 	    return getLista(consulta); 	 }	 public int getTotalPaginaslistaclienteByEmpresa(String empresa, String param) { 	 param= param==null ? "" :  param; 		String consulta = " SELECT count(1) FROM cliente  where clicodcompania =" + empresa + 		" and " + 		getTextoBusquedaResumen(param);return getPaginas(consulta); 	 	} }