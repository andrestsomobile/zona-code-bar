package maestro.form;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import maestro.control.*;import maestro.entity.*;import org.apache.struts.action.ActionMessage;/** * CLASE GENERADA CON generator V3.0 By pablito**** */public class sucursalForm extends ActionForm {	private String succodsx;	private String succodcliente;	private String sucnit;	private String sucnombre;	private String succiudad;	private String sucdepartamento;	private String succontacto;	private String succargo;	private String sucemail;	private String sucdireccion;	private String suctelefono;	private String opcion;	/**	 * @uml.property  name="succodigo"	 */	private String succodigo;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getsuccodsx() {		return succodsx;	}	public String getsuccodcliente() {		return succodcliente;	}	public String getsucnit() {		return sucnit;	}	public String getsucnombre() {		return sucnombre;	}	public String getsucciudad() {		return succiudad;	}	public String getsucdepartamento() {		return sucdepartamento;	}	public String getsuccontacto() {		return succontacto;	}	public String getsuccargo() {		return succargo;	}	public String getsucemail() {		return sucemail;	}	public String getsucdireccion() {		return sucdireccion;	}	public String getsuctelefono() {		return suctelefono;	}	public void setsuccodsx(String new_succodsx) {		this.succodsx = new_succodsx;	}	public void setsuccodcliente(String new_succodcliente) {		this.succodcliente = new_succodcliente;	}	public void setsucnit(String new_sucnit) {		this.sucnit = new_sucnit;	}	public void setsucnombre(String new_sucnombre) {		this.sucnombre = new_sucnombre;	}	public void setsucciudad(String new_succiudad) {		this.succiudad = new_succiudad;	}	public void setsucdepartamento(String new_sucdepartamento) {		this.sucdepartamento = new_sucdepartamento;	}	public void setsuccontacto(String new_succontacto) {		this.succontacto = new_succontacto;	}	public void setsuccargo(String new_succargo) {		this.succargo = new_succargo;	}	public void setsucemail(String new_sucemail) {		this.sucemail = new_sucemail;	}	public void setsucdireccion(String new_sucdireccion) {		this.sucdireccion = new_sucdireccion;	}	public void setsuctelefono(String new_suctelefono) {		this.suctelefono = new_suctelefono;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping,			HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstsucursal gsucursal = new gstsucursal();		opcion = (opcion == null || (opcion!= null && opcion.equals(""))) ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;		if (opcion.equals("crear") ) {			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS			// valida que el codigo de sucursal no se repita			/*if (succodigo != null) {				int cant = gsucursal.getcountsucursal(succodigo);				if (cant > 0) {					errors.add("succodigo", new ActionMessage("<b>El codigo de la sucursal ya existe</b>", false));				}			}*/		}		if (opcion.equals("update")) {			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS			// valida que el codigo de sucursal no se repita			/*if (succodigo != null) {				sucursal _suc = gsucursal.getsuccodcursal(succodigo);				int cant = gsucursal.getcountsucursal(succodigo);				if (cant > 1) {					errors.add("succodigo", new ActionMessage("<b>El codigo de la sucursal ya existe</b>", false));				} else if (_suc != null && !_suc.getsuccodsx().equals(succodsx)) {					errors.add("succodigo", new ActionMessage("<b>El codigo de la sucursal ya existe</b>", false));				}			}*/		}		// valido campos requeridos:		if (succodcliente == null || succodcliente.equals("")) 			errors.add("succodcliente", new ActionMessage(					"<b>El Codigo del cliente no puede ser vacio</b>", false));		if (sucnit.equals(""))			errors.add("sucnit", new ActionMessage("<b>El Nit no puede ser vacio</b>",					false));		if (sucnombre.equals(""))			errors.add("sucnombre", new ActionMessage(					"<b>El Nombre no puede ser vacio</b>", false));		if (succiudad.equals(""))			errors.add("succiudad", new ActionMessage(					"<b>La Ciudad no puede ser vacia</b>", false));		if (sucdepartamento.equals(""))			errors.add("sucdepartamento", new ActionMessage(					"<b>El Departamenteo no puede ser vacio</b>", false));		if (sucdireccion.equals(""))			errors.add("sucdireccion", new ActionMessage(					"<b>La direccion no puede ser vacia</b>", false));		if (suctelefono.equals(""))			errors.add("suctelefono", new ActionMessage(					"<b>El telefono no puede ser vacio</b>", false));				if (succodigo.equals(""))			errors.add("succodigo", new ActionMessage(										"<b>El Codigo de la sucursal no puede ser vacio</b>", false));		if(!errors.isEmpty()) errors.add("general", new ActionMessage("No se pudo guardar los datos, revise ", false));		return errors;	}	public void llenar(sucursal entity) {		this.succodsx = entity.getsuccodsx();		this.succodcliente = entity.getsuccodcliente();		this.sucnit = entity.getsucnit();		this.sucnombre = entity.getsucnombre();		this.succiudad = entity.getsucciudad();		this.sucdepartamento = entity.getsucdepartamento();		this.succontacto = entity.getsuccontacto();		this.succargo = entity.getsuccargo();		this.sucemail = entity.getsucemail();		this.sucdireccion = entity.getsucdireccion();		this.suctelefono = entity.getsuctelefono();		this.succodigo = entity.getSuccodigo();	}	/**	 * @return	 * @uml.property  name="succodigo"	 */	public String getSuccodigo() {		return succodigo;	}	/**	 * @param succodigo	 * @uml.property  name="succodigo"	 */	public void setSuccodigo(String succodigo) {		this.succodigo = succodigo;	}}