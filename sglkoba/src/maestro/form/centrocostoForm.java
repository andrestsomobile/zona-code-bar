package maestro.form;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import maestro.control.*;import maestro.entity.*;import org.apache.struts.action.ActionMessage;public class centrocostoForm extends ActionForm {	private String cccod;	private String ccdesc;	private String opcion;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getcccod() {		return cccod;	}	public String getccdesc() {		return ccdesc;	}	public void setcccod(String new_cccod) {		this.cccod = new_cccod;	}	public void setccdesc(String new_ccdes) {		this.ccdesc = new_ccdes;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstcentrocosto gcentrocosto = new gstcentrocosto();		opcion = opcion == null || opcion.equals("") ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;		if (opcion.equals("crear")) {			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS			centrocosto cc = gcentrocosto.getcentrocosto(cccod);			if (cc != null) {				errors.add("general", new ActionMessage("<b>El centro de costo " + cccod + " ya existe</b>", false));				return errors;			}		}		// valido campos requeridos:		if (ccdesc.equals(""))			errors.add("ccdesc", new ActionMessage("<b>El Nombre no puede ser vacio</b>", false));		if (!errors.isEmpty())			errors.add("general", new ActionMessage("<b>No se pudo guardar los datos, revise </b>", false));		return errors;	}	public void llenar(centrocosto entity) {		this.cccod = entity.getcccod();		this.ccdesc = entity.getccdesc();	}}