package maestro.form;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import maestro.control.*;import maestro.entity.*;import org.apache.struts.action.ActionMessage;import administracion.entity.usuario;/** * CLASE GENERADA CON generator V3.0 By pablito**** */public class categoriaForm extends ActionForm {	private String catcodsx;	private String catcodpadre;	private String catdescripcion;	private String catcodcompania;	private String catnombre;	private String opcion;/** * @uml.property  name="desc" */private String desc;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getcatcodsx() {		return catcodsx;	}	public String getcatcodpadre() {		return catcodpadre;	}	public String getcatdescripcion() {		return catdescripcion;	}	public String getcatcodcompania() {		return catcodcompania;	}	public String getcatnombre() {		return catnombre;	}	public void setcatcodsx(String new_catcodsx) {		this.catcodsx = new_catcodsx;	}	public void setcatcodpadre(String new_catcodpadre) {		this.catcodpadre = new_catcodpadre;	}	public void setcatdescripcion(String new_catdescripcion) {		this.catdescripcion = new_catdescripcion;	}	public void setcatcodcompania(String new_catcodcompania) {		this.catcodcompania = new_catcodcompania;	}	public void setcatnombre(String new_catnombre) {		this.catnombre = new_catnombre;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping,			HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstcategoria gcategoria = new gstcategoria();		 opcion = opcion==null || opcion.equals("") ? "crear" : opcion; 		if (opcion.equals("set") || opcion.equals("delete"))			return null;			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS			categoria cat = gcategoria.getcategoria_by_ukey(catnombre, catcodcompania);			 if(cat!=null) {				 	errors.add("catnombre", new ActionMessage("<b>La categoria " + catnombre + " ya existe</b>", false));			 }		if(catcodpadre.equals("")) catcodpadre="0";		// valido campos requeridos:		if (catcodpadre.equals("") || catcodpadre == null)			errors.add("catcodpadre", new ActionMessage(					"<b>La categoria padre no puede ser vacia</b>", false));		if (catdescripcion.equals(""))			errors.add("catdescripcion", new ActionMessage(					"<b>La descripcion no puede ser vacia</b>", false));		if (catcodcompania.equals(""))			errors.add("catcodcompania", new ActionMessage(					"<b>El codigo de la compañia no puede ser vacio</b>", false));		if (catnombre.equals(""))			errors.add("catnombre", new ActionMessage(					"<b>El Nombre no puede ser vacio</b>", false));		if(!errors.isEmpty()) errors.add("general", new ActionMessage("<b>No se pudo guardar los datos, revise </b>", false));		return errors;	}	public void llenar(categoria entity) {		this.catcodsx = entity.getcatcodsx();		this.catcodpadre = entity.getcatcodpadre();		this.catdescripcion = entity.getcatdescripcion();		this.catcodcompania = entity.getcatcodcompania();		this.catnombre = entity.getcatnombre();				if(catcodpadre!=null && !catcodpadre.equals("")) {			gstcategoria gcat = new gstcategoria();			categoria cat = gcat.getcategoria( catcodpadre);			if(cat!=null) desc = cat.getcatnombre(); 			else desc= "SIN PADRE";		}	}	/**	 * @return	 * @uml.property  name="desc"	 */	public String getDesc() {		return desc;	}	/**	 * @param desc	 * @uml.property  name="desc"	 */	public void setDesc(String desc) {		this.desc = desc;	}}