package administracion.control;import administracion.form.*;import administracion.entity.*;import db.*;import java.util.Collection;import java.sql.SQLException;/*********************************************************************************************************************************************************************************************************************************************************************************************************** * CLASE GENERADA CON generator V3.0 By pablito**** **********************************************************************************************************************************************************************************************************************************************************************************************************/public class gstparametro extends GstTabla {	public gstparametro() {		db = new beanConnector();		this.classEntidad = parametro.class;	}	public gstparametro(beanConnector db) {		this.db = db;		this.classEntidad = parametro.class;	}	public Collection getlistaparametro() {		String consulta = " SELECT * FROM parametro";		return getLista(consulta);	}		public Collection getlistaparametro(String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param.toUpperCase();		String consulta = " SELECT * FROM parametro where " + getTextoBusquedaResumen(param) + "  limit " + this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistaparametro(String param) {		param = param == null ? "" : param.toUpperCase();		String consulta = " SELECT count(1) FROM parametro where  " + getTextoBusquedaResumen(param);		return getPaginas(consulta);	}	public boolean crearparametro(String pk_parametro,String nombre, String descripcion, String valor, String ubicacion, String tipo_elemento) throws SQLException {		String insert = "INSERT INTO parametro (pk_parametro,nombre,descripcion,valor,ubicacion,tipo_elemento) VALUES (" + (pk_parametro == null ? "NULL" : "'" + pk_parametro + "'") + "," + (nombre == null ? "NULL" : "'" + nombre + "'") + ","				+ (descripcion == null ? "NULL" : "'" + descripcion + "'") + "," + (valor == null ? "NULL" : "'" + valor + "'") + "," 				+ (ubicacion == null ? "NULL" : "'" + ubicacion + "'")+ "," + (tipo_elemento == null ? "NULL" : "'" + tipo_elemento + "'") + ")";		int resp = db.executeUpdate(insert);		if (resp > 0) {			crearrol(pk_parametro);		}		return resp == 0 ? false : true;	}	public parametro getpk_parametro(String pk_parametro) {		String cad = "SELECT * FROM parametro WHERE pk_parametro='" + pk_parametro + "'";		return (parametro) getEntidad(cad);	}	public parametro getnombre_by_nombre(String nombre) {		String cad = "SELECT * FROM parametro WHERE nombre='" + nombre + "'";		return (parametro) getEntidad(cad);	}	public parametro getubicacion_by_ubicacion(String ubicacion) {		String cad = "SELECT * FROM parametro WHERE ubicacion='" + ubicacion + "'";		return (parametro) getEntidad(cad);	}	public boolean updateparametro(parametro entity) throws SQLException {		String cad = " update parametro set  " + 	" pk_parametro = " + (entity.getpk_parametro() == null ? "NULL" : "'" + entity.getpk_parametro() + "'") + "," +	" nombre = " + (entity.getnombre() == null ? "NULL" : "'" + entity.getnombre() + "'") + "," +  	" descripcion = " + (entity.getdescripcion() == null ? "NULL" : "'" + entity.getdescripcion() + "'") + "," + 	" valor = " + (entity.getvalor() == null ? "NULL" : "'" + entity.getvalor() + "'") + 	" tipo_elemento = " + (entity.gettipo_elemento () == null ? "NULL" : "'" + entity.gettipo_elemento () + "'") +	" where pk_parametro = " + entity.getpk_parametro();		int resp = db.executeUpdate(cad);		if (resp > 0) {			crearrol(entity.getpk_parametro());		}		return resp == 0 ? false : true;	}	public boolean updateparametro(parametroForm entity) throws SQLException {		String cad = " update parametro set  " + 				" pk_parametro = " + (entity.getpk_parametro() == null ? "NULL" : "'" + entity.getpk_parametro() + "'") + "," +				" nombre = " + (entity.getnombre() == null ? "NULL" : "'" + entity.getnombre() + "'") + "," +  				" descripcion = " + (entity.getdescripcion() == null ? "NULL" : "'" + entity.getdescripcion() + "'") + "," + 				" valor = " + (entity.getvalor() == null ? "NULL" : "'" + entity.getvalor() + "'") + 				" ubicacion = " + (entity.getubicacion() == null ? "NULL" : "'" + entity.getubicacion() + "'") +				" tipo_elemento = " + (entity.gettipo_elemento() == null ? "NULL" : "'" + entity.gettipo_elemento() + "'") +				" where pk_parametro = " + entity.getpk_parametro();		int resp = db.executeUpdate(cad);		if (resp > 0) {			crearrol(entity.getpk_parametro());		}		return resp == 0 ? false : true;	}	public boolean eliminar(String pk_parametro) throws SQLException {		parametro entity = getpk_parametro(pk_parametro);		String elim = " delete from parametro where pk_parametro = '" + pk_parametro + "'";		int r = db.executeUpdate(elim);		if (r > 0) {			eliminarrol(entity.getpk_parametro());		}		return r == 0 ? false : true;	}	public boolean crearrol(String nombre) {		String cad = "CREATE ROLE " + nombre + " SUPERUSER INHERIT NOCREATEDB NOCREATEROLE";		try {			int r = db.executeUpdate(cad);			return r == 0 ? false : true;		} catch (SQLException e) {			return false;		}	}	public boolean eliminarrol(String nombre) {		String cad = "DROP ROLE " + nombre;		try {			int r = db.executeUpdate(cad);			return r == 0 ? false : true;		} catch (SQLException e) {			return false;		}	}}