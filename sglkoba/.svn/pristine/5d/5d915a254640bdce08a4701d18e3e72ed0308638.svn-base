package ingreso.form;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import ingreso.control.*;import ingreso.entity.*;import org.apache.struts.action.ActionMessage;import static util.validador.*;/** * CLASE GENERADA CON generator V3.0 By pablito****** */public class traficoForm extends ActionForm {	private String trafcodsx;	private String trafcompania;	private String traffechacreacion;	private String trafdocumento;	private String trafembarque;	private String traftransportadora;	private String trafprocedencia;	private String traffechaarribopuerto;	private String traffechapresentdta;	private String traffechaaprobaciondta;	private String traffob;	private String trafcif;	private String trafconsec;	private String trafnumerofmm;	private String traftrm;	private String trafnumdta;	private String trafnumsobordo;	private String traffechadescargue;	private String traffechalevante;	private String traffechaingresozf;	private String trafentregadocusia;	private String trafobservaciones;	private String trafpesobruto;	private String trafusuario;	private String traffechasobordo;	private String traforigen;	private String trafpesoneto;	private String traffletesseguro;	private String trafestado;	private String opcion;	private String trafcantidad;	private String trafpedido;	private String trafmotonave;		public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String gettrafcodsx() {		return trafcodsx;	}	public String gettrafcompania() {		return trafcompania;	}	public String gettraffechacreacion() {		return traffechacreacion;	}	public String gettrafdocumento() {		return trafdocumento;	}	public String gettrafembarque() {		return trafembarque;	}	public String gettraftransportadora() {		return traftransportadora;	}	public String gettrafprocedencia() {		return trafprocedencia;	}	public String gettraffechaarribopuerto() {		return traffechaarribopuerto;	}	public String gettraffechapresentdta() {		return traffechapresentdta;	}	public String gettraffechaaprobaciondta() {		return traffechaaprobaciondta;	}	public String gettraffob() {		return traffob;	}	public String gettrafcif() {		return trafcif;	}	public String gettrafconsec() {		return trafconsec;	}	public String gettrafnumerofmm() {		return trafnumerofmm;	}	public String gettraftrm() {		return traftrm;	}	public String gettrafnumdta() {		return trafnumdta;	}	public String gettrafnumsobordo() {		return trafnumsobordo;	}	public String gettraffechadescargue() {		return traffechadescargue;	}	public String gettraffechalevante() {		return traffechalevante;	}	public String gettraffechaingresozf() {		return traffechaingresozf;	}	public String gettrafentregadocusia() {		return trafentregadocusia;	}	public String gettrafobservaciones() {		return trafobservaciones;	}	public String gettrafpesobruto() {		return trafpesobruto;	}	public String gettrafusuario() {		return trafusuario;	}	public String gettraffechasobordo() {		return traffechasobordo;	}	public String gettraforigen() {		return traforigen;	}	public String gettrafpesoneto() {		return trafpesoneto;	}	public String gettraffletesseguro() {		return traffletesseguro;	}	public void settrafcodsx(String new_trafcodsx) {		this.trafcodsx = new_trafcodsx;	}	public void settrafcompania(String new_trafcompania) {		this.trafcompania = new_trafcompania;	}	public void settraffechacreacion(String new_traffechacreacion) {		this.traffechacreacion = new_traffechacreacion;	}	public void settrafdocumento(String new_trafdocumento) {		this.trafdocumento = new_trafdocumento;	}	public void settrafembarque(String new_trafembarque) {		this.trafembarque = new_trafembarque;	}	public void settraftransportadora(String new_traftransportadora) {		this.traftransportadora = new_traftransportadora;	}	public void settrafprocedencia(String new_trafprocedencia) {		this.trafprocedencia = new_trafprocedencia;	}	public void settraffechaarribopuerto(String new_traffechaarribopuerto) {		this.traffechaarribopuerto = new_traffechaarribopuerto;	}	public void settraffechapresentdta(String new_traffechapresentdta) {		this.traffechapresentdta = new_traffechapresentdta;	}	public void settraffechaaprobaciondta(String new_traffechaaprobaciondta) {		this.traffechaaprobaciondta = new_traffechaaprobaciondta;	}	public void settraffob(String new_traffob) {		this.traffob = new_traffob;	}	public void settrafcif(String new_trafcif) {		this.trafcif = new_trafcif;	}	public void settrafconsec(String new_trafconsec) {		this.trafconsec = new_trafconsec;	}	public void settrafnumerofmm(String new_trafnumerofmm) {		this.trafnumerofmm = new_trafnumerofmm;	}	public void settraftrm(String new_traftrm) {		this.traftrm = new_traftrm;	}	public void settrafnumdta(String new_trafnumdta) {		this.trafnumdta = new_trafnumdta;	}	public void settrafnumsobordo(String new_trafnumsobordo) {		this.trafnumsobordo = new_trafnumsobordo;	}	public void settraffechadescargue(String new_traffechadescargue) {		this.traffechadescargue = new_traffechadescargue;	}	public void settraffechalevante(String new_traffechalevante) {		this.traffechalevante = new_traffechalevante;	}	public void settraffechaingresozf(String new_traffechaingresozf) {		this.traffechaingresozf = new_traffechaingresozf;	}	public void settrafentregadocusia(String new_trafentregadocusia) {		this.trafentregadocusia = new_trafentregadocusia;	}	public void settrafobservaciones(String new_trafobservaciones) {		this.trafobservaciones = new_trafobservaciones;	}	public void settrafpesobruto(String new_trafpesobruto) {		this.trafpesobruto = new_trafpesobruto;	}	public void settrafusuario(String new_trafusuario) {		this.trafusuario = new_trafusuario;	}	public void settraffechasobordo(String new_traffechasobordo) {		this.traffechasobordo = new_traffechasobordo;	}	public void settraforigen(String new_traforigen) {		this.traforigen = new_traforigen;	}	public void settrafpesoneto(String new_trafpesoneto) {		this.trafpesoneto = new_trafpesoneto;	}	public void settraffletesseguro(String new_traffletesseguro) {		this.traffletesseguro = new_traffletesseguro;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gsttrafico gtrafico = new gsttrafico();		opcion = opcion == null || opcion.equals("") ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete") || opcion.equals("activar"))			return null;		if (opcion.equals("crear")) {			trafico existe = gtrafico.gettrafico(trafcompania, trafdocumento);			if (existe != null) {				errors.add("general", new ActionMessage("Ya existe un trafico con la compania y el Documento ingresados", false));				return errors;			}		}		// valido campos requeridos:		if (trafcompania.equals(""))			errors.add("trafcompania", new ActionMessage("El trafcompania no puede ser vacio", false));		if (traffechacreacion.equals(""))			errors.add("traffechacreacion", new ActionMessage("El traffechacreacion no puede ser vacio", false));		if (trafdocumento.equals(""))			errors.add("trafdocumento", new ActionMessage("El trafdocumento no puede ser vacio", false));		if (trafembarque == null || (trafembarque != null && trafembarque.equals("")))			trafembarque = "0";			//errors.add("trafembarque", new ActionMessage("El trafembarque no puede ser vacio", false));		// aseguro que los valores vacios queden en lo que deben quedar, es decir, que fechas que sean vacias '' queden en null, al		// igual que los numeros		traffechaarribopuerto = traffechaarribopuerto == null || traffechaarribopuerto != null && traffechaarribopuerto.equals("") ? null : traffechaarribopuerto;		traffechasobordo = traffechasobordo == null || traffechasobordo.equals("") ? null : traffechasobordo;		traffechapresentdta = traffechapresentdta == null || traffechapresentdta.equals("") ? null : traffechapresentdta;		traffechaaprobaciondta = traffechaaprobaciondta == null || traffechaaprobaciondta.equals("") ? null : traffechaaprobaciondta;		traffletesseguro = traffletesseguro == null || traffletesseguro.equals("") ? "0" : traffletesseguro;		traffob = traffob == null || traffob.equals("") ? null : traffob;		if (traffob != null && !validarNumero(traffob))			errors.add("traffob", new ActionMessage("El FOB debe ser numerico", false));		trafcif = trafcif == null || trafcif.equals("") ? null : trafcif;		if (trafcif != null && !validarNumero(trafcif))			errors.add("trafcif", new ActionMessage("El CIF debe ser numerico", false));		trafconsec = trafconsec == null || trafconsec.equals("") ? null : trafconsec;		//if (trafconsec != null && !validarNumero(trafconsec))			//errors.add("trafconsec", new ActionMessage("El consecutivo ZF debe ser numerico", false));		trafnumerofmm = trafnumerofmm == null || trafnumerofmm.equals("") ? null : trafnumerofmm;		//if (trafnumerofmm != null && !validarNumero(trafnumerofmm))			//errors.add("trafnumerofmm", new ActionMessage("El Numero FMM ZF debe ser numerico", false));		traftrm = traftrm == null || traftrm.equals("") ? null : traftrm;		if (traftrm != null && !validarNumero(traftrm))			errors.add("traftrm", new ActionMessage("La tasa de cambio debe ser numerico", false));		traffechadescargue = traffechadescargue == null || traffechadescargue.equals("") ? null : traffechadescargue;		traffechalevante = traffechalevante == null || traffechalevante.equals("") ? null : traffechalevante;		traffechaingresozf = traffechaingresozf == null || traffechaingresozf.equals("") ? null : traffechaingresozf;		trafentregadocusia = trafentregadocusia == null || trafentregadocusia.equals("") ? null : trafentregadocusia;		traforigen = traforigen == null || traforigen.equals("") ? null : traforigen;		trafpesobruto = trafpesobruto == null || trafpesobruto.equals("") ? null : trafpesobruto;		if (trafpesobruto != null && !validarNumero(trafpesobruto))			errors.add("trafpesobruto", new ActionMessage("El peso Bruto debe ser numerico", false));		trafpesoneto = trafpesoneto == null || trafpesoneto.equals("") ? null : trafpesoneto;		if (trafpesoneto != null && !validarNumero(trafpesoneto))			errors.add("trafpesoneto", new ActionMessage("El Peso Neto deben numerico", false));				//se usa campo motonave para numero de vehiculos que ingresan la mercancia		trafmotonave = trafmotonave == null || trafmotonave.equals("") ? null : trafmotonave;		if (trafmotonave != null && !validarNumero(trafmotonave)) {			errors.add("trafmotonave", new ActionMessage("El # de vehiculos debe ser numerico", false));		}		// /MIRO SI EL TRAFICO SE VA A FINALIZAR, PARA VALIDAR EL RESTO DE LOS CAMPOS:		if (trafcodsx != null && !trafcodsx.equals("") && trafestado.equals("FINALIZADO")) {			boolean puede = true;			if (trafnumdta.equals("")) {				puede = false;				errors.add("trafnumdta", new ActionMessage("El trafnumdta no puede ser vacio para finalizar el trafico", false));			}			if (trafprocedencia.equals("")) {				puede = false;				errors.add("trafprocedencia", new ActionMessage("La procedencia no puede ser vacio para finalizar el trafico", false));			}			if (traforigen == null) {				puede = false;				errors.add("traforigen", new ActionMessage("El Origen no puede ser vacio para finalizar el trafico", false));			}			if (traffechaarribopuerto == null) {				puede = false;				errors.add("traffechaarribopuerto", new ActionMessage("La Fecha de arribo a puerto no puede ser vacio para finalizar el trafico", false));			}			/*if (traffechapresentdta == null) {				puede = false;				errors.add("traffechapresentdta", new ActionMessage("La Fecha presentacion DTA no puede ser vacio para finalizar el trafico", false));			}			if (traffechaaprobaciondta == null) {				puede = false;				errors.add("traffechaaprobaciondta", new ActionMessage("La fecha aprobacion DTA no puede ser vacio para finalizar el trafico", false));			}			if (trafconsec == null || trafconsec.equals("")) {				puede = false;				errors.add("trafconsec", new ActionMessage("EL CONSEC de zf no puede ser vacio para finalizar el trafico", false));			}			if (trafnumerofmm == null || trafnumerofmm.equals("")) {				puede = false;				errors.add("trafnumerofmm", new ActionMessage("El no fmm de zf no puede ser vacio para finalizar el trafico", false));			}*/			if (traftrm == null || traftrm.equals("")) {				puede = false;				errors.add("traftrm", new ActionMessage("La TRM no puede ser vacio para finalizar el trafico", false));			}			if (trafnumsobordo.equals("")) {				puede = false;				errors.add("trafnumsobordo", new ActionMessage("el numero de sobordo no puede ser vacio para finalizar el trafico", false));			}			if (traffechasobordo == null) {				puede = false;				errors.add("traffechasobordo", new ActionMessage("La fecha de sobordo no puede ser vacio para finalizar el trafico", false));			}			if (traffechadescargue == null) {				puede = false;				errors.add("traffechadescargue", new ActionMessage("La Fecha de descargue no puede ser vacio para finalizar el trafico", false));			}			/*if (traffechalevante == null) {				puede = false;				errors.add("traffechalevante", new ActionMessage("La fecha de levante no puede ser vacio para finalizar el trafico", false));			}			if (traffechaingresozf == null) {				puede = false;				errors.add("traffechaingresozf", new ActionMessage("La fecha de ingreso a ZF no puede ser vacio para finalizar el trafico", false));			}			if (trafentregadocusia == null) {				puede = false;				errors.add("trafentregadocusia", new ActionMessage("La fecha de entrega de documentos a la SIA no puede ser vacio para finalizar el trafico", false));			}*/			if (trafpedido.equals("")) {				puede = false;				errors.add("trafpedido", new ActionMessage("El numero del pedido no puede ser vacio para finalizar el trafico", false));			}			if (trafmotonave.equals("")) {				puede = false;				errors.add("trafmotonave", new ActionMessage("El # de vehiculos no puede ser vacio para finalizar el trafico", false));			}			if (!puede)				trafestado = "TRAMITE";		}		if (!errors.isEmpty())			errors.add("general", new ActionMessage("No se Pudo ingresar los datos, revise datos requeridos", false));		return errors;	}	public void llenar(trafico entity) {		this.trafcodsx = entity.gettrafcodsx();		this.trafcompania = entity.gettrafcompania();		this.traffechacreacion = entity.gettraffechacreacion();		this.trafdocumento = entity.gettrafdocumento();		this.trafembarque = entity.gettrafembarque();		this.traftransportadora = entity.gettraftransportadora();		this.trafprocedencia = entity.gettrafprocedencia();		this.traffechaarribopuerto = entity.gettraffechaarribopuerto();		this.traffechapresentdta = entity.gettraffechapresentdta();		this.traffechaaprobaciondta = entity.gettraffechaaprobaciondta();		this.traffob = entity.gettraffob();		this.trafcif = entity.gettrafcif();		this.trafconsec = entity.gettrafconsec();		this.trafnumerofmm = entity.gettrafnumerofmm();		this.traftrm = entity.gettraftrm();		this.trafnumdta = entity.gettrafnumdta();		this.trafnumsobordo = entity.gettrafnumsobordo();		this.traffechadescargue = entity.gettraffechadescargue();		this.traffechalevante = entity.gettraffechalevante();		this.traffechaingresozf = entity.gettraffechaingresozf();		this.trafentregadocusia = entity.gettrafentregadocusia();		this.trafobservaciones = entity.gettrafobservaciones();		this.trafpesobruto = entity.gettrafpesobruto();		this.trafusuario = entity.gettrafusuario();		this.traffechasobordo = entity.gettraffechasobordo();		this.traforigen = entity.gettraforigen();		this.trafpesoneto = entity.gettrafpesoneto();		this.traffletesseguro = entity.gettraffletesseguro();		this.trafestado = entity.getTrafestado();		this.trafcantidad = entity.getTrafcantidad();		this.trafpedido = entity.getTrafpedido();		this.trafmotonave = entity.getTrafmotonave();	}	public String getTrafestado() {		return trafestado;	}	/**	 * @param trafestado	 * @uml.property name="trafestado"	 */	public void setTrafestado(String trafestado) {		this.trafestado = trafestado;	}	/**	 * @return	 * @uml.property name="trafcantidad"	 */	public String getTrafcantidad() {		return trafcantidad;	}	/**	 * @param trafcantidad	 * @uml.property name="trafcantidad"	 */	public void setTrafcantidad(String trafcantidad) {		this.trafcantidad = trafcantidad;	}	/**	 * @return	 * @uml.property name="trafmotonave"	 */	public String getTrafmotonave() {		return trafmotonave;	}	/**	 * @param trafmotonave	 * @uml.property name="trafmotonave"	 */	public void setTrafmotonave(String trafmotonave) {		this.trafmotonave = trafmotonave;	}	/**	 * @return	 * @uml.property name="trafpedido"	 */	public String getTrafpedido() {		return trafpedido;	}	/**	 * @param trafpedido	 * @uml.property name="trafpedido"	 */	public void setTrafpedido(String trafpedido) {		this.trafpedido = trafpedido;	}}