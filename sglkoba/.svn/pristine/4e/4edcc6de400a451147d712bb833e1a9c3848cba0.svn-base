package pedido.control;import pedido.form.*;import pedido.entity.*;import util.Fecha;import db.*;import java.util.Collection;import java.math.BigDecimal;import java.sql.SQLException;/******************************************************** *****CLASE GENERADA CON generator V3.0 By pablito *******/public class gstdespacho extends GstTabla {	public gstdespacho() {		db = new beanConnector();		this.classEntidad = despacho.class;	}	public gstdespacho(beanConnector db) {		this.db = db;		this.classEntidad = despacho.class;	}	public Collection getlistadespacho() {		String consulta = " SELECT * FROM despacho";		return getLista(consulta);	}	public Collection getlistadespacho(String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " SELECT * FROM despacho where " + getTextoBusquedaResumen(param) + " order by despcodsx desc " + "  limit " + this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistadespacho(String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM despacho where  " + getTextoBusquedaResumen(param);		return getPaginas(consulta);	}	public boolean creardespacho(String despempresa, String despfecha, String despobservacion, String despplaca, String despnombrecond, String despcedcond, String desptransportadora, String despestado, String despbultos, String despbultosarmados, String desppesoneto, String desppesobruto,			String despfob, String despconsec, String despconseczfp, String despnotifzfp,String desptipo, String despcelcond, String despfechalv, String desphoralv, String despfechasv, String desphorasv, String despfechaic, String desphoraic, String despfechafc,String desphorafc,			String desptipoveh, String desphorapactada	) throws SQLException {		String insert = "INSERT INTO despacho (despempresa,despfecha,despobservacion,despplaca,despnombrecond,despcedcond," 				+ "desptransportadora,despestado, " + " despbultos , despbultosarmados ,desppesoneto ,desppesobruto, despfob, "				+ "despconsec, despconseczfp,despnotifzfp,desptipo,despcelcond,despfechalv, desphoralv, despfechasv, desphorasv, "				+" despfechaic, desphoraic, despfechafc, desphorafc, desptipoveh, desphorapactada) VALUES ("				+ (despempresa == null ? "NULL" : "'" + despempresa + "'") + "," + (despfecha == null ? "NULL" : "'" + despfecha + "'") + "," + (despobservacion == null ? "NULL" : "'" + despobservacion + "'") + "," + (despplaca == null ? "NULL" : "'" + despplaca + "'") + ","				+ (despnombrecond == null ? "NULL" : "'" + despnombrecond + "'") + "," + (despcedcond == null ? "NULL" : "'" + despcedcond + "'") + "," + (desptransportadora == null ? "NULL" : "'" + desptransportadora + "'") + "," + (despestado == null ? "NULL" : "'" + despestado + "'") + ","				+ (despbultos == null ? "NULL" : "'" + despbultos + "'") + "," + (despbultosarmados == null ? "NULL" : "'" + despbultosarmados + "'") + "," + (desppesoneto == null ? "NULL" : "'" + desppesoneto + "'") + "," + (desppesobruto == null ? "NULL" : "'" + desppesobruto + "'") + ","				+ (despfob == null ? "NULL" : "'" + despfob + "'") + "," + (despconsec == null ? "NULL" : "'" + despconsec + "'") + "," + (despconseczfp == null ? "NULL" : "'" + despconseczfp + "'")  + "," + (despnotifzfp == null ? "0" : "'" + despnotifzfp + "'") 				+ "," + (desptipo == null ? "NULL" : "'" + desptipo + "'")  + "," + (despcelcond == null ? "NULL" : "'" + despcelcond + "'")				+ "," + (despfechalv == null || (despfechalv != null && despfechalv.equals("")) ? "NULL" : "'" + despfechalv + "'") + "," + (desphoralv == null ? "NULL" : "'" + desphoralv + "'")				+ "," + (despfechasv == null || (despfechasv != null && despfechasv.equals("")) ? "NULL" : "'" + despfechasv + "'") + "," + (desphorasv == null ? "NULL" : "'" + desphorasv + "'")				+ "," + (despfechaic == null || (despfechaic != null && despfechaic.equals("")) ? "NULL" : "'" + despfechaic + "'") + "," + (desphoraic == null ? "NULL" : "'" + desphoraic + "'")				+ "," + (despfechafc == null || (despfechafc != null && despfechafc.equals("")) ? "NULL" : "'" + despfechafc + "'") + "," + (desphorafc == null ? "NULL" : "'" + desphorafc + "'")				+ "," + (desptipoveh == null ? "NULL" : "'" + desptipoveh + "'") + "," + (desphorapactada == null ? "NULL" : "'" + desphorapactada + "'")				+ ")";		int resp = db.executeUpdate(insert);		return resp == 0 ? false : true;	}	public despacho getdespacho(String despcodsx) {		String cad = "SELECT * FROM despacho WHERE despcodsx='" + despcodsx + "'";		return (despacho) getEntidad(cad);	}	public boolean updatedespacho(despacho entity) throws SQLException {		String cad = " update despacho set  " + " despempresa = " + (entity.getdespempresa() == null ? "NULL" : "'" + entity.getdespempresa() + "'") + "," + " despfecha = " + (entity.getdespfecha() == null ? "NULL" : "'" + entity.getdespfecha() + "'") + "," + " despobservacion = "				+ (entity.getdespobservacion() == null ? "NULL" : "'" + entity.getdespobservacion() + "'") + "," + " despplaca = " + (entity.getdespplaca() == null ? "NULL" : "'" + entity.getdespplaca() + "'") + "," + " despnombrecond = "				+ (entity.getdespnombrecond() == null ? "NULL" : "'" + entity.getdespnombrecond() + "'") + "," + " despcedcond = " + (entity.getdespcedcond() == null ? "NULL" : "'" + entity.getdespcedcond() + "'") + "," + " desptransportadora = "				+ (entity.getdesptransportadora() == null ? "NULL" : "'" + entity.getdesptransportadora() + "'") + "," + " despestado = " + (entity.getdespestado() == null ? "NULL" : "'" + entity.getdespestado() + "'") + "," + " despbultos= "				+ (entity.getDespbultos() == null ? "NULL" : "'" + entity.getDespbultos() + "'") + "," + " despbultosarmados = " + (entity.getDespbultosarmados() == null ? "NULL" : "'" + entity.getDespbultosarmados() + "'") + "," + " desppesoneto = "				+ (entity.getDesppesoneto() == null ? "NULL" : "'" + entity.getDesppesoneto() + "'") + "," + " desppesobruto = " + (entity.getDesppesobruto() == null ? "NULL" : "'" + entity.getDesppesobruto() + "'") + "," + " despfob = "				+ (entity.getDespfob() == null ? "NULL" : "'" + entity.getDespfob() + "'") + "," + " despconsec = " + (entity.getDespconsec() == null ? "NULL" : "'" + entity.getDespconsec() + "'") + "," + " despconseczfp = "				+ (entity.getDespconsec() == null ? "NULL" : "'" + entity.getDespconseczfp() + "'") + "," + " despnotifzfp = "				+ (entity.getDespnotifzfp() == null ? "0" : "'" + entity.getDespnotifzfp() + "'") + "," + " desptipo = "				+ (entity.getDesptipo() == null ? "NULL" : "'" + entity.getDesptipo() + "'") + "," + " despcelcond = "				+ (entity.getDespcelcond() == null ? "NULL" : "'" + entity.getDespcelcond() + "'") + "," + " despfechalv = "				+ (entity.getDespfechalv() == null || (entity.getDespfechalv() != null && entity.getDespfechalv().equals("")) ? "NULL" : "'" + entity.getDespfechalv() + "'") + "," + " desphoralv = "				+ (entity.getDesphoralv() == null ? "NULL" : "'" + entity.getDesphoralv() + "'") + "," + " despfechasv = "				+ (entity.getDespfechasv() == null || (entity.getDespfechasv() != null && entity.getDespfechasv().equals("")) ? "NULL" : "'" + entity.getDespfechasv() + "'") + "," + " desphorasv = "				+ (entity.getDesphorasv() == null ? "NULL" : "'" + entity.getDesphorasv() + "'") + "," + " despfechaic = "				+ (entity.getDespfechaic() == null || (entity.getDespfechaic() != null && entity.getDespfechaic().equals("")) ? "NULL" : "'" + entity.getDespfechaic() + "'") + "," + " desphoraic = "				+ (entity.getDesphoraic() == null ? "NULL" : "'" + entity.getDesphoraic() + "'") + "," + " despfechafc = "				+ (entity.getDespfechafc() == null || (entity.getDespfechafc() != null && entity.getDespfechafc().equals("")) ? "NULL" : "'" + entity.getDespfechafc() + "'") + "," + " desphorafc = "				+ (entity.getDesphorafc() == null ? "NULL" : "'" + entity.getDesphorafc() + "'") + "," + " desptipoveh = "				+ (entity.getDesptipoveh() == null ? "NULL" : "'" + entity.getDesptipoveh() + "'") + "," + "desphorapactada = "				+ (entity.getDesphorapactada() == null ? "NULL" : "'" + entity.getDesphorapactada() + "'") 				+ " where despcodsx = " + entity.getdespcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean updatedespacho(despachoForm entity) throws SQLException {		String cad = " update despacho set  " + " despempresa = " + (entity.getdespempresa() == null ? "NULL" : "'" + entity.getdespempresa() + "'") + "," + " despfecha = " + (entity.getdespfecha() == null ? "NULL" : "'" + entity.getdespfecha() + "'") + "," + " despobservacion = "				+ (entity.getdespobservacion() == null ? "NULL" : "'" + entity.getdespobservacion() + "'") + "," + " despplaca = " + (entity.getdespplaca() == null ? "NULL" : "'" + entity.getdespplaca() + "'") + "," + " despnombrecond = "				+ (entity.getdespnombrecond() == null ? "NULL" : "'" + entity.getdespnombrecond() + "'") + "," + " despcedcond = " + (entity.getdespcedcond() == null ? "NULL" : "'" + entity.getdespcedcond() + "'") + "," + " desptransportadora = "				+ (entity.getdesptransportadora() == null ? "NULL" : "'" + entity.getdesptransportadora() + "'") + "," + " despestado = " + (entity.getdespestado() == null ? "NULL" : "'" + entity.getdespestado() + "'") + "," + " despbultos= "				+ (entity.getDespbultos() == null ? "NULL" : "'" + entity.getDespbultos() + "'") + "," + " despbultosarmados = " + (entity.getDespbultosarmados() == null ? "NULL" : "'" + entity.getDespbultosarmados() + "'") + "," + " desppesoneto = "				+ (entity.getDesppesoneto() == null ? "NULL" : "'" + entity.getDesppesoneto() + "'") + "," + " desppesobruto = " + (entity.getDesppesobruto() == null ? "NULL" : "'" + entity.getDesppesobruto() + "'") + "," + " despfob = "				+ (entity.getDespfob() == null ? "NULL" : "'" + entity.getDespfob() + "'") + "," + " despconsec = " + (entity.getDespconsec() == null ? "NULL" : "'" + entity.getDespconsec() + "'") + "," + " despconseczfp = "				+ (entity.getDespconsec() == null ? "NULL" : "'" + entity.getDespconseczfp() + "'") + "," + " despnotifzfp = "				+ (entity.getDespnotifzfp() == null ? "NULL" : "'" + entity.getDespnotifzfp() + "'") + "," + " desptipo = "				+ (entity.getDesptipo() == null ? "NULL" : "'" + entity.getDesptipo() + "'")+ "," + " despcelcond = "				+ (entity.getDespcelcond() == null ? "NULL" : "'" + entity.getDespcelcond() + "'")+ "," + " despfechalv = "				+ (entity.getDespfechalv() == null || (entity.getDespfechalv() != null && entity.getDespfechalv().equals("")) ? "NULL" : "'" + entity.getDespfechalv() + "'") + "," + " desphoralv = "				+ (entity.getDesphoralv() == null ? "NULL" : "'" + entity.getDesphoralv() + "'") + "," + " despfechasv = "				+ (entity.getDespfechasv() == null || (entity.getDespfechasv() != null && entity.getDespfechasv().equals("")) ? "NULL" : "'" + entity.getDespfechasv() + "'") + "," + " desphorasv = "				+ (entity.getDesphorasv() == null ? "NULL" : "'" + entity.getDesphorasv() + "'") + "," + " despfechaic = "				+ (entity.getDespfechaic() == null || (entity.getDespfechaic() != null && entity.getDespfechaic().equals("")) ? "NULL" : "'" + entity.getDespfechaic() + "'") + "," + " desphoraic = "				+ (entity.getDesphoraic() == null ? "NULL" : "'" + entity.getDesphoraic() + "'") + "," + " despfechafc = "				+ (entity.getDespfechafc() == null || (entity.getDespfechafc() != null && entity.getDespfechafc().equals("")) ? "NULL" : "'" + entity.getDespfechafc() + "'") + "," + " desphorafc = "				+ (entity.getDesphorafc() == null ? "NULL" : "'" + entity.getDesphorafc() + "'") + "," + " desptipoveh = "				+ (entity.getDesptipoveh() == null ? "NULL" : "'" + entity.getDesptipoveh() + "'") + "," + "desphorapactada = "				+ (entity.getDesphorapactada() == null ? "NULL" : "'" + entity.getDesphorapactada() + "'") 				+ " where despcodsx = " + entity.getdespcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean eliminar(String despcodsx) throws SQLException {		String elim = " delete from despacho where despcodsx = '" + despcodsx + "'";		int r = db.executeUpdate(elim);		return r == 0 ? false : true;	}	public despacho getdespacho(String despempresa, String despfecha) {		String cad = "SELECT * FROM despacho WHERE despempresa='" + despempresa + "'  and despfecha='" + despfecha + "'";		return (despacho) getEntidad(cad);	}	public boolean validarTiempoDespachoOLD(String despcodsx) {		despacho desp = getdespacho(despcodsx);		String fechadespacho = desp.getdespfecha();		String cad = "select  (timestamp '" + fechadespacho + "' + interval '12 hour')";		String transcurrido = getCampo(cad);		System.out.println("transcurrido:" + transcurrido);		System.out.println("fecha:" + fechadespacho);		return Fecha.compararfechas(Fecha.getFecha(), transcurrido);	}		public boolean validarTiempoDespacho(String despcodsx) {		String cad = "select case when despfecha between date_trunc('month',current_date) and date_trunc('month',current_date) +'1month' ::interval -'1sec' ::interval "				+ " then 1 else 0 end "				+ " from despacho where despcodsx = " + despcodsx;		String transcurrido = getCampo(cad);		return getConteo(cad) == 1;	}	public Collection getListaPlanillaDespacho(String despcodsx) {		String consulta = "select pedguia, pedfactura, pedordencompra, sucnombre, peddireccion,ciunombre, depnombre, " + " despedvalor,  despedpesobruto , despedbultos , pedcodsx as kilovolumen, succodigo, despedvalorfac " + " from pedido, despacho, despacho_pedido, cliente, sucursal, ciudad, departamento where "//				+ " pedcodsx = despedpedido and despcodsx = despeddespacho " + " and pedcliente = clicodsx and ((pedsucursal = succodigo) or (pedsucursal = succodsx)) and succodcliente = clicodsx  " + " and pedciudad = ciucodigo and peddepartamento = depcodigo and despcodsx =  " + despcodsx				+ " pedcodsx = despedpedido and despcodsx = despeddespacho " + " and pedcliente = clicodsx and pedsucursal = succodsx and succodcliente = clicodsx  " + " and pedciudad = ciucodigo and peddepartamento = depcodigo and despcodsx =  " + despcodsx				+ " order by pedguia asc";		// " and despestado='FINALIZADO'";		Collection b = getListaDeListas(consulta);		System.out.println("---------------------->11111111111" + b);		return b;	}	public Collection getListaPlanillaDespachonew(String despcodsx) {		String consulta = "select pedguia, pedfactura, pedordencompra, sucnombre, peddireccion,ciunombre, depnombre, " + " despedvalor,  despedpesobruto , despedbultos , pedcodsx as kilovolumen " + " from pedido, despacho, despacho_pedido, cliente, sucursal, ciudad, departamento where "//				+ " pedcodsx = despedpedido and despcodsx = despeddespacho " + " and pedcliente = clicodsx and pedsucursal = succodigo and succodcliente = clicodsx  " + " and pedciudad = ciucodigo and peddepartamento = depcodigo and despcodsx =  " + despcodsx + " order by pedguia asc";				+ " pedcodsx = despedpedido and despcodsx = despeddespacho " + " and pedcliente = clicodsx and pedsucursal = succodsx and succodcliente = clicodsx  " + " and pedciudad = ciucodigo and peddepartamento = depcodigo and despcodsx =  " + despcodsx + " order by pedguia asc";		// " and despestado='FINALIZADO'";		Collection b = getListaDeListas(consulta);		System.out.println("---------------------->222222222" + b);		return b;	}	public BigDecimal getSaldoReservadoDespacho(String procodsx, String tipo) {		String consulta = "select sum(refdcant)  from despacho, despacho_pedido, referencia_despacho, pedido " + " where despcodsx = despeddespacho and despedcodsx = refddespacho_pedido  and pedcodsx = despedpedido " + " and despestado='TRAMITE' and refdproducto=" + procodsx + " and pedtipo='"				+ tipo + "'";		String resp = getCampo(consulta);		return resp == null || resp.equals("") ? BigDecimal.ZERO : new BigDecimal(resp);	}	public Collection getListaConsolidado(String despcodsx) {		String consulta = "select * from consolidado_despacho(" + despcodsx + ")";		return getListaDeListas(consulta);	}	public String getKiloVolumenDespachoPedido(String despcodsx, String pedcodsx) {		String cad = "select   sum(prokilovolumen *  refdcant)  from producto, despacho, despacho_pedido, referencia_despacho where " + "  procodsx = refdproducto and despedcodsx = refddespacho_pedido and  despcodsx = despeddespacho and " + " despcodsx = " + despcodsx + " and despedpedido ="				+ pedcodsx;		String resp = getCampo(cad);		return resp == null || resp.equals("0") ? "0.00" : resp;	}	public Collection getListaPlanillaDespachoPorGuia(String despcodsx) {		String consulta = "select pedguia,  sucnombre, peddireccion,ciunombre, depnombre, " + " sum(despedvalor) as valor,  sum(despedpesobruto ) as bruto, sum(despedbultos ) as bultos, pedguia as kilovolumen, succodigo, sum(despedvalorfac) as valorfac "				//+ " from pedido, despacho, despacho_pedido, cliente, sucursal, ciudad, departamento where " + " pedcodsx = despedpedido and despcodsx = despeddespacho " + " and pedcliente = clicodsx and ((pedsucursal = succodigo) or (pedsucursal = succodsx)) and succodcliente = clicodsx  "				+ " from pedido, despacho, despacho_pedido, cliente, sucursal, ciudad, departamento where " + " pedcodsx = despedpedido and despcodsx = despeddespacho " + " and pedcliente = clicodsx and pedsucursal = succodsx and succodcliente = clicodsx  "				+ " and pedciudad = ciucodigo and peddepartamento = depcodigo and despcodsx =  " + despcodsx + " group by pedguia,  sucnombre, peddireccion,ciunombre, depnombre, succodigo" + " order by pedguia asc ";		// " and despestado='FINALIZADO'";		return getListaDeListas(consulta);	}		public String getKiloVolumenDespachoPedidoGuia(String despcodsx, String guia) {		String cad = "select sum(prokilovolumen * refdcant)  from producto, despacho, despacho_pedido, referencia_despacho, pedido where " + "  procodsx = refdproducto and despedcodsx = refddespacho_pedido and  despcodsx = despeddespacho and " + " despcodsx = " + despcodsx				+ " and despedpedido = pedcodsx  and pedguia ='" + guia + "' ";		String resp = getCampo(cad);		return resp == null || resp.equals("0") ? "0.00" : resp;	}		public Collection getListaPlanillaDespachoPorCliente(String despcodsx) {		String consulta = "select succodsx, succodigo, sucnombre, peddireccion,ciunombre, depnombre, " + " sum(despedvalor) as valor,  sum(despedpesobruto ) as bruto, sum(despedbultos ) as bultos, succodigo as kilovolumen,sum(despedvalorfac) as valorfac "				+ " from pedido, despacho, despacho_pedido, cliente, sucursal, ciudad, departamento where " 				+ " pedcodsx = despedpedido and despcodsx = despeddespacho " 				//+ " and pedcliente = clicodsx and ((pedsucursal = succodigo) or (pedsucursal = succodsx)) and succodcliente = clicodsx  "				+ " and pedcliente = clicodsx and pedsucursal = succodsx and succodcliente = clicodsx  "				+ " and pedciudad = ciucodigo and peddepartamento = depcodigo and despcodsx =  " + despcodsx 				+ " group by  succodsx, sucnombre, peddireccion,ciunombre, depnombre, succodigo" + " order by succodigo asc ";		// " and despestado='FINALIZADO'";		return getListaDeListas(consulta);	}		public String getKiloVolumenDespachoPedidoGCliente(String despcodsx, String succodigo) {		String cad = "select sum(prokilovolumen * refdcant)  from producto, despacho, despacho_pedido, referencia_despacho, pedido, cliente, sucursal " 				+ " where procodsx = refdproducto and despedcodsx = refddespacho_pedido and  despcodsx = despeddespacho " 				+ " and despcodsx = " + despcodsx			//	+ " and pedcliente = clicodsx and ((pedsucursal = succodigo) or (pedsucursal = succodsx)) and succodcliente = clicodsx  "				+ " and pedcliente = clicodsx and pedsucursal = succodsx and succodcliente = clicodsx  "				+ " and despedpedido = pedcodsx  and succodigo ='" + succodigo + "' ";		String resp = getCampo(cad);		return resp == null || resp.equals("0") ? "0.00" : resp;	}	public Collection getListaBAT(String codcia, String despfechainicial, String despfechafinal) {		String consulta = "select  pednumpedido, sucnombre, trafdocumento, promodelo,prodescripcion, despfecha, sum(refpcantidad) as Cantidad," +				"ciunombre, sum(refppesobrutototal) as PesoBruto,despobservacion " +				"from producto, pedido, despacho, despacho_pedido, referencia_despacho, cliente, sucursal, ciudad, trafico, ingreso, entrada, referencia_pedido " +				"where pedcodsx = despedpedido and despcodsx = despeddespacho  and despfecha between '" + despfechainicial + "' and '" + despfechafinal + "' and " +				"procodsx = refdproducto and despedcodsx = refddespacho_pedido and  despcodsx = despeddespacho and " +//				" pedcliente = clicodsx and ((pedsucursal = succodigo) or (pedsucursal = succodsx)) and despedpedido=pedcodsx and " +				" pedcliente = clicodsx and pedsucursal = succodsx and despedpedido=pedcodsx and " +				"succodcliente = clicodsx   and pedciudad = ciucodigo and pedcompania='" + codcia + "' and " + 				"trafcodsx=ingtrafico and ingcodsx=entcodingreso and refpentrada=entcodsx and refpnumpedido=pedcodsx and refpproducto=procodsx " +				"group by pednumpedido, sucnombre, trafdocumento,promodelo,prodescripcion, despfecha, ciunombre,despobservacion " + 				"order by despfecha asc";		return getListaDeListas(consulta);	}		public Collection reporte_despachos_excel(String codcia, String despfechainicial, String despfechafinal) {		String consulta = "SELECT transpnombre, despfecha, pednumpedido, pedguia, pedfactura, sucnombre, promodelo, catdescripcion, referencia_despacho.refdcant AS sum,refdvalor, ciunombre " +		" FROM despacho, compania, cliente, pedido, transportadora, despacho_pedido, referencia_despacho, producto, referencia_despacho_pedido, categoria, sucursal, ciudad " +        " WHERE despacho.despempresa = compania.comcodsx AND compania.comcodsx='" + codcia + "' and " + " cliente.clicodsx = pedido.pedcliente AND despacho.desptransportadora = transportadora.transpcodsx AND producto.procategoria=categoria.catcodsx AND producto.procategoria in (1,2,3,4,5,6) AND " +        " despacho.despestado::text = 'FINALIZADO'::text AND despacho_pedido.despeddespacho = despacho.despcodsx AND despacho.despfecha between '" + despfechainicial + "' and '" + despfechafinal + "' and " +        " referencia_despacho.refddespacho_pedido = despacho_pedido.despedcodsx AND referencia_despacho.refdproducto = producto.procodsx AND succodcliente = clicodsx and " +     // " referencia_despacho_pedido.refdpcodrefd = referencia_despacho.refdcodsx AND pedido.pedcodsx = despacho_pedido.despedpedido and pedciudad = ciucodigo and ((pedsucursal = succodigo) or (pedsucursal = succodsx)) " +        " referencia_despacho_pedido.refdpcodrefd = referencia_despacho.refdcodsx AND pedido.pedcodsx = despacho_pedido.despedpedido and pedciudad = ciucodigo and pedsucursal = succodsx " +        " GROUP BY transpnombre, despfecha, pednumpedido, pedguia, pedfactura, sucnombre, promodelo, catdescripcion, ciunombre, referencia_despacho.refdcant, refdvalor " +        " ORDER BY despfecha, pednumpedido, promodelo";		return getListaDeListas(consulta);	}			public Collection despachos_sin_notificacion(String despfechainicial, String despfechafinal) {		String consulta = "select despcodsx, comnombre,despfecha, transpnombre" +			" from despacho " +			" inner join compania on comcodsx = despempresa " + 			" inner join transportadora on transpcodsx = desptransportadora " +			" where despnotifzfp = 0 and despestado = 'FINALIZADO' " +			" and despfecha between '" + despfechainicial + "' and '" + despfechafinal + "'" +			" order by 1";		return getListaDeListas(consulta);	}		public Collection getListaArchivoNotificacion(String despcodsx) {		String consulta = "select consec as consec,sum(cantidad) as cantidad,sum(peso) as peso from consolidado_despacho(" + despcodsx + ")" +        " group by consec order by 1";		return getListaDeListas(consulta);	}		public Collection getArchivoPlanilla(String despcodsx) {		String consulta = "SELECT  pedguia, 'CALI', ciunombre, sucnombre, peddireccion, clitelefono, " 				+ " round(despedbultos) as numunid, sum(refppesobrutototal) as peso, "				+ " round(sum(prokilovolumen*refpcantidad),2) as kilovol, round(pedsubtotal)as subtotal, "  				+ " pedfactura, pednumpedido, pedordencompra, round(pedfactotal) as total " 				+ " FROM despacho, compania, cliente, pedido, transportadora, despacho_pedido, referencia_despacho, " 				+ " producto, referencia_despacho_pedido, sucursal, ciudad, departamento, referencia_pedido "				+ " WHERE despacho.despempresa = compania.comcodsx " 				+ " AND ciudepto=depcodigo " 				+ " AND cliente.clicodsx = pedido.pedcliente "				+ " AND despacho.desptransportadora = transportadora.transpcodsx " 				+ " AND despacho_pedido.despeddespacho = despacho.despcodsx " 				+ " AND refdcodrefp=refpcodsx " 				+ " AND  referencia_despacho.refddespacho_pedido = despacho_pedido.despedcodsx " 				+ " AND despcodsx = " + despcodsx 				+ " AND referencia_despacho.refdproducto = producto.procodsx " 				+ " AND succodcliente = clicodsx " 				+ " and referencia_despacho_pedido.refdpcodrefd = referencia_despacho.refdcodsx " 				+ " AND pedido.pedcodsx = despacho_pedido.despedpedido " 				+ " and pedciudad = ciucodigo " 				+ " and pedsucursal = succodsx "    				+ " GROUP BY pedguia,succodigo,ciunombre, sucnombre, peddireccion, clitelefono, despedbultos, pedsubtotal, pedfactura, pednumpedido, pedordencompra, pedfactotal "				+ " ORDER BY succodigo ";		return getListaDeListas(consulta);	}		public Collection getListaArchivoNotificacionItem(String despcodsx) {		String consulta = "select consec,case when tipo = 'DEVOLUCION' then 'N-'||modelo::text else modelo end as item,sum(cantidad) as cantidad "				+ " from consolidado_despacho(" + despcodsx + ")" 				+ " group by consec,tipo,modelo  order by 1";		return getListaDeListas(consulta);	}		public String getEstibasDespachoPedido(String despcodsx, String pedcodsx) {		String cad = "select sum(refdcant/prounimasterpac)\r" + 				" from despacho_pedido\r" + 				" inner join referencia_despacho on refddespacho_pedido = despedcodsx\r" + 				" inner join producto on procodsx = refdproducto\r" + 				" where despeddespacho = " + despcodsx + " and despedpedido = " + pedcodsx;		String resp = getCampo(cad);		return resp == null || resp.equals("0") ? "0.00" : resp;	}		public String getEstibasDespachoPedidoGuia(String despcodsx, String guia) {		String cad = "select sum(refdcant/prounimasterpac)\r" + 				" from despacho_pedido\r" + 				" inner join referencia_despacho on refddespacho_pedido = despedcodsx\r" + 				" inner join producto on procodsx = refdproducto\r" + 				" inner join pedido on pedcodsx = despedpedido\r" + 				" where despeddespacho = " + despcodsx + " and pedguia = '" + guia + "'";		String resp = getCampo(cad);		return resp == null || resp.equals("0") ? "0.00" : resp;	}		public String getEstibasDespachoPedidoCliente(String despcodsx, String succodigo) {		String cad = "select sum(refdcant/prounimasterpac)  from producto, despacho, despacho_pedido, referencia_despacho, pedido, cliente, sucursal " 				+ " where procodsx = refdproducto and despedcodsx = refddespacho_pedido and  despcodsx = despeddespacho " 				+ " and despcodsx = " + despcodsx			//	+ " and pedcliente = clicodsx and ((pedsucursal = succodigo) or (pedsucursal = succodsx)) and succodcliente = clicodsx  "				+ " and pedcliente = clicodsx and pedsucursal = succodsx and succodcliente = clicodsx  "				+ " and despedpedido = pedcodsx  and succodigo ='" + succodigo + "' ";		String resp = getCampo(cad);		return resp == null || resp.equals("0") ? "0.00" : resp;	}}