package pedido.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException; import org.apache.struts.action.ActionMessage;  import org.apache.struts.action.ActionMessages; import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import pedido.control.*;import pedido.entity.*;import pedido.form.*;import org.apache.struts.action.*;  public final class novedad_pedidoAction  extends Action{
			 public ActionForward execute(ActionMapping mapping,	ActionForm form, 			HttpServletRequest request,	HttpServletResponse response)			throws IOException, ServletException {
novedad_pedidoForm _form = (novedad_pedidoForm)form;  gstnovedad_pedido control = new gstnovedad_pedido(); String opcion = request.getParameter("opcion");  opcion = opcion==null || ( opcion!=null && opcion.equals("")) ? "crear" : opcion; 
 String mensaje = "";  String destino = ""; //OPCION DE set:  if(opcion.equals("set")) {  novedad_pedido entity = control.getnovedad_pedido(request.getParameter("codsx")); novedad_pedidoForm  temp  = new novedad_pedidoForm();  temp.setopcion("update"); temp.llenar(entity);  request.setAttribute("novedad_pedidoForm", temp);  destino = "novedad_pedido_datos";  }  //opcion de CREAR  if(opcion.equals("crear")) {  String novpedido = _form.getnovpedido();   String novfecha = _form.getnovfecha();   String novdesc = _form.getnovdesc();   String novusuario = _form.getnovusuario();   String resumen = _form.getresumen();   destino = "novedad_pedido"; 
  try {  control.crearnovedad_pedido(novpedido,novfecha,novdesc,novusuario,resumen);  mensaje = "novedad_pedido Creado con Exito";  novedad_pedido entity = control.getnovedad_pedido(novpedido, novfecha);novedad_pedidoForm  temp  = new novedad_pedidoForm();temp.setopcion("update"); temp.llenar(entity);request.setAttribute("novedad_pedidoForm", temp);  } catch (SQLException e) {   e.printStackTrace();  mensaje = "No se pudo Crear el novedad_pedido: <br> " + e.getLocalizedMessage();   }  }  // Opcion de update  if(opcion.equals("update")) {   try {  destino = "novedad_pedido";   control.updatenovedad_pedido(_form);   mensaje = "novedad_pedido Actualizado con Exito";    } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Actualizar el novedad_pedido: <br> " + e.getLocalizedMessage();  }  }  // Opcion de eliminar  if(opcion.equals("delete")) {  destino = "novedad_pedido"; String codsx = request.getParameter("codsx");  try {   control.eliminar(codsx);   mensaje = "novedad_pedido Eliminado con Exito";    } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Eliminar el novedad_pedido: <br> " + e.getLocalizedMessage();  }  }  ActionMessages e = getErrors(request);  e.add("general", new ActionMessage(mensaje, false)); addErrors(request, e);  return mapping.findForward(destino);    } }