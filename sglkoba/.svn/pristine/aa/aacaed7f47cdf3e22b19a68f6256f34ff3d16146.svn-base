package pedido.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException; import org.apache.struts.action.ActionMessage;  import org.apache.struts.action.ActionMessages; import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import pedido.control.*;import pedido.entity.*;import pedido.form.*;import org.apache.struts.action.*;  public final class packingAction  extends Action{
			 public ActionForward execute(ActionMapping mapping,	ActionForm form, 			HttpServletRequest request,	HttpServletResponse response)			throws IOException, ServletException {
packingForm _form = (packingForm)form;  gstpacking control = new gstpacking(); String opcion = request.getParameter("opcion");  opcion = opcion==null || ( opcion!=null && opcion.equals("")) ? "crear" : opcion; 
 String mensaje = "";  String destino = "";  if(opcion.equals("descomprometer")) {	 control.descomprometerSaldo(request.getParameter("codsx"));		 packing entity = control.getpacking(request.getParameter("codsx")); 	 packingForm  temp  = new packingForm();	 mensaje = "SALDOS LIBERADOS EXITOSAMENTE";	 temp.setopcion("update");	 temp.llenar(entity); 	 request.setAttribute("packingForm", temp); 	 destino = "packing_datos"; 	  }   if(opcion.equals("activar")) { 	 packing entity = control.getpacking(request.getParameter("codsx")); 	 packingForm  temp  = new packingForm();	 entity.setpackestado("TRAMITE");		 try {		 		 if(control.tienePicking(entity.getpackcodsx())) {			 entity.setpackestado("FINALIZADO");			 throw new SQLException("EL PICKING TIENE PACKINGS ASOCIADOS");		 }		control.updatepacking(entity);		mensaje = "Activacion Exitosa";	} catch (SQLException e1) {		mensaje = "no se pudo activar:" + e1.getMessage();		e1.printStackTrace();	}	 	 temp.setopcion("update");	 temp.llenar(entity); 	 request.setAttribute("packingForm", temp); 	 destino = "packing_datos"; 	 }  //OPCION DE set:  if(opcion.equals("set")) {  packing entity = control.getpacking(request.getParameter("codsx")); packingForm  temp  = new packingForm();  temp.setopcion("update"); temp.llenar(entity);  request.setAttribute("packingForm", temp);  destino = "packing_datos";  }  //opcion de CREAR  if(opcion.equals("crear")) {  String packempresa = _form.getpackempresa();   String packfecha = _form.getpackfecha();   String packobservaciones = _form.getpackobservaciones();   String packestado = _form.getpackestado();   destino = "packing_datos";  
  try {  control.crearpacking(packempresa,packfecha,packobservaciones,packestado);  packing pk = control.getpacking(packempresa,packfecha ); _form.setpackcodsx( pk.getpackcodsx()); _form.setopcion("update"); request.setAttribute("packingForm", _form); mensaje = "packing Creado con Exito";    } catch (SQLException e) {   e.printStackTrace();  mensaje = "No se pudo Crear el packing: <br> " + e.getLocalizedMessage();   }  }  // Opcion de update  if(opcion.equals("update")) {   try {  destino = "packing_datos";    control.updatepacking(_form);   mensaje = "packing Actualizado con Exito";    } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Actualizar el packing: <br> " + e.getLocalizedMessage();  }  }  // Opcion de eliminar  if(opcion.equals("delete")) {  destino = "packing"; String codsx = request.getParameter("codsx");  try {   control.eliminar(codsx);   mensaje = "packing Eliminado con Exito";    } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Eliminar el packing: <br> " + e.getLocalizedMessage();  }  }  ActionMessages e = getErrors(request);  e.add("general", new ActionMessage(mensaje, false)); addErrors(request, e);  return mapping.findForward(destino);    } }