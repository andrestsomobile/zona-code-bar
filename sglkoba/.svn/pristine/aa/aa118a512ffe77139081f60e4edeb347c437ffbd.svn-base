package maestro.action;import java.io.IOException;import java.sql.SQLException;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import maestro.control.gstcategoria_oster;import maestro.entity.categoria_oster;import maestro.form.categoria_osterForm;import org.apache.struts.action.Action;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;public final class categoria_osterAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {		categoria_osterForm _form = (categoria_osterForm) form;		gstcategoria_oster control = new gstcategoria_oster();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear" : opcion;		// OPCION DE set:		if (opcion.equals("set")) {			categoria_oster entity = control.getcategoria_oster(request.getParameter("codsx"));			categoria_osterForm temp = new categoria_osterForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("categoria_osterForm", temp);			return mapping.findForward("categoria_oster_datos");		}		String mensaje = "";		// opcion de CREAR		if (opcion.equals("crear")) {			String catodescripcion = _form.getcatodescripcion();			try {				control.crearcategoria_oster(catodescripcion);				mensaje = "categoria_oster Creado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Crear el categoria_oster: <br> " + e.getLocalizedMessage();			}		}		// Opcion de update		if (opcion.equals("update")) {			try {				control.updatecategoria_oster(_form);				mensaje = "categoria_oster Actualizado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el categoria_oster: <br> " + e.getLocalizedMessage();			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			String codsx = request.getParameter("codsx");			try {				control.eliminar(codsx);				mensaje = "categoria_oster Eliminado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el categoria_oster: <br> " + e.getLocalizedMessage();			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward("categoria_oster");	}}