package maestro.control;import maestro.form.*;import maestro.entity.*;import db.*;import java.util.Collection;import java.sql.SQLException;  /*************************************************************CLASE GENERADA CON generator V3.0 By pablito*******/public class gstdepartamento extends GstTabla { public gstdepartamento() {  db= new beanConnector();  this.classEntidad =departamento.class; 
}public gstdepartamento(beanConnector db) {  this.db= db;  this.classEntidad =departamento.class; 
}public Collection getlistadepartamento() {String consulta = " SELECT * FROM departamento order by depzona, depnombre  asc";    return getLista(consulta);  }public departamento getdepartamento_by_ukeyCodigo(String depcodigo ) {	 String cad = "SELECT * FROM departamento WHERE depcodigo='"+depcodigo+ "'" ;	 return (departamento)getEntidad(cad);  }public departamento getdepartamento_by_ukeyNombre(String depnombre) {	 String cad = "SELECT * FROM departamento WHERE depnombre = '"+depnombre+"'" ;	 return (departamento)getEntidad(cad);  }public Collection getlistadepartamento(String start, String param ) { start= start==null ? "0" :  start;   param= param==null ? "" :  param; String consulta = " SELECT departamento.* FROM  departamento where" +getTextoBusquedaResumen( param) +  " order by depcodigo asc  limit " + this.maxfilas  + " offset  " + (Integer.parseInt(start) * this.maxfilas);     return getLista(consulta);  } public int getTotalPaginaslistadepartamento(String param) {  param= param==null ? "" :  param; String consulta = " SELECT count(1) FROM departamento where  " + getTextoBusquedaResumen(param) + "  ";      return getPaginas(consulta);  	}  public boolean creardepartamento(String depcodigo, String depnombre,String depzona) throws SQLException { String insert = "INSERT INTO departamento (depcodigo,depnombre,depzona) VALUES (" 	 + depcodigo + "," 	 +(depnombre==null ? "NULL" : "'" + depnombre+"'") + "," 	 +(depzona==null ? "NULL" : "'" + depzona+"'")   + ")";int resp = db.executeUpdate(insert);return resp ==0 ? false : true;  } public departamento getdepartamento(String depcodigo) { String cad = "SELECT * FROM departamento WHERE depcodigo='"+depcodigo+ "'" ; return (departamento)getEntidad(cad);  }public boolean updatedepartamento( departamento entity ) throws SQLException {  String cad = " update departamento set  " + " depnombre = " + ( entity.getdepnombre() == null ? "NULL": "'" + entity.getdepnombre() + "'" ) + "," + " depzona = " +( entity.getdepzona() == null ? "NULL": "'" + entity.getdepzona() + "'" ) + " where depcodigo = " +  entity.getdepcodigo() ;   int resp= db.executeUpdate(cad);      return resp ==0 ? false : true ;      } public boolean updatedepartamento( departamentoForm entity ) throws SQLException {  String cad = " update departamento set  " + " depnombre = " + ( entity.getdepnombre() == null ? "NULL": "'" + entity.getdepnombre() + "'" ) + "," + " depzona = " +( entity.getdepzona() == null ? "NULL": "'" + entity.getdepzona() + "'" ) + " where depcodigo = " +  entity.getdepcodigo() ;   int resp= db.executeUpdate(cad);      return resp ==0 ? false : true ;      }  public boolean eliminar(String depcodigo) throws SQLException {   String elim = " delete from departamento where depcodigo = '"+ depcodigo+ "'"; int r = db.executeUpdate(elim) ; return  r==0? false : true ;  } }