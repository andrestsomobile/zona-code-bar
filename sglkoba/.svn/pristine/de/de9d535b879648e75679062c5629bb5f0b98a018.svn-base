package averias.control;import averias.form.*;import averias.entity.*;import db.*;import java.util.Collection;import java.sql.SQLException;/******************************************************** ***** CLASE GENERADA CON generator V3.0 By pablito *******/public class gstreparacion extends GstTabla {	public gstreparacion() {		db = new beanConnector();		this.classEntidad = reparacion.class;	}	public gstreparacion(beanConnector db) {		this.db = db;		this.classEntidad = reparacion.class;	}	public Collection getlistareparacion() {		String consulta = " SELECT * FROM reparacion";		return getLista(consulta);	}	public Collection getlistareparacion(String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " SELECT * FROM reparacion where " + getTextoBusquedaResumen(param) + " order by repcodsx desc " + "  limit " + this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistareparacion(String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM reparacion where  " + getTextoBusquedaResumen(param);		return getPaginas(consulta);	}	public boolean crearreparacion(String repcodcia, String repfecha, String repsaldo, String repdestino, String repestado, String repobservacion, String reppedido) throws SQLException {		String insert = "INSERT INTO reparacion (repcodcia,repfecha,repsaldo,repdestino,repestado, repobservacion, reppedido) VALUES (" + (repcodcia == null ? "NULL" : "'" + repcodcia + "'") + "," + (repfecha == null ? "NULL" : "'" + repfecha + "'") + ","				+ (repsaldo == null ? "NULL" : "'" + repsaldo + "'") + "," + (repdestino == null ? "NULL" : "'" + repdestino + "'") + "," + (repestado == null ? "NULL" : "'" + repestado + "'") + "," + (repobservacion == null ? "NULL" : "'" + repobservacion + "'") + ","				+ (reppedido == null ? "NULL" : "'" + reppedido + "'")				+ ")";		int resp = db.executeUpdate(insert);		return resp == 0 ? false : true;	}	public reparacion getreparacion(String repcodsx) {		String cad = "SELECT * FROM reparacion WHERE repcodsx='" + repcodsx + "'";		return (reparacion) getEntidad(cad);	}	public boolean updatereparacion(reparacion entity) throws SQLException {		String cad = " update reparacion set  " + " repcodcia = " + (entity.getrepcodcia() == null ? "NULL" : "'" + entity.getrepcodcia() + "'") + "," + " repfecha = " + (entity.getrepfecha() == null ? "NULL" : "'" + entity.getrepfecha() + "'") + "," + " repsaldo = "				+ (entity.getrepsaldo() == null ? "NULL" : "'" + entity.getrepsaldo() + "'") + "," + " repdestino = " + (entity.getrepdestino() == null ? "NULL" : "'" + entity.getrepdestino() + "'") + "," + " repestado = "				+ (entity.getrepestado() == null ? "NULL" : "'" + entity.getrepestado() + "'") + "," + " repobservacion= " + (entity.getRepobservacion() == null ? "NULL" : "'" + entity.getRepobservacion() + "'") + "," + " reppedido= "				+ (entity.getReppedido() == null ? "NULL" : "'" + entity.getReppedido() + "'"				) + " where repcodsx = " + entity.getrepcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean updatereparacion(reparacionForm entity) throws SQLException {		String cad = " update reparacion set  " + " repcodcia = " + (entity.getrepcodcia() == null ? "NULL" : "'" + entity.getrepcodcia() + "'") + "," + " repfecha = " + (entity.getrepfecha() == null ? "NULL" : "'" + entity.getrepfecha() + "'") + "," + " repsaldo = "				+ (entity.getrepsaldo() == null ? "NULL" : "'" + entity.getrepsaldo() + "'") + "," + " repdestino = " + (entity.getrepdestino() == null ? "NULL" : "'" + entity.getrepdestino() + "'") + "," + " repestado = "				+ (entity.getrepestado() == null ? "NULL" : "'" + entity.getrepestado() + "'") + "," + " repobservacion= " + (entity.getRepobservacion() == null ? "NULL" : "'" + entity.getRepobservacion() + "'") + "," + " reppedido= "				+ (entity.getReppedido() == null ? "NULL" : "'" + entity.getReppedido() + "'"				) + " where repcodsx = " + entity.getrepcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean eliminar(String repcodsx) throws SQLException {		String elim = " delete from reparacion where repcodsx = '" + repcodsx + "'";		int r = db.executeUpdate(elim);		return r == 0 ? false : true;	}	public reparacion getreparacion(String repcodcia, String repfecha) {		String cad = "SELECT * FROM reparacion WHERE repcodcia='" + repcodcia + "' and repfecha='" + repfecha + "' ";		return (reparacion) getEntidad(cad);	}	public String getTotalUnidadesPleg(String repcodsx) {		String cad = "select  sum(repdcant_pleg) from reparacion_detalle where repdreparacion = " + repcodsx;		String resp = getCampo(cad);		return resp == null ? "0.00" : resp;	}	public String getTotalUnidadesProd(String repcodsx) {		String cad = "select  sum(repdcant_prod) from reparacion_detalle where repdreparacion = " + repcodsx;		String resp = getCampo(cad);		return resp == null ? "0.00" : resp;	}		public reparacion getreparacionByPedido(String reppedido) {		String cad = "SELECT * FROM reparacion WHERE reppedido = " + reppedido + " order by 1 desc limit 1";		return (reparacion) getEntidad(cad);	}}