package auditoria.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException; import org.apache.struts.action.ActionMessage;  import org.apache.struts.action.ActionMessages; import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import auditoria.control.*;import auditoria.entity.*;import auditoria.form.*;import org.apache.struts.action.*;  public final class auditoria_conexionesAction  extends Action{
			 public ActionForward execute(ActionMapping mapping,	ActionForm form, 			HttpServletRequest request,	HttpServletResponse response)			throws IOException, ServletException {
auditoria_conexionesForm _form = (auditoria_conexionesForm)form;  gstauditoria_conexiones control = new gstauditoria_conexiones(); String opcion = request.getParameter("opcion");  opcion = opcion==null || ( opcion!=null && opcion.equals("")) ? "crear" : opcion; 
 String mensaje = "";  String destino = ""; //OPCION DE set:  if(opcion.equals("set")) {  auditoria_conexiones entity = control.getauditoria_conexiones(request.getParameter("codsx")); auditoria_conexionesForm  temp  = new auditoria_conexionesForm();  temp.setopcion("update"); temp.llenar(entity);  request.setAttribute("auditoria_conexionesForm", temp);  destino = "auditoria_conexiones_datos";  }  //opcion de CREAR  if(opcion.equals("crear")) {  String audilogin = _form.getaudilogin();   String audinombre = _form.getaudinombre();   String audifecha = _form.getaudifecha();   String audiapp = _form.getaudiapp();   String audimodulo = _form.getaudimodulo();   destino = "auditoria_conexiones_datos"; 
  try {  control.crearauditoria_conexiones(audilogin,audinombre,audifecha,audiapp,audimodulo);  mensaje = "auditoria_conexiones Creado con Exito";  auditoria_conexiones entity = control.getauditoria_conexiones(audilogin, audifecha);auditoria_conexionesForm  temp  = new auditoria_conexionesForm();temp.setopcion("update"); temp.llenar(entity);request.setAttribute("auditoria_conexionesForm", temp);  } catch (SQLException e) {   e.printStackTrace();  mensaje = "No se pudo Crear el auditoria_conexiones: <br> " + e.getLocalizedMessage();   }  }  // Opcion de update  if(opcion.equals("update")) {   try {  destino = "auditoria_conexiones_datos";   control.updateauditoria_conexiones(_form);   mensaje = "auditoria_conexiones Actualizado con Exito";    } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Actualizar el auditoria_conexiones: <br> " + e.getLocalizedMessage();  }  }  // Opcion de eliminar  if(opcion.equals("delete")) {  destino = "auditoria_conexiones"; String codsx = request.getParameter("codsx");  try {   control.eliminar(codsx);   mensaje = "auditoria_conexiones Eliminado con Exito";    } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Eliminar el auditoria_conexiones: <br> " + e.getLocalizedMessage();  }  }  ActionMessages e = getErrors(request);  e.add("general", new ActionMessage(mensaje, false)); addErrors(request, e);  return mapping.findForward(destino);    } }