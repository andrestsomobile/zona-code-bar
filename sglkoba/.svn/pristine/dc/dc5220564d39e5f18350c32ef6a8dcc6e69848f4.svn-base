package maestro.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException; import org.apache.struts.action.ActionMessage;  import org.apache.struts.action.ActionMessages; import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import maestro.control.*;import maestro.entity.*;import maestro.form.*;import org.apache.struts.action.*;  public final class causalAction  extends Action{
			 public ActionForward execute(ActionMapping mapping,	ActionForm form, 			HttpServletRequest request,	HttpServletResponse response)			throws IOException, ServletException {
causalForm _form = (causalForm)form;  gstcausal control = new gstcausal(); String opcion = request.getParameter("opcion");  opcion = opcion==null || ( opcion!=null && opcion.equals("")) ? "crear" : opcion; 
 String mensaje = "";  String destino = ""; //OPCION DE set:  if(opcion.equals("set")) {  causal entity = control.getcausal(request.getParameter("codsx")); causalForm  temp  = new causalForm();  temp.setopcion("update"); temp.llenar(entity);  request.setAttribute("causalForm", temp);  destino = "causal_datos";  }  //opcion de CREAR  if(opcion.equals("crear")) {  String caudesc = _form.getcaudesc();   String cauresponsable = _form.getcauresponsable();   String causnota = _form.getcausnota();   String causdocsoporte = _form.getcausdocsoporte();   destino = "causal"; 
  try {  control.crearcausal(caudesc,cauresponsable,causnota,causdocsoporte);  mensaje = "causal Creado con Exito";    } catch (SQLException e) {   e.printStackTrace();  mensaje = "No se pudo Crear el causal: <br> " + e.getLocalizedMessage();   }  }  // Opcion de update  if(opcion.equals("update")) {   try {  destino = "causal";   control.updatecausal(_form);   mensaje = "causal Actualizado con Exito";    } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Actualizar el causal: <br> " + e.getLocalizedMessage();  }  }  // Opcion de eliminar  if(opcion.equals("delete")) {  destino = "causal"; String codsx = request.getParameter("codsx");  try {   control.eliminar(codsx);   mensaje = "causal Eliminado con Exito";    } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Eliminar el causal: <br> " + e.getLocalizedMessage();  }  }  ActionMessages e = getErrors(request);  e.add("general", new ActionMessage(mensaje, false)); addErrors(request, e);  return mapping.findForward(destino);    } }