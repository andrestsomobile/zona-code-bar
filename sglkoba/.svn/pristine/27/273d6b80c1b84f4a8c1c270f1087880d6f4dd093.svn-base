package pedido.action;import java.io.IOException;import java.sql.SQLException;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.struts.action.Action;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import pedido.control.gestionSaldos;import pedido.control.gstdespacho;import pedido.control.gstdespacho_pedido;import pedido.entity.despacho;import pedido.entity.despacho_pedido;import pedido.form.despachoForm;import pedido.form.despacho_pedidoForm;import db.beanConnector;public final class despacho_pedidoAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {		gstdespacho gdesp = new gstdespacho();		despacho_pedidoForm _form = (despacho_pedidoForm) form;		gstdespacho_pedido control = new gstdespacho_pedido();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear" : opcion;		String mensaje = "";		String destino = "";		// OPCION DE set:		if (opcion.equals("set")) {			despacho_pedido entity = control.getdespacho_pedido(request.getParameter("codsx"));			despacho_pedidoForm temp = new despacho_pedidoForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("despacho_pedidoForm", temp);			destino = "despacho_pedido_datos";		}		// opcion de CREAR		if (opcion.equals("crear")) {			destino = "despacho_pedido";			boolean resp = true;			beanConnector db = new beanConnector(false);			try {				gstdespacho_pedido gdp = new gstdespacho_pedido(db);				gestionSaldos gstsaldo = new gestionSaldos();				resp &= gstsaldo.respaldarDespachoByPedidoCompleto(_form.getdespeddespacho(), _form.getdespedpedido(), db, _form.getDespedbultos(), _form.getDespedbultosarmados());				despacho_pedido dp = gdp.getdespacho_pedido(_form.getdespeddespacho(), _form.getdespedpedido());				mensaje = "despacho_pedido Creado con Exito";				// creo el padre:				setPadre(dp.getdespeddespacho(), request);			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Crear el despacho_pedido: <br> " + e.getLocalizedMessage();				resp = false;			}			if (resp)				db.commit();			else				db.rollback();			db = null;		}		// Opcion de update		if (opcion.equals("update")) {			try {				destino = "despacho_datos";				control.updatedespacho_pedido(_form);				mensaje = "despacho_pedido Actualizado con Exito";				setPadre(_form.getdespeddespacho(), request);			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el despacho_pedido: <br> " + e.getLocalizedMessage();			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			destino = "despacho_pedido";			String codsx = request.getParameter("codsx");			try {				// despacho_pedido dp = control.getdespacho_pedido(codsx);				// setPadre(dp.getdespeddespacho() , request);				control.eliminar(codsx);				mensaje = "despacho_pedido Eliminado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el despacho_pedido: <br> " + e.getLocalizedMessage();			}		}				// opcion de automaticodespacho:		if (opcion.equals("automaticodespacho")) {			destino = "despacho_pedido";			String cia = request.getParameter("cia");			String despcodsx = request.getParameter("despcodsx");			String transp = request.getParameter("transp");			try {				control.automatico_despacho(cia, despcodsx, transp);				mensaje = "Proceso Automatico terminado";			} catch (SQLException e1) {				mensaje = "No se pudo ejecutar el Proceso Automatico: <br> " + e1.getLocalizedMessage();				e1.printStackTrace();			}		}						// opcion de automaticodespacho:		if (opcion.equals("automaticodespacho_pedido")) {			destino = "ed_despacho_pedido";			String cia = request.getParameter("cia");			String despcodsx = request.getParameter("despcodsx");			String transp = request.getParameter("transp");			String pedcodsx = request.getParameter("pedcodsx");			try {				control.automatico_despacho(cia, despcodsx, transp, pedcodsx);				mensaje = "Proceso Automatico Terminado";			} catch (SQLException e1) {				mensaje = "No se pudo ejecutar el Proceso Automatico: <br> " + e1.getLocalizedMessage();				e1.printStackTrace();			}		}				// Opcion de actualiza Bultos		if (opcion.equals("fijar_bultos")) {			try {				destino = "despacho_pedido";				String codsx = request.getParameter("codsx");				despacho_pedido entity = control.getdespacho_pedido(codsx);				String bultos = request.getParameter("bultos");				entity.setDespedbultos(bultos);				control.updatedespacho_pedido(entity);				mensaje = "despacho_pedido Bultos Actualizado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar Bultos del despacho_pedido: <br> " + e.getLocalizedMessage();			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward(destino);	}	private void setPadre(String codsx, HttpServletRequest request) {		despachoForm despform = new despachoForm();		gstdespacho gdesp = new gstdespacho();		despacho desp = gdesp.getdespacho(codsx);		despform.llenar(desp);		despform.setopcion("update");		request.setAttribute("despachoForm", despform);	}}