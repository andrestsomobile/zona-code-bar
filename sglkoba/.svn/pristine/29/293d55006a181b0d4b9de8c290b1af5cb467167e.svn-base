package pedido.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException; import org.apache.struts.action.ActionMessage;  import org.apache.struts.action.ActionMessages; import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import pedido.control.*;import pedido.entity.*;import pedido.form.*;import org.apache.struts.action.*;  public final class packing_detalleAction  extends Action{
			 public ActionForward execute(ActionMapping mapping,	ActionForm form, 			HttpServletRequest request,	HttpServletResponse response)			throws IOException, ServletException {
	 gstpacking gpack = new gstpacking();	 gstpacking_detalle gpackd = new gstpacking_detalle();	 packing_detalleForm _form = (packing_detalleForm)form;  gstpacking_detalle control = new gstpacking_detalle(); String opcion = request.getParameter("opcion");  opcion = opcion==null || ( opcion!=null && opcion.equals("")) ? "crear" : opcion; 
 String mensaje = "";  String destino = ""; //OPCION DE set:  if(opcion.equals("set")) {  packing_detalle entity = control.getpacking_detalle(request.getParameter("codsx")); packing_detalleForm  temp  = new packing_detalleForm();  temp.setopcion("update"); temp.llenar(entity);  request.setAttribute("packing_detalleForm", temp);  destino = "packing_detalle_datos";  }  //opcion de CREAR  if(opcion.equals("crear")) {  String packdpacking = _form.getpackdpacking();   String packdproducto = _form.getpackdproducto();   String packdtotal= _form.getPackdtotal();  // gestionSaldos gsaldo = new gestionSaldos(); destino = "packing_datos";  try {	 setPadre(packdpacking, request );	 mensaje = gsaldo.respaldarPackingTotalNAC( packdpacking, packdproducto, packdtotal);	 setPadre(packdpacking, request );  } catch (SQLException e) {   e.printStackTrace();  mensaje = "No se pudo Crear el packing_detalle: <br> " + e.getLocalizedMessage();   }  }  // Opcion de update  if(opcion.equals("update")) {   try {	  setPadre(_form.getpackdpacking(), request );  control.updatepacking_detalle(_form);   mensaje = "packing_detalle Actualizado con Exito";   setPadre(_form.getpackdpacking(), request ); destino = "packing_datos";      } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Actualizar el packing_detalle: <br> " + e.getLocalizedMessage();  }  }  // Opcion de eliminar  if(opcion.equals("delete")) {  destino = "packing_datos"; String codsx = request.getParameter("codsx");  try {	 packing_detalle pd = gpackd.getpacking_detalle(codsx); 	 setPadre(pd.getpackdpacking(), request );	  control.eliminar(codsx);   mensaje = "packing_detalle Eliminado con Exito";   setPadre(pd.getpackdpacking(), request );  } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Eliminar el packing_detalle: <br> " + e.getLocalizedMessage();  }  }  ActionMessages e = getErrors(request);  e.add("general", new ActionMessage(mensaje, false)); addErrors(request, e);  return mapping.findForward(destino);    }   private void setPadre(String codsx, HttpServletRequest request) {	 	 packingForm pform = new packingForm();	 gstpacking gpack = new gstpacking();	 packing pack = gpack.getpacking( codsx);	 pform.llenar( pack);	 pform.setopcion("update");	 request.setAttribute("packingForm", pform);	  } }