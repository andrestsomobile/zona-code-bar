package auditoria.control;import administracion.entity.usuario;import auditoria.form.*;import auditoria.entity.*;import db.*;import java.util.Collection;import java.util.HashMap;import java.sql.SQLException; import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpSession; /*************************************************************CLASE GENERADA CON generator V3.0 By pablito*******/public class gstauditoria_conexiones extends GstTabla { public gstauditoria_conexiones() {  db= new beanConnector();  this.classEntidad =auditoria_conexiones.class; 
}public gstauditoria_conexiones(beanConnector db) {  this.db= db;  this.classEntidad =auditoria_conexiones.class; 
}public Collection getlistaauditoria_conexiones() {String consulta = " SELECT * FROM auditoria_conexiones";    return getLista(consulta);  }public Collection getlistaauditoria_conexiones(String start, String param ) { start= start==null ? "0" :  start;   param= param==null ? "" :  param; String consulta = " SELECT * FROM auditoria_conexiones where " +  getTextoBusquedaResumen(param)  +   " order by audicodsx asc "  +  "  limit " + this.maxfilas  + " offset  " + (Integer.parseInt(start) * this.maxfilas);     return getLista(consulta);  } public int getTotalPaginaslistaauditoria_conexiones(String param) {  param= param==null ? "" :  param; String consulta = " SELECT count(1) FROM auditoria_conexiones where  " +  getTextoBusquedaResumen(param);        return getPaginas(consulta);  	}  public boolean crearauditoria_conexiones(String audilogin,String audinombre,String audifecha,String audiapp,String audimodulo) throws SQLException { String insert = "INSERT INTO auditoria_conexiones (audilogin,audinombre,audifecha,audiapp,audimodulo) VALUES (" +    (audilogin==null ? "NULL" : "'" + audilogin+"'") + "," +   (audinombre==null ? "NULL" : "'" + audinombre+"'") + "," +   " now() ," +   (audiapp==null ? "NULL" : "'" + audiapp+"'") + "," +   (audimodulo==null ? "NULL" : "'" + audimodulo+"'")   + ")";int resp = db.executeUpdate(insert);return resp ==0 ? false : true;  } public auditoria_conexiones getauditoria_conexiones(String audicodsx) { String cad = "SELECT * FROM auditoria_conexiones WHERE audicodsx='"+audicodsx+ "'" ; return (auditoria_conexiones)getEntidad(cad);  }public boolean updateauditoria_conexiones( auditoria_conexiones entity ) throws SQLException {  String cad = " update auditoria_conexiones set  " + " audilogin = " + ( entity.getaudilogin() == null ? "NULL": "'" + entity.getaudilogin() + "'" ) + "," + " audinombre = " + ( entity.getaudinombre() == null ? "NULL": "'" + entity.getaudinombre() + "'" ) + "," + " audifecha = " + ( entity.getaudifecha() == null ? "NULL": "'" + entity.getaudifecha() + "'" ) + "," + " audiapp = " + ( entity.getaudiapp() == null ? "NULL": "'" + entity.getaudiapp() + "'" ) + "," + " audimodulo = " +( entity.getaudimodulo() == null ? "NULL": "'" + entity.getaudimodulo() + "'" ) + " where audicodsx = " +  entity.getaudicodsx() ;   int resp= db.executeUpdate(cad);      return resp ==0 ? false : true ;      } public boolean updateauditoria_conexiones( auditoria_conexionesForm entity ) throws SQLException {  String cad = " update auditoria_conexiones set  " + " audilogin = " + ( entity.getaudilogin() == null ? "NULL": "'" + entity.getaudilogin() + "'" ) + "," + " audinombre = " + ( entity.getaudinombre() == null ? "NULL": "'" + entity.getaudinombre() + "'" ) + "," + " audifecha = " + ( entity.getaudifecha() == null ? "NULL": "'" + entity.getaudifecha() + "'" ) + "," + " audiapp = " + ( entity.getaudiapp() == null ? "NULL": "'" + entity.getaudiapp() + "'" ) + "," + " audimodulo = " +( entity.getaudimodulo() == null ? "NULL": "'" + entity.getaudimodulo() + "'" ) + " where audicodsx = " +  entity.getaudicodsx() ;   int resp= db.executeUpdate(cad);      return resp ==0 ? false : true ;      }  public boolean eliminar(String audicodsx) throws SQLException {   String elim = " delete from auditoria_conexiones where audicodsx = '"+ audicodsx+ "'"; int r = db.executeUpdate(elim) ; return  r==0? false : true ;  }  public auditoria_conexiones getauditoria_conexiones(String audilogin, String audifecha) {	 String cad = "SELECT * FROM auditoria_conexiones WHERE audilogin='"+audilogin+ "' and audifecha='" +audifecha +"'" ;	 return (auditoria_conexiones)getEntidad(cad);  } public static void registrarAcceso(HttpServletRequest request) {	gstauditoria_conexiones yo = new gstauditoria_conexiones();		HttpSession sesion = request.getSession();	try {	usuario usu = (usuario)sesion.getAttribute("usuario");	String app = request.getParameter("app");		app = yo.getApp(app);	String modulo = request.getParameter("modulo");				yo.crearauditoria_conexiones(usu.getusulogin() ,usu.getusunombre(), util.Fecha.getFecha(), app, modulo);	} catch (SQLException e) {		// TODO Auto-generated catch block		e.printStackTrace();	} }   private String getApp(String app) {	 	 HashMap<String, String> apps = new HashMap<String, String>();	 //agrego las apps exsitentes:	 apps.put("administracion", "Administracion");	 apps.put("averias", "Averias");	 apps.put("ayuda", "Ayuda");	 apps.put("facturacion", "Facturacion");	 apps.put("ingreso", "Ingreso de Mercancia");	 apps.put("maestro", "Maestros");	 apps.put("nacionalizacion", "Nacionalizaciones");	 apps.put("pedido", "Salidas de Mercancia");	 apps.put("reportes", "Reportes");	 apps.put("util", "Utilidades");	 	 return apps.get(app)==null ?"" : apps.get(app); }  public static void registrarSalida(HttpServletRequest request){	 	 gstauditoria_conexiones yo = new gstauditoria_conexiones();	 try {		HttpSession sesion = request.getSession();				usuario usu = (usuario)sesion.getAttribute("usuario");						yo.crearauditoria_conexiones(usu.getusulogin() ,usu.getusunombre(), util.Fecha.getFecha(), "SALIDA", "");		} catch (Exception e) {			// TODO Auto-generated catch block			e.printStackTrace();		} }   }