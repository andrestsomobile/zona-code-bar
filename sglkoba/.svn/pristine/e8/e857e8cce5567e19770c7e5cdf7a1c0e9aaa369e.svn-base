package maestro.form;import static util.validador.validarNumero;import java.math.BigDecimal;import ingreso.control.gstentrada;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import maestro.control.*;import maestro.entity.*;import org.apache.struts.action.ActionMessage;/** * CLASE GENERADA CON generator V3.0 By pablito**** * @uml.dependency   supplier="maestro.control.gstproducto" */public class productoForm extends ActionForm {	private String procodsx;	private String procodigocia;	private String prodescripcion;	private String procategoria;	private String promodelo;	private String prosubpartida;	private String proean;	private String procodbarra;	private String progarantia;	private String prokiloreal;	private String provolumen;	private String prokilovolumen;	private String prouniempaque;	private String prokvuniempaque;	private String provoluniempaque;	private String prounimasterpac;	private String prokvmasterpack;	private String propesobmp;	private String opcion;	private String provolmasterpac;	private String procodigobarra;	private String proestado;	private String proobservacion;		private String protipoproducto;		private String prolargo;		private String proalto;		private String proancho;	  	private String procatoster;		private String proump;		public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getprocodsx() {		return procodsx;	}	public String getprocodigocia() {		return procodigocia;	}	public String getprodescripcion() {		return prodescripcion;	}	public String getprocategoria() {		return procategoria;	}	public String getpromodelo() {		return promodelo;	}	public String getprosubpartida() {		return prosubpartida;	}	public String getproean() {		return proean;	}	public String getprocodbarra() {		return procodbarra;	}	public String getprogarantia() {		return progarantia;	}	public String getprokiloreal() {		return prokiloreal;	}	public String getprovolumen() {		return provolumen;	}	public String getprokilovolumen() {		return prokilovolumen;	}	public String getprouniempaque() {		return prouniempaque;	}	public String getprokvuniempaque() {		return prokvuniempaque;	}	public String getprovoluniempaque() {		return provoluniempaque;	}	public String getprounimasterpac() {		return prounimasterpac;	}	public String getprokvmasterpack() {		return prokvmasterpack;	}	public String getpropesobmp() {		return propesobmp;	}		public String getprotipoproducto() {		return protipoproducto;	}	public void setprocodsx(String new_procodsx) {		this.procodsx = new_procodsx;	}	public void setprocodigocia(String new_procodigocia) {		this.procodigocia = new_procodigocia;	}	public void setprodescripcion(String new_prodescripcion) {		this.prodescripcion = new_prodescripcion;	}	public void setprocategoria(String new_procategoria) {		this.procategoria = new_procategoria;	}	public void setpromodelo(String new_promodelo) {		this.promodelo = new_promodelo;	}	public void setprosubpartida(String new_prosubpartida) {		this.prosubpartida = new_prosubpartida;	}	public void setproean(String new_proean) {		this.proean = new_proean;	}	public void setprocodbarra(String new_procodbarra) {		this.procodbarra = new_procodbarra;	}	public void setprogarantia(String new_progarantia) {		this.progarantia = new_progarantia;	}	public void setprokiloreal(String new_prokiloreal) {		this.prokiloreal = new_prokiloreal;	}	public void setprovolumen(String new_provolumen) {		this.provolumen = new_provolumen;	}	public void setprokilovolumen(String new_prokilovolumen) {		this.prokilovolumen = new_prokilovolumen;	}	public void setprouniempaque(String new_prouniempaque) {		this.prouniempaque = new_prouniempaque;	}	public void setprokvuniempaque(String new_prokvuniempaque) {		this.prokvuniempaque = new_prokvuniempaque;	}	public void setprovoluniempaque(String new_provoluniempaque) {		this.provoluniempaque = new_provoluniempaque;	}	public void setprounimasterpac(String new_prounimasterpac) {		this.prounimasterpac = new_prounimasterpac;	}	public void setprokvmasterpack(String new_prokvmasterpack) {		this.prokvmasterpack = new_prokvmasterpack;	}	public void setpropesobmp(String new_propesobmp) {		this.propesobmp = new_propesobmp;	}		public void setprotipoproducto(String new_protipoproducto) {		this.protipoproducto = new_protipoproducto;	}		public String getProlargo() {		return prolargo;	}	public void setProlargo(String prolargo) {		this.prolargo = prolargo;	}	public String getProalto() {		return proalto;	}	public void setProalto(String proalto) {		this.proalto = proalto;	}	public String getProancho() {		return proancho;	}	public void setProancho(String proancho) {		this.proancho = proancho;	}	public String getProcatoster() {		return procatoster;	}	public void setProcatoster(String procatoster) {		this.procatoster = procatoster;	}	public String getProump() {		return proump;	}	public void setProump(String proump) {		this.proump = proump;	}		public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping,			HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstproducto gproducto = new gstproducto();		opcion = opcion == null || opcion.equals("") ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;		if (opcion.equals("crear")) {			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS			producto pro = gproducto.getproductoByUk(procodigocia,promodelo);			 if(pro!=null) {				 	gstcompania gCompania = new gstcompania();				 	errors.add("general", new ActionMessage("<b>En la compania " + gCompania.getcompania(procodigocia).getcomnombre() + " ya existe el modelo "+promodelo+"</b>", false));				 	return errors;			 }		}		// valido campos requeridos:		if (procodigocia.equals(""))			errors.add("procodigocia", new ActionMessage(					"<b>El Codigo de la compa???ia no puede ser vacia</b>", false));		if (protipoproducto.equals(""))			errors.add("protipoproducto", new ActionMessage(					"<b>El tipo producto no puede ser vacio</b>", false));		if (prodescripcion.equals(""))			errors.add("prodescripcion", new ActionMessage(					"<b>La descripcion  no puede ser vacia</b>", false));		if (procategoria.equals(""))			errors.add("procategoria", new ActionMessage(					"<b>La categoria no puede ser vacia</b>", false));		if (promodelo.equals(""))			errors.add("promodelo", new ActionMessage(					"<b>El Modelo no puede ser vacio</b>", false));		if (prosubpartida.equals(""))			errors.add("prosubpartida", new ActionMessage(					"<b>LA Subpartida no puede ser vacia</b>", false));		if (proean.equals(""))			errors.add("proean", new ActionMessage("<b>El Ean no puede ser vacio</b>",					false));		if (procodbarra.equals(""))			errors.add("procodbarra", new ActionMessage(					"<b>El Codigo de barra no puede ser vacio</b>", false));				if (prokiloreal.equals(""))			errors.add("prokiloreal", new ActionMessage(					"<b>El Kilo real no puede ser vacio</b>", false));		if (provolumen.equals(""))			errors.add("provolumen", new ActionMessage(					"<b>El Volumen no puede ser vacio</b>", false));		if (prouniempaque.equals(""))			errors.add("prouniempaque", new ActionMessage(					"<b>La Unidad de empaque no puede ser vacio</b>", false));		if (prounimasterpac.equals(""))			errors.add("prounimasterpac", new ActionMessage(					"<b>UniMasterpac no puede ser vacio</b>", false));		// aseguro que los valores vacios queden en lo que deben quedar, es		// decir, que fechas que sean vacias '' queden en null, al		// igual que los numeros		prokiloreal = prokiloreal == null || prokiloreal != null && prokiloreal.equals("") ? null : prokiloreal;		provolumen = provolumen == null || provolumen != null && provolumen.equals("") ? null : provolumen;		prokilovolumen = prokilovolumen == null || prokilovolumen != null && prokilovolumen.equals("") ? null : prokilovolumen;		prouniempaque = prouniempaque == null || prouniempaque != null && prouniempaque.equals("") ? null : prouniempaque;		prokvuniempaque = prokvuniempaque == null || prokvuniempaque != null && prokvuniempaque.equals("") ? null : prokvuniempaque;		provoluniempaque = provoluniempaque == null || provoluniempaque != null && provoluniempaque.equals("") ? null : provoluniempaque;		prounimasterpac = prounimasterpac == null || prounimasterpac != null && prounimasterpac.equals("") ? null : prounimasterpac;		prokvmasterpack = prokvmasterpack == null || prokvmasterpack != null && prokvmasterpack.equals("") ? null : prokvmasterpack;		propesobmp = propesobmp == null || propesobmp != null && propesobmp.equals("") ? null : propesobmp;		provolmasterpac= provolmasterpac == null || provolmasterpac!= null && provolmasterpac.equals("") ? null : provolmasterpac;				if (prokiloreal != null && !validarNumero(prokiloreal))errors.add("prokiloreal", new ActionMessage("<b>Este campo debe ser numerico</b>", false) );		if (provolumen != null && !validarNumero(provolumen))errors.add("provolumen", new ActionMessage("<b>Este campo debe ser numerico</b>", false) );		if (prokilovolumen != null && !validarNumero(prokilovolumen))errors.add("prokilovolumen", new ActionMessage("<b>Este campo debe ser numerico</b>", false) );		if (prouniempaque != null && !validarNumero(prouniempaque))errors.add("prouniempaque", new ActionMessage("<b>Este campo debe ser numerico</b>", false) );		if (prokvuniempaque != null && !validarNumero(prokvuniempaque))errors.add("prokvuniempaque", new ActionMessage("<b>Este campo debe ser numerico</b>", false) );		if (provoluniempaque != null && !validarNumero(provoluniempaque))errors.add("provoluniempaque", new ActionMessage("<b>Este campo debe ser numerico</b>", false) );		if (prounimasterpac != null && !validarNumero(prounimasterpac))errors.add("prounimasterpac", new ActionMessage("<b>Este campo debe ser numerico</b>", false) );	//	if (prokvmasterpack != null && !validarNumero(prokvmasterpack))errors.add("prokvmasterpack", new ActionMessage("<b>Este campo debe ser numerico</b>", false) );		if (propesobmp != null && !validarNumero(propesobmp))errors.add("propesobmp", new ActionMessage("<b>Este campo debe ser numerico</b>", false) );		if (provolmasterpac != null && !validarNumero(provolmasterpac))errors.add("provolmasterpac", new ActionMessage("<b>Este campo debe ser numerico</b>", false) );				//si todo esta bien, miro que se vaya a cambiar de estado ACTIVO a INACTIVO, para validar que		//un producto solo se pueda inactivar si tiene saldo en CEROS		if(procodsx!=null && !procodsx.equals("")) {		producto viejo = gproducto.getproducto(procodsx);		gstentrada gent = new gstentrada();		if(viejo!=null && viejo.getProestado().equals("ACTIVO") && proestado.equals("INACTIVO")) {			String sal = gent.getSaldoFisico(procodsx, "TODO");			BigDecimal saldo = new BigDecimal(sal); 						if(saldo.compareTo( BigDecimal.ZERO)>0)				errors.add("proestado", new ActionMessage("<b>Para INACTIVAR un producto, su saldo debe ser CERO, descargue el saldo del producto primero y luego intente inactivarlo</b>", false) );		}		}		if (!errors.isEmpty())			errors.add("general", new ActionMessage(					"<b>No se pudo guardar los datos, revise<b> ", false));		return errors;	}	public void llenar(producto entity) {		this.procodsx = entity.getprocodsx();		this.procodigocia = entity.getprocodigocia();		this.prodescripcion = entity.getprodescripcion();		this.procategoria = entity.getprocategoria();		this.promodelo = entity.getpromodelo();		this.prosubpartida = entity.getprosubpartida();		this.proean = entity.getproean();		this.procodbarra = entity.getprocodbarra();		this.progarantia = entity.getprogarantia();		this.prokiloreal = entity.getprokiloreal();		this.provolumen = entity.getprovolumen();		this.prokilovolumen = entity.getprokilovolumen();		this.prouniempaque = entity.getprouniempaque();		this.prokvuniempaque = entity.getprokvuniempaque();		this.provoluniempaque = entity.getprovoluniempaque();		this.prounimasterpac = entity.getprounimasterpac();		this.prokvmasterpack = entity.getprokvmasterpack();		this.propesobmp = entity.getpropesobmp();		this.provolmasterpac = entity.getProvolmasterpac();		this.procodigobarra = entity.getProcodigobarra();		this.proestado = entity.getProestado();		this.proobservacion = entity.getProobservacion();		this.protipoproducto = entity.getprotipoproducto();		this.prolargo = entity.getProlargo();		this.proalto  = entity.getProalto();		this.proancho = entity.getProancho();		this.procatoster = entity.getProcatoster();		this.proump = entity.getProump();	}	/**	 * @return	 * @uml.property  name="provolmasterpac"	 */	public String getProvolmasterpac() {		return provolmasterpac;	}	/**	 * @param provolmasterpac	 * @uml.property  name="provolmasterpac"	 */	public void setProvolmasterpac(String provolmasterpac) {		this.provolmasterpac = provolmasterpac;	}	/**	 * @return	 * @uml.property  name="procodigobarra"	 */	public String getProcodigobarra() {		return procodigobarra;	}	/**	 * @param procodigobarra	 * @uml.property  name="procodigobarra"	 */	public void setProcodigobarra(String procodigobarra) {		this.procodigobarra = procodigobarra;	}	/**	 * @return	 * @uml.property  name="proestado"	 */	public String getProestado() {		return proestado;	}	/**	 * @param proestado	 * @uml.property  name="proestado"	 */	public void setProestado(String proestado) {		this.proestado = proestado;	}	/**	 * @return	 * @uml.property  name="proobservacion"	 */	public String getProobservacion() {		return proobservacion;	}	/**	 * @param proobservacion	 * @uml.property  name="proobservacion"	 */	public void setProobservacion(String proobservacion) {		this.proobservacion = proobservacion;	}}