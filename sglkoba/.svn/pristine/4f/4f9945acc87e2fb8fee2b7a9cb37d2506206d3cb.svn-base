package maestro.control;import java.sql.SQLException;import java.util.Collection;import maestro.entity.tipoproducto;import maestro.form.tipoproductoForm;import db.GstTabla;import db.beanConnector;/******************************************************************************* * CLASE GENERADA CON generator V3.0 By pablito**** ******************************************************************************/public class gsttipoproducto extends GstTabla {	public gsttipoproducto() {		db = new beanConnector();		this.classEntidad = tipoproducto.class;	}	public gsttipoproducto(beanConnector db) {		this.db = db;		this.classEntidad = tipoproducto.class;	}	public Collection getlistatipoproducto() {		String consulta = " SELECT * FROM tipoproducto order by tiprcodcompania asc";		return getLista(consulta);	}	public Collection getlistatipoproducto(String tiprcodcompania) {		String consulta = " SELECT * FROM tipoproducto where tiprcodcompania=" + tiprcodcompania;		return getLista(consulta);	}	public tipoproducto gettipoproducto_by_ukey(String tiprcodigo, String tiprcodcompania) {		 String cad = "SELECT * FROM tipoproducto WHERE tiprcodigo='"+tiprcodigo+ "'  and tiprcodcompania=" + tiprcodcompania ;		 return (tipoproducto)getEntidad(cad);  }	public Collection getlistatipoproducto(String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " SELECT * FROM tipoproducto where " +			getTextoBusquedaResumen( param) +" order by tiprcodsx desc " +				"limit " +				 this.maxfilas + " offset  "				+ (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public Collection getlistatipoproducto(String compania, String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "NULL" : param;		String consulta = " SELECT tipoproducto.* FROM tipoproducto, compania where comcodsx = tiprcodcompania and comcodsx=" + compania + "  and "+			getTextoBusquedaResumen( "tipoproducto",param) +				" order by tiprcodsx desc " +				" limit " + this.maxfilas + " offset  "				+ (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistatipoproducto(String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM tipoproducto where  " +			getTextoBusquedaResumen( param);		return getPaginas(consulta);	}		public int getTotalPaginaslistatipoproducto(String compania, String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM tipoproducto, compania where comcodsx = tiprcodcompania and   " +			getTextoBusquedaResumen( "tipoproducto",param);		return getPaginas(consulta);	}	public boolean creartipoproducto(String tiprdescripcion,			String tiprcodcompania, String tiprcodigo) throws SQLException {		String insert = "INSERT INTO tipoproducto (tiprdescripcion,tiprcodcompania,tiprcodigo) VALUES ("				+ (tiprdescripcion == null ? "NULL" : "'" + tiprdescripcion + "'")				+ ","				+ (tiprcodcompania == null ? "NULL" : "'" + tiprcodcompania + "'")				+ ","				+ (tiprcodigo == null ? "NULL" : "'" + tiprcodigo + "'")				+ ")";		int resp = db.executeUpdate(insert);		return resp == 0 ? false : true;	}	public tipoproducto gettipoproducto(String tiprcodsx) {		String cad = "SELECT * FROM tipoproducto WHERE tiprcodsx='" + tiprcodsx				+ "'";		return (tipoproducto) getEntidad(cad);	}	public boolean updatetipoproducto(tipoproducto entity) throws SQLException {		String cad = " update tipoproducto set  "				+ " tiprdescripcion = "				+ (entity.gettiprdescripcion() == null ? "NULL" : "'"						+ entity.gettiprdescripcion() + "'")				+ ","				+ " tiprcodcompania = "				+ (entity.gettiprcodcompania() == null ? "NULL" : "'"						+ entity.gettiprcodcompania() + "'")				+ ","				+ " tiprcodigo = "				+ (entity.gettiprcodigo() == null ? "NULL" : "'"						+ entity.gettiprcodigo() + "'") + " where tiprcodsx = "				+ entity.gettiprcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean updatetipoproducto(tipoproductoForm entity) throws SQLException {		String cad = " update tipoproducto set  "				+ " tiprdescripcion = "				+ (entity.gettiprdescripcion() == null ? "NULL" : "'"						+ entity.gettiprdescripcion() + "'")				+ ","				+ " tiprcodcompania = "				+ (entity.gettiprcodcompania() == null ? "NULL" : "'"						+ entity.gettiprcodcompania() + "'")				+ ","				+ " tiprcodigo = "				+ (entity.gettiprcodigo() == null ? "NULL" : "'"						+ entity.gettiprcodigo() + "'") + " where tiprcodsx = "				+ entity.gettiprcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean eliminar(String tiprcodsx) throws SQLException {		String elim = " delete from tipoproducto where tiprcodsx = '" + tiprcodsx				+ "'";		int r = db.executeUpdate(elim);		return r == 0 ? false : true;	}}