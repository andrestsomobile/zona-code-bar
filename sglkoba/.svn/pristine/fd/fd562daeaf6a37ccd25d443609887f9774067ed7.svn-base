package ingreso.form;import ingreso.control.gstreferencia_trafico;import ingreso.entity.referencia_trafico;import java.math.BigDecimal;import javax.servlet.http.HttpServletRequest;import maestro.control.gstproducto;import maestro.entity.producto;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import org.apache.struts.action.ActionMessage;/** * CLASE GENERADA CON generator V3.0 By pablito****** */public class referencia_traficoForm extends ActionForm {	private String reftcodsx;	private String reftnumfacturatrafico;	private String reftproducto;	private String reftcantidad;	private String reftpesoneto;	private String reftpesobruto;	private String reftfobunit;	private String reftfobtotal;	private String reftcifunit;	private String reftciftotal;	private String reftserial;		private  String reftserialdespacho;	/**	 * @uml.property name="reftpesonetototal"	 */	private String reftpesonetototal;	/**	 * @uml.property name="reftpesobrutototal"	 */	private String reftpesobrutototal;	private String opcion;	/**	 * @uml.property name="reftmpacks"	 */	private String reftmpacks;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getreftcodsx() {		return reftcodsx;	}	public String getreftnumfacturatrafico() {		return reftnumfacturatrafico;	}	public String getreftproducto() {		return reftproducto;	}	public String getreftcantidad() {		return reftcantidad;	}	public String getreftpesoneto() {		return reftpesoneto;	}	public String getreftpesobruto() {		return reftpesobruto;	}	public String getreftfobunit() {		return reftfobunit;	}	public String getreftfobtotal() {		return reftfobtotal;	}	public String getreftcifunit() {		return reftcifunit;	}	public String getreftciftotal() {		return reftciftotal;	}	public void setreftcodsx(String new_reftcodsx) {		this.reftcodsx = new_reftcodsx;	}	public void setreftnumfacturatrafico(String new_reftnumfacturatrafico) {		this.reftnumfacturatrafico = new_reftnumfacturatrafico;	}	public void setreftproducto(String new_reftproducto) {		this.reftproducto = new_reftproducto;	}	public void setreftcantidad(String new_reftcantidad) {		this.reftcantidad = new_reftcantidad;	}	public void setreftpesoneto(String new_reftpesoneto) {		this.reftpesoneto = new_reftpesoneto;	}	public void setreftpesobruto(String new_reftpesobruto) {		this.reftpesobruto = new_reftpesobruto;	}	public void setreftfobunit(String new_reftfobunit) {		this.reftfobunit = new_reftfobunit;	}	public void setreftfobtotal(String new_reftfobtotal) {		this.reftfobtotal = new_reftfobtotal;	}	public void setreftcifunit(String new_reftcifunit) {		this.reftcifunit = new_reftcifunit;	}	public void setreftciftotal(String new_reftciftotal) {		this.reftciftotal = new_reftciftotal;	}	/**	 * @return	 * @uml.property name="reftpesobrutototal"	 */	public String getReftpesobrutototal() {		return reftpesobrutototal;	}	/**	 * @param reftpesobrutototal	 * @uml.property name="reftpesobrutototal"	 */	public void setReftpesobrutototal(String reftpesobrutototal) {		this.reftpesobrutototal = reftpesobrutototal;	}	/**	 * @return	 * @uml.property name="reftpesonetototal"	 */	public String getReftpesonetototal() {		return reftpesonetototal;	}	/**	 * @param reftpesonetototal	 * @uml.property name="reftpesonetototal"	 */	public void setReftpesonetototal(String reftpesonetototal) {		this.reftpesonetototal = reftpesonetototal;	}	/**	 * @return	 * @uml.property name="reftmpacks"	 */	public String getReftmpacks() {		return reftmpacks;	}	/**	 * @param reftmpacks	 * @uml.property name="reftmpacks"	 */	public void setReftmpacks(String reftmpacks) {		this.reftmpacks = reftmpacks;	}	public String getReftserial() {		return reftserial;	}	public void setReftserial(String reftserial) {		this.reftserial = reftserial;	}		public String getReftserialdespacho() {		return reftserialdespacho;	}	public void setReftserialdespacho(String reftserialdespacho) {		this.reftserialdespacho = reftserialdespacho;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstreferencia_trafico greferencia_trafico = new gstreferencia_trafico();		opcion = opcion == null ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete") || opcion.equals("plano"))			return null;		// en el recargar solo valido que si haya seleccionado un producto:		producto prod = new gstproducto().getproducto(this.getreftproducto());		if (prod == null) {			errors.add("reftproducto", new ActionMessage("Debe seleccionar un producto", false));			errors.add("general", new ActionMessage("Debe seleccionar un producto", false));			return errors;		}		;		if (opcion.equals("crear")) {			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS
		}		// valido campos requeridos:		if (reftproducto.equals(""))			errors.add("reftproducto", new ActionMessage("El reftproducto no puede ser vacio", false));		if (!util.validador.validarNumero(reftcantidad))			errors.add("reftcantidad", new ActionMessage("El reftcantidad no puede ser vacio y debe ser numerico mayor a cero", false));		if (!util.validador.validarNumero(reftpesoneto))			errors.add("reftpesoneto", new ActionMessage("El reftpesoneto no puede ser vacio y debe ser numerico mayor a cero", false));		if (!util.validador.validarNumero(reftpesobruto))			errors.add("reftpesobruto", new ActionMessage("El reftpesobruto no puede ser vacio y debe ser numerico mayor a cero", false));		if (!util.validador.validarNumero(reftfobunit))			errors.add("reftfobunit", new ActionMessage("El reftfobunit no puede ser vacio y debe ser numerico mayor a cero", false));		// if(reftcifunit.equals("")) errors.add("reftcifunit", new ActionMessage("El reftcifunit no puede ser vacio", false) );		if (util.validador.validarNumero(reftpesobruto) && util.validador.validarNumero(reftpesoneto)) {			BigDecimal neto = new BigDecimal(reftpesoneto);			BigDecimal bruto = new BigDecimal(reftpesobruto);			if (neto.compareTo(bruto) > 0)				errors.add("reftpesobruto", new ActionMessage("El peso bruto debe ser mayor o igual al peso neto", false));		}		if (!errors.isEmpty())			errors.add("general", new ActionMessage("<b>No se pudo guardar los datos, revise<b> ", false));		request.setAttribute("trafcodsx", request.getParameter("trafcodsx"));		request.setAttribute("ftrafcodsx", getreftnumfacturatrafico());		return errors;	}	public void llenar(referencia_trafico entity) {		this.reftcodsx = entity.getreftcodsx();		this.reftnumfacturatrafico = entity.getreftnumfacturatrafico();		this.reftproducto = entity.getreftproducto();		this.reftcantidad = entity.getreftcantidad();		this.reftpesoneto = entity.getreftpesoneto();		this.reftpesobruto = entity.getreftpesobruto();		this.reftfobunit = entity.getreftfobunit();		this.reftfobtotal = entity.getreftfobtotal();		this.reftcifunit = entity.getreftcifunit();		this.reftciftotal = entity.getreftciftotal();		this.reftpesonetototal = entity.getReftpesonetototal();		this.reftpesobrutototal = entity.getReftpesobrutototal();		this.reftmpacks = entity.getReftmpacks();		this.reftserial = entity.getreftserial();		this.reftserialdespacho = entity.getreftserialdespacho();	}}