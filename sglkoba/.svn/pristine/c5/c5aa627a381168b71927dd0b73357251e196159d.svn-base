package maestro.form;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import maestro.control.*;import maestro.entity.*;import org.apache.struts.action.ActionMessage;/******************************************************************************* * CLASE GENERADA CON generator V3.0 By pablito**** ******************************************************************************/public class zonaForm extends ActionForm {	private String zoncodsx;	private String zonnombre;	private String opcion;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getzoncodsx() {		return zoncodsx;	}	public String getzonnombre() {		return zonnombre;	}	public void setzoncodsx(String new_zoncodsx) {		this.zoncodsx = new_zoncodsx;	}	public void setzonnombre(String new_zonnombre) {		this.zonnombre = new_zonnombre;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping,			HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstzona gzona = new gstzona();		opcion = opcion == null || opcion.equals("") ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;		if (opcion.equals("crear")) {			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS			zona zon = gzona.getzona_by_ukey(zonnombre);			if (zon != null) {				errors.add("general", new ActionMessage("<b>La zona "						+ zonnombre + " ya existe</b>", false));				return errors;			}					}		// valido campos requeridos:		if (zonnombre.equals(""))			errors.add("zonnombre", new ActionMessage(					"<b>El Nombre no puede ser vacio</b>", false));		if(!errors.isEmpty()) errors.add("general", new ActionMessage("<b>No se pudo guardar los datos, revise </b>", false));		return errors;	}	public void llenar(zona entity) {		this.zoncodsx = entity.getzoncodsx();		this.zonnombre = entity.getzonnombre();	}}