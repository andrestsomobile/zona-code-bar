package maestro.form;import javax.servlet.http.HttpServletRequest;import maestro.control.gsttipoproducto;import maestro.entity.tipoproducto;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import org.apache.struts.action.ActionMessage;/** * CLASE GENERADA CON generator V3.0 By pablito**** */public class tipoproductoForm extends ActionForm {	private String tiprcodsx;	private String tiprdescripcion;	private String tiprcodcompania;	private String tiprcodigo;	private String opcion;/** * @uml.property  name="desc" */    private String desc;    	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String gettiprcodsx() {		return tiprcodsx;	}	public String gettiprdescripcion() {		return tiprdescripcion;	}	public String gettiprcodcompania() {		return tiprcodcompania;	}	public String gettiprcodigo() {		return tiprcodigo;	}	public void settiprcodsx(String new_tiprcodsx) {		this.tiprcodsx = new_tiprcodsx;	}	public void settiprdescripcion(String new_tiprdescripcion) {		this.tiprdescripcion = new_tiprdescripcion;	}	public void settiprcodcompania(String new_tiprcodcompania) {		this.tiprcodcompania = new_tiprcodcompania;	}	public void settiprcodigo(String new_tiprcodigo) {		this.tiprcodigo = new_tiprcodigo;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping,			HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gsttipoproducto gtipoproducto = new gsttipoproducto();		 opcion = opcion==null || opcion.equals("") ? "crear" : opcion; 		if (opcion.equals("set") || opcion.equals("delete"))			return null;			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS			tipoproducto tipr = gtipoproducto.gettipoproducto_by_ukey(tiprcodigo, tiprcodcompania);			 if(tipr!=null) {				 	errors.add("tiprcodigo", new ActionMessage("<b>El tipo de producto " + tiprcodigo + " ya existe</b>", false));			 }		// valido campos requeridos:		if (tiprdescripcion.equals(""))			errors.add("tiprdescripcion", new ActionMessage(					"<b>La descripcion no puede ser vacia</b>", false));		if (tiprcodcompania.equals(""))			errors.add("tiprcodcompania", new ActionMessage(					"<b>El codigo de la compañia no puede ser vacio</b>", false));		if (tiprcodigo.equals(""))			errors.add("tiprcodigo", new ActionMessage(					"<b>El Codigo no puede ser vacio</b>", false));		if(!errors.isEmpty()) errors.add("general", new ActionMessage("<b>No se pudo guardar los datos, revise </b>", false));		return errors;	}	public void llenar(tipoproducto entity) {		this.tiprcodsx = entity.gettiprcodsx();		this.tiprdescripcion = entity.gettiprdescripcion();		this.tiprcodcompania = entity.gettiprcodcompania();		this.tiprcodigo = entity.gettiprcodigo();	}	/**	 * @return	 * @uml.property  name="desc"	 */	public String getDesc() {		return desc;	}	/**	 * @param desc	 * @uml.property  name="desc"	 */	public void setDesc(String desc) {		this.desc = desc;	}}