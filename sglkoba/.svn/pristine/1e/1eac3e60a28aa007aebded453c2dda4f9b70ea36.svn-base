package maestro.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import maestro.control.*;import maestro.entity.*;import maestro.form.*;import org.apache.struts.action.*;public final class ciudadAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form,			HttpServletRequest request, HttpServletResponse response)			throws IOException, ServletException {		ciudadForm _form = (ciudadForm) form;		gstciudad control = new gstciudad();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear"				: opcion;		// OPCION DE set:		if (opcion.equals("set")) {			ciudad entity = control.getciudad(request.getParameter("codsx"));			ciudadForm temp = new ciudadForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("ciudadForm", temp);			return mapping.findForward("ciudad_datos");		}		String mensaje = "";		// opcion de CREAR		if (opcion.equals("crear")) {			String ciucodigo = _form.getciucodigo();			String ciunombre = _form.getciunombre();			String ciudepto = _form.getciudepto();			String ciusaferbo = _form.getciusaferbo();			try {				control.crearciudad(ciucodigo,ciunombre, ciudepto,ciusaferbo);				mensaje = "ciudad Creado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Crear el ciudad: <br> "						+ e.getLocalizedMessage();			}		}		// Opcion de update		if (opcion.equals("update")) {			try {				control.updateciudad(_form);				mensaje = "ciudad Actualizado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el ciudad: <br> "						+ e.getLocalizedMessage();			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			String codsx = request.getParameter("codsx");			try {				control.eliminar(codsx);				mensaje = "ciudad Eliminado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el ciudad: <br> "						+ e.getLocalizedMessage();			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward("ciudad");	}}