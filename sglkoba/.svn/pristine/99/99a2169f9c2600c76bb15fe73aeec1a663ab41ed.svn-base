package maestro.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException; import org.apache.struts.action.ActionMessage;  import org.apache.struts.action.ActionMessages; import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import maestro.control.*;import maestro.entity.*;import maestro.form.*;import org.apache.struts.action.*;  public final class producto_clienteAction  extends Action{
			 public ActionForward execute(ActionMapping mapping,	ActionForm form, 			HttpServletRequest request,	HttpServletResponse response)			throws IOException, ServletException {
producto_clienteForm _form = (producto_clienteForm)form;  gstproducto_cliente control = new gstproducto_cliente(); String opcion = request.getParameter("opcion");  opcion = opcion==null || ( opcion!=null && opcion.equals("")) ? "crear" : opcion; 
 String mensaje = "";  String destino = ""; //OPCION DE set:  if(opcion.equals("set")) {  producto_cliente entity = control.getproducto_cliente(request.getParameter("codsx")); producto_clienteForm  temp  = new producto_clienteForm();  temp.setopcion("update"); temp.llenar(entity);  request.setAttribute("producto_clienteForm", temp);  destino = "producto_cliente_datos";  }  //opcion de CREAR  if(opcion.equals("crear")) {  String proccliente = _form.getproccliente();   String procproducto = _form.getprocproducto();   String procean = _form.getprocean();   String proctag = _form.getproctag();   String procodbarra = _form.getprocodbarra();   String procnumcodigobarra = _form.getprocnumcodigobarra();   String procgarantia = _form.getprocgarantia();   destino = "producto_cliente"; 
  try {  control.crearproducto_cliente(proccliente,procproducto,procean,proctag,procodbarra,procnumcodigobarra,procgarantia);  mensaje = "producto_cliente Creado con Exito";  producto_cliente entity = control.getproducto_cliente(proccliente,procproducto);producto_clienteForm  temp  = new producto_clienteForm();temp.setopcion("update"); temp.llenar(entity);request.setAttribute("producto_clienteForm", temp);  } catch (SQLException e) {   e.printStackTrace();  mensaje = "No se pudo Crear el producto_cliente: <br> " + e.getLocalizedMessage();   }  }  // Opcion de update  if(opcion.equals("update")) {   try {  destino = "producto_cliente";   control.updateproducto_cliente(_form);   mensaje = "producto_cliente Actualizado con Exito";    } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Actualizar el producto_cliente: <br> " + e.getLocalizedMessage();  }  }  // Opcion de eliminar  if(opcion.equals("delete")) {  destino = "producto_cliente"; String codsx = request.getParameter("codsx");  try {   control.eliminar(codsx);   mensaje = "producto_cliente Eliminado con Exito";    } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Eliminar el producto_cliente: <br> " + e.getLocalizedMessage();  }  }  ActionMessages e = getErrors(request);  e.add("general", new ActionMessage(mensaje, false)); addErrors(request, e);  return mapping.findForward(destino);    } }