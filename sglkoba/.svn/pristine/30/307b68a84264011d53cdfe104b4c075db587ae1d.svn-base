package pedido.control;import pedido.form.*;import pedido.entity.*;import db.*;import java.util.Collection;import java.sql.SQLException;/******************************************************** *****CLASE GENERADA CON generator V3.0 By pablito *******/public class gstreferencia_despacho extends GstTabla {	public gstreferencia_despacho() {		db = new beanConnector();		this.classEntidad = referencia_despacho.class;	}	public gstreferencia_despacho(beanConnector db) {		this.db = db;		this.classEntidad = referencia_despacho.class;	}	public Collection getlistareferencia_despacho() {		String consulta = " SELECT * FROM referencia_despacho";		return getLista(consulta);	}	public Collection getlistareferencia_despacho(String refddespacho_pedido) {		String consulta = " SELECT * FROM referencia_despacho where refddespacho_pedido=" + refddespacho_pedido;		return getLista(consulta);	}	public Collection getlistareferencia_despacho(String refddespacho_pedido, String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " SELECT * FROM referencia_despacho where " + " refddespacho_pedido =" + refddespacho_pedido + " and (" + "   refdproducto like '%" + param + "%' )" + "  limit " + this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistareferencia_despacho(String refddespacho_pedido, String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM referencia_despacho where  " + " refddespacho_pedido=" + refddespacho_pedido + " and ( refdproducto like '%" + param + "%'  )" + "  ";		return getPaginas(consulta);	}	public boolean crearreferencia_despacho(String refddespacho_pedido, String refdproducto, String refdcant, String refdvalor, String refdpesoneto, String refdpesobruto, String refdserial) throws SQLException {		String insert = "INSERT INTO referencia_despacho (refddespacho_pedido,refdproducto, " + " refdcant, refdvalor, refdpesoneto, refdpesobruto, refdserial) VALUES (" + (refddespacho_pedido == null ? "NULL" : "'" + refddespacho_pedido + "'") + ","				+ (refdproducto == null ? "NULL" : "'" + refdproducto + "'") + "," + (refdcant == null ? "NULL" : "'" + refdcant + "'") + "," + (refdvalor == null ? "NULL" : "'" + refdvalor + "'") + "," + (refdpesoneto == null ? "NULL" : "'" + refdpesoneto + "'") + ","				+ (refdpesobruto == null ? "NULL" : "'" + refdpesobruto + "'") + "," + (refdserial == null ? "NULL" : "'" + refdserial + "'") + ")";		int resp = db.executeUpdate(insert);		return resp == 0 ? false : true;	}	public referencia_despacho getreferencia_despacho(String refdcodsx) {		String cad = "SELECT * FROM referencia_despacho WHERE refdcodsx='" + refdcodsx + "'";		return (referencia_despacho) getEntidad(cad);	}	public boolean updatereferencia_despacho(referencia_despacho entity) throws SQLException {		String cad = " update referencia_despacho set  " + " refddespacho_pedido = " + (entity.getrefddespacho_pedido() == null ? "NULL" : "'" + entity.getrefddespacho_pedido() + "'") + "," + " refdproducto = " + (entity.getrefdproducto() == null ? "NULL" : "'" + entity.getrefdproducto() + "'")				+ "," + " refdcant = " + (entity.getRefdcant() == null ? "NULL" : "'" + entity.getRefdcant() + "'") + "," + " refdvalor = " + (entity.getRefdvalor() == null ? "NULL" : "'" + entity.getRefdvalor() + "'") + "," + " refdpesoneto = "				+ (entity.getRefdpesoneto() == null ? "NULL" : "'" + entity.getRefdpesoneto() + "'") + "," + " refdpesobruto = " + (entity.getRefdpesobruto() == null ? "NULL" : "'" + entity.getRefdpesobruto() + "'") + " where refdcodsx = " + entity.getrefdcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean updatereferencia_despacho(referencia_despachoForm entity) throws SQLException {		String cad = " update referencia_despacho set  " 				+ " refddespacho_pedido = " + (entity.getrefddespacho_pedido() == null ? "NULL" : "'" + entity.getrefddespacho_pedido() + "'") + "," 				+ " refdproducto = " + (entity.getrefdproducto() == null ? "NULL" : "'" + entity.getrefdproducto() + "'") + "," 				+ " refdcant = " + (entity.getRefdcant() == null ? "NULL" : "'" + entity.getRefdcant() + "'") + "," 				+ " refdvalor = " + (entity.getRefdvalor() == null ? "NULL" : "'" + entity.getRefdvalor() + "'") + "," 				+ " refdpesoneto = " + (entity.getRefdpesoneto() == null ? "NULL" : "'" + entity.getRefdpesoneto() + "'") + "," 				+ " refdpesobruto = " + (entity.getRefdpesobruto() == null ? "NULL" : "'" + entity.getRefdpesobruto() + "'") + "," 				+ " refdserial = " + (entity.getRefdserial() == null ? "NULL" : "'" + entity.getRefdserial() + "'")				+ " where refdcodsx = " + entity.getrefdcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean eliminar(String refdcodsx) throws SQLException {		String elim = " delete from referencia_despacho where refdcodsx = '" + refdcodsx + "'";		int r = db.executeUpdate(elim);		return r == 0 ? false : true;	}	public referencia_despacho getreferencia_despacho(String refddespacho_pedido, String refdproducto) {		String cad = "SELECT * FROM referencia_despacho WHERE refddespacho_pedido=" + refddespacho_pedido + " and  refdproducto= " + refdproducto;		return (referencia_despacho) getEntidad(cad);	}		public Collection getListaConsolidadoSeriales(String refdcodsx) {		String consulta = "select * from consolidado_despacho_serial(" + refdcodsx + ")";		return getListaDeListas(consulta);	}}