package maestro.form;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import maestro.control.*;import maestro.entity.*;import org.apache.struts.action.ActionMessage;/******************************************************************************* * CLASE GENERADA CON generator V3.0 By pablito**** ******************************************************************************/public class transportadoraForm extends ActionForm {	private String transpcodsx;	private String transpnombre;	private String transpdireccion;	private String transptel;	private String transpmail;	private String transpcontacto;	private String opcion;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String gettranspcodsx() {		return transpcodsx;	}	public String gettranspnombre() {		return transpnombre;	}	public String gettranspdireccion() {		return transpdireccion;	}	public String gettransptel() {		return transptel;	}	public String gettranspmail() {		return transpmail;	}	public String gettranspcontacto() {		return transpcontacto;	}	public void settranspcodsx(String new_transpcodsx) {		this.transpcodsx = new_transpcodsx;	}	public void settranspnombre(String new_transpnombre) {		this.transpnombre = new_transpnombre;	}	public void settranspdireccion(String new_transpdireccion) {		this.transpdireccion = new_transpdireccion;	}	public void settransptel(String new_transptel) {		this.transptel = new_transptel;	}	public void settranspmail(String new_transpmail) {		this.transpmail = new_transpmail;	}	public void settranspcontacto(String new_transpcontacto) {		this.transpcontacto = new_transpcontacto;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping,			HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gsttransportadora gtransportadora = new gsttransportadora();		opcion = opcion == null || opcion.equals("") ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;		if (opcion.equals("crear")) {			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS			transportadora trans = gtransportadora.gettransportadora_by_ukey(transpnombre);			if (trans != null) {				errors.add("general", new ActionMessage("<b>La transportadora "						+ transpnombre + " ya existe</b>", false));				return errors;			}		}			// valido campos requeridos:		if (transpnombre.equals(""))			errors.add("transpnombre", new ActionMessage(					"<b>El Nombre no puede ser vacio</b>", false));		if (transpdireccion.equals(""))			errors.add("transpdireccion", new ActionMessage(					"<b>La Direccion no puede ser vacia</b>", false));		if (transptel.equals(""))			errors.add("transptel", new ActionMessage(					"<b>El Telefono no puede ser vacio</b>", false));		if (transpcontacto.equals(""))			errors.add("transpcontacto", new ActionMessage(					"<b>El Contacto no puede ser vacio</b>", false));		if(!errors.isEmpty()) errors.add("general", new ActionMessage("<b>No se pudo guardar los datos, revise </b>", false));		return errors;	}	public void llenar(transportadora entity) {		this.transpcodsx = entity.gettranspcodsx();		this.transpnombre = entity.gettranspnombre();		this.transpdireccion = entity.gettranspdireccion();		this.transptel = entity.gettransptel();		this.transpmail = entity.gettranspmail();		this.transpcontacto = entity.gettranspcontacto();	}}