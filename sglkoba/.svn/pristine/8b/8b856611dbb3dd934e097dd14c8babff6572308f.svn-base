package ingreso.control;import ingreso.form.*;import ingreso.entity.*;import db.*;import java.util.Collection;import java.util.Iterator;import java.math.BigDecimal;import java.sql.SQLException;import util.Math;/******************************************************** ***** CLASE GENERADA CON generator V3.0 By pablito *******/public class gsttrafico extends GstTabla {	public gsttrafico() {		db = new beanConnector();		this.classEntidad = trafico.class;	}	public gsttrafico(beanConnector db) {		this.db = db;		this.classEntidad = trafico.class;	}	public Collection getlistatrafico() {		String consulta = " SELECT * FROM trafico";		return getLista(consulta);	}	public Collection getlistatrafico(String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " SELECT * FROM trafico where " + getTextoBusquedaResumen(param) + " order by trafcodsx desc " + "  limit " + this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistatrafico(String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM trafico where  " + getTextoBusquedaResumen(param);		return getPaginas(consulta);	}	public Collection getlistatrafico(String trafcompania, String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " SELECT * FROM trafico where trafcompania = " + trafcompania + " AND " + getTextoBusquedaResumen(param) + " order by trafcodsx desc " + "  limit " + this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistatrafico(String trafcompania, String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM trafico where trafcompania = " + trafcompania + " AND " + getTextoBusquedaResumen(param);		return getPaginas(consulta);	}	public boolean creartrafico(String trafcompania, String traffechacreacion, String trafdocumento, String trafembarque, String traftransportadora, String trafprocedencia, String traffechaarribopuerto, String traffechapresentdta, String traffechaaprobaciondta, String traffob, String trafcif,			String trafconsec, String trafnumerofmm, String traftrm, String trafnumdta, String trafnumsobordo, String traffechadescargue, String traffechalevante, String traffechaingresozf, String trafentregadocusia, String trafobservaciones, String trafpesobruto, String trafusuario,			String traffechasobordo, String traforigen, String trafpesoneto, String traffletesseguro, String trafestado, String trafpedido, String trafmotonave) throws SQLException {		String insert = "INSERT INTO trafico (trafcompania,traffechacreacion,trafdocumento,trafembarque,trafprocedencia,traffechaarribopuerto,traffechapresentdta,traffechaaprobaciondta,traffob,trafcif,trafconsec,"				+ "trafnumerofmm,traftrm,trafnumdta,trafnumsobordo,traffechadescargue,traffechalevante,traffechaingresozf," + "trafentregadocusia,trafobservaciones,trafpesobruto,trafusuario,traffechasobordo,traforigen,trafpesoneto,"				+ "traffletesseguro, trafestado, trafpedido, trafmotonave) VALUES ("				+ (trafcompania == null ? "NULL" : "'" + trafcompania + "'")				+ ","				+ (traffechacreacion == null ? "NULL" : "'" + traffechacreacion + "'")				+ ","				+ (trafdocumento == null ? "NULL" : "'" + trafdocumento + "'")				+ ","				+ (trafembarque == null ? "NULL" : "'" + trafembarque + "'")				+ ","				+ (trafprocedencia == null ? "NULL" : "'" + trafprocedencia + "'")				+ ","				+ (traffechaarribopuerto == null ? "NULL" : "'" + traffechaarribopuerto + "'")				+ ","				+ (traffechapresentdta == null ? "NULL" : "'" + traffechapresentdta + "'")				+ ","				+ (traffechaaprobaciondta == null ? "NULL" : "'" + traffechaaprobaciondta + "'")				+ ","				+ (traffob == null ? "NULL" : "'" + traffob + "'")				+ ","				+ (trafcif == null ? "NULL" : "'" + trafcif + "'")				+ ","				+ (trafconsec == null ? "NULL" : "'" + trafconsec + "'")				+ ","				+ (trafnumerofmm == null ? "NULL" : "'" + trafnumerofmm + "'")				+ ","				+ (traftrm == null ? "NULL" : "'" + traftrm + "'")				+ ","				+ (trafnumdta == null ? "NULL" : "'" + trafnumdta + "'")				+ ","				+ (trafnumsobordo == null ? "NULL" : "'" + trafnumsobordo + "'")				+ ","				+ (traffechadescargue == null ? "NULL" : "'" + traffechadescargue + "'")				+ ","				+ (traffechalevante == null ? "NULL" : "'" + traffechalevante + "'")				+ ","				+ (traffechaingresozf == null ? "NULL" : "'" + traffechaingresozf + "'")				+ ","				+ (trafentregadocusia == null ? "NULL" : "'" + trafentregadocusia + "'")				+ ","				+ (trafobservaciones == null ? "NULL" : "'" + trafobservaciones + "'")				+ ","				+ (trafpesobruto == null ? "NULL" : "'" + trafpesobruto + "'")				+ ","				+ (trafusuario == null ? "NULL" : "'" + trafusuario + "'")				+ ","				+ (traffechasobordo == null ? "NULL" : "'" + traffechasobordo + "'")				+ ","				+ (traforigen == null ? "NULL" : "'" + traforigen + "'")				+ ","				+ (trafpesoneto == null ? "NULL" : "'" + trafpesoneto + "'")				+ ","				+ (traffletesseguro == null ? "NULL" : "'" + traffletesseguro + "'")				+ ","				+ (trafestado == null ? "NULL" : "'" + trafestado + "'")				+ ","				+ (trafpedido == null ? "NULL" : "'" + trafpedido + "'")				+ ","				+ (trafmotonave == null ? "NULL" : "'" + trafmotonave + "'")				+ ")";		int resp = db.executeUpdate(insert);		return resp == 0 ? false : true;	}	public trafico gettrafico(String trafcodsx) {		String cad = "SELECT * FROM trafico WHERE trafcodsx='" + trafcodsx + "'";		return (trafico) getEntidad(cad);	}	public boolean updatetrafico(trafico entity) throws SQLException {		String cad = " update trafico set  " + " trafcompania = " + (entity.gettrafcompania() == null ? "NULL" : "'" + entity.gettrafcompania() + "'") + "," + " traffechacreacion = " + (entity.gettraffechacreacion() == null ? "NULL" : "'" + entity.gettraffechacreacion() + "'") + ","				+ " trafdocumento = " + (entity.gettrafdocumento() == null ? "NULL" : "'" + entity.gettrafdocumento() + "'") + "," + " trafembarque = " + (entity.gettrafembarque() == null ? "NULL" : "'" + entity.gettrafembarque() + "'") + "," 				+ " trafprocedencia = " + (entity.gettrafprocedencia() == null ? "NULL" : "'" + entity.gettrafprocedencia() + "'") + "," + " traffechaarribopuerto = "				+ (entity.gettraffechaarribopuerto() == null ? "NULL" : "'" + entity.gettraffechaarribopuerto() + "'") + "," + " traffechapresentdta = " + (entity.gettraffechapresentdta() == null ? "NULL" : "'" + entity.gettraffechapresentdta() + "'") + "," + " traffechaaprobaciondta = "				+ (entity.gettraffechaaprobaciondta() == null ? "NULL" : "'" + entity.gettraffechaaprobaciondta() + "'") + "," + " traffob = " + (entity.gettraffob() == null ? "NULL" : "'" + entity.gettraffob() + "'") + "," + " trafcif = "				+ (entity.gettrafcif() == null ? "NULL" : "'" + entity.gettrafcif() + "'") + "," + " trafconsec = " + (entity.gettrafconsec() == null ? "NULL" : "'" + entity.gettrafconsec() + "'") + "," + " trafnumerofmm = "				+ (entity.gettrafnumerofmm() == null ? "NULL" : "'" + entity.gettrafnumerofmm() + "'") + "," + " traftrm = " + (entity.gettraftrm() == null ? "NULL" : "'" + entity.gettraftrm() + "'") + "," + " trafnumdta = "				+ (entity.gettrafnumdta() == null ? "NULL" : "'" + entity.gettrafnumdta() + "'") + "," + " trafnumsobordo = " + (entity.gettrafnumsobordo() == null ? "NULL" : "'" + entity.gettrafnumsobordo() + "'") + "," + " traffechadescargue = "				+ (entity.gettraffechadescargue() == null ? "NULL" : "'" + entity.gettraffechadescargue() + "'") + "," + " traffechalevante = " + (entity.gettraffechalevante() == null ? "NULL" : "'" + entity.gettraffechalevante() + "'") + "," + " traffechaingresozf = "				+ (entity.gettraffechaingresozf() == null ? "NULL" : "'" + entity.gettraffechaingresozf() + "'") + "," + " trafentregadocusia = " + (entity.gettrafentregadocusia() == null ? "NULL" : "'" + entity.gettrafentregadocusia() + "'") + "," + " trafobservaciones = "				+ (entity.gettrafobservaciones() == null ? "NULL" : "'" + entity.gettrafobservaciones() + "'") + "," + " trafpesobruto = " + (entity.gettrafpesobruto() == null ? "NULL" : "'" + entity.gettrafpesobruto() + "'") + "," + " trafusuario = "				+ (entity.gettrafusuario() == null ? "NULL" : "'" + entity.gettrafusuario() + "'") + "," + " traffechasobordo = " + (entity.gettraffechasobordo() == null ? "NULL" : "'" + entity.gettraffechasobordo() + "'") + "," + " traforigen = "				+ (entity.gettraforigen() == null ? "NULL" : "'" + entity.gettraforigen() + "'") + "," + " trafpesoneto = " + (entity.gettrafpesoneto() == null ? "NULL" : "'" + entity.gettrafpesoneto() + "'") + "," + " traffletesseguro = "				+ (entity.gettraffletesseguro() == null ? "NULL" : "'" + entity.gettraffletesseguro() + "'") + "," + " trafestado = " + (entity.getTrafestado() == null ? "NULL" : "'" + entity.getTrafestado() + "'") + "," + " trafpedido = "				+ (entity.getTrafpedido() == null ? "NULL" : "'" + entity.getTrafpedido() + "'") + "," + " trafmotonave = " + (entity.getTrafmotonave() == null ? "NULL" : "'" + entity.getTrafmotonave() + "'") 				+ " where trafcodsx = " + entity.gettrafcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean updatetraficoCifFob(trafico entity) throws SQLException {		String cad = " update trafico set  " + " traffob = " + (entity.gettraffob() == null ? "NULL" : "'" + entity.gettraffob() + "'") + "," + " trafcif = " + (entity.gettrafcif() == null ? "NULL" : "'" + entity.gettrafcif() + "'") + "," + " traffletesseguro = "				+ (entity.gettraffletesseguro() == null ? "NULL" : "'" + entity.gettraffletesseguro() + "'") + " where trafcodsx = " + entity.gettrafcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean updatetrafico(traficoForm entity) throws SQLException {		String cad = " update trafico set  " + " trafcompania = " + (entity.gettrafcompania() == null ? "NULL" : "'" + entity.gettrafcompania() + "'") + "," + " traffechacreacion = " + (entity.gettraffechacreacion() == null ? "NULL" : "'" + entity.gettraffechacreacion() + "'") + ","				+ " trafdocumento = " + (entity.gettrafdocumento() == null ? "NULL" : "'" + entity.gettrafdocumento() + "'") + "," + " trafembarque = " + (entity.gettrafembarque() == null ? "NULL" : "'" + entity.gettrafembarque() + "'") + "," 				+ " trafprocedencia = " + (entity.gettrafprocedencia() == null ? "NULL" : "'" + entity.gettrafprocedencia() + "'") + "," + " traffechaarribopuerto = "				+ (entity.gettraffechaarribopuerto() == null ? "NULL" : "'" + entity.gettraffechaarribopuerto() + "'") + "," + " traffechapresentdta = " + (entity.gettraffechapresentdta() == null ? "NULL" : "'" + entity.gettraffechapresentdta() + "'") + "," + " traffechaaprobaciondta = "				+ (entity.gettraffechaaprobaciondta() == null ? "NULL" : "'" + entity.gettraffechaaprobaciondta() + "'") + "," + " traffob = " + (entity.gettraffob() == null ? "NULL" : "'" + entity.gettraffob() + "'") + "," + " trafcif = "				+ (entity.gettrafcif() == null ? "NULL" : "'" + entity.gettrafcif() + "'") + "," + " trafconsec = " + (entity.gettrafconsec() == null ? "NULL" : "'" + entity.gettrafconsec() + "'") + "," + " trafnumerofmm = "				+ (entity.gettrafnumerofmm() == null ? "NULL" : "'" + entity.gettrafnumerofmm() + "'") + "," + " traftrm = " + (entity.gettraftrm() == null ? "NULL" : "'" + entity.gettraftrm() + "'") + "," + " trafnumdta = "				+ (entity.gettrafnumdta() == null ? "NULL" : "'" + entity.gettrafnumdta() + "'") + "," + " trafnumsobordo = " + (entity.gettrafnumsobordo() == null ? "NULL" : "'" + entity.gettrafnumsobordo() + "'") + "," + " traffechadescargue = "				+ (entity.gettraffechadescargue() == null ? "NULL" : "'" + entity.gettraffechadescargue() + "'") + "," + " traffechalevante = " + (entity.gettraffechalevante() == null ? "NULL" : "'" + entity.gettraffechalevante() + "'") + "," + " traffechaingresozf = "				+ (entity.gettraffechaingresozf() == null ? "NULL" : "'" + entity.gettraffechaingresozf() + "'") + "," + " trafentregadocusia = " + (entity.gettrafentregadocusia() == null ? "NULL" : "'" + entity.gettrafentregadocusia() + "'") + "," + " trafobservaciones = "				+ (entity.gettrafobservaciones() == null ? "NULL" : "'" + entity.gettrafobservaciones() + "'") + "," + " trafpesobruto = " + (entity.gettrafpesobruto() == null ? "NULL" : "'" + entity.gettrafpesobruto() + "'") + "," + " trafusuario = "				+ (entity.gettrafusuario() == null ? "NULL" : "'" + entity.gettrafusuario() + "'") + "," + " traffechasobordo = " + (entity.gettraffechasobordo() == null ? "NULL" : "'" + entity.gettraffechasobordo() + "'") + "," + " traforigen = "				+ (entity.gettraforigen() == null ? "NULL" : "'" + entity.gettraforigen() + "'") + "," + " trafpesoneto = " + (entity.gettrafpesoneto() == null ? "NULL" : "'" + entity.gettrafpesoneto() + "'") + "," + " traffletesseguro = "				+ (entity.gettraffletesseguro() == null ? "NULL" : "'" + entity.gettraffletesseguro() + "'") + "," + " trafestado = " + (entity.getTrafestado() == null ? "NULL" : "'" + entity.getTrafestado() + "'") + "," + " trafpedido = "				+ (entity.getTrafpedido() == null ? "NULL" : "'" + entity.getTrafpedido() + "'") + "," + " trafmotonave = " + (entity.getTrafmotonave() == null ? "NULL" : "'" + entity.getTrafmotonave() + "'")				+ " where trafcodsx = " + entity.gettrafcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean eliminar(String trafcodsx) throws SQLException {		String elim = " delete from trafico where trafcodsx = '" + trafcodsx + "'";		int r = db.executeUpdate(elim);		return r == 0 ? false : true;	}	public trafico gettrafico(String trafcompania, String trafdocumento) {		String cad = "SELECT * FROM trafico WHERE trafcompania='" + trafcompania + "' and trafdocumento='" + trafdocumento + "'";		return (trafico) getEntidad(cad);	}	public trafico gettraficobyEmbarque(String trafcompania, String trafembarque) {		String cad = "SELECT * FROM trafico WHERE trafcompania='" + trafcompania + "' and trafembarque='" + trafembarque + "'";		return (trafico) getEntidad(cad);	}	public int getTotalReferenciasByTrafico(String trafcodsx) {		String cad = "select  count(distinct producto.procodsx) from producto,referencia_trafico, factura_trafico where " + " procodsx = reftproducto and reftnumfacturatrafico = ftrafcodsx and ftrafnumtrafico=" + trafcodsx;		return getConteo(cad);	}	/**	 * es llamado luego de insertar o actualizar las referencias, o de modificar el valor cif:	 * 	 * @param trafcodsx	 * @return	 */	public boolean actualiar_CIF_referencias(String trafcodsx) {		boolean resp = true;		trafico traf = gettrafico(trafcodsx);		gstreferencia_trafico greft = new gstreferencia_trafico();		Collection lista_referencias = greft.getlistareferencia_traficoByTrafico(trafcodsx);		Iterator ite = lista_referencias.iterator();		// saco el total de referencias para obtener el cif unitario:		String x = greft.getTotalReferencias(trafcodsx);		BigDecimal total_referencias = new BigDecimal(x == null ? "0" : x);		BigDecimal seguros_unit = Math.dividir_bigdecimal(traf.gettraffletesseguro(), total_referencias.toPlainString());		// por cada referencia, le sumo el poquito de los seguros unitarios:		while (ite.hasNext()) {			referencia_trafico reft = (referencia_trafico) ite.next();			BigDecimal reftcifunit = Math.sumar_bigdecimal(reft.getreftfobunit(), seguros_unit.toPlainString());			BigDecimal reftciftotal = Math.multiplicar_bigdecimnal(reftcifunit.toPlainString(), reft.getreftcantidad());			reft.setreftcifunit(reftcifunit.toPlainString());			reft.setreftciftotal(reftciftotal.toPlainString());			try {				greft.updatereferencia_trafico(reft);			} catch (SQLException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}		}		return resp;	}	public Collection getlistatraficoNoIngreso(String trafcompania, String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " SELECT * FROM trafico where trafcompania = " + trafcompania + " AND " + getTextoBusquedaResumen(param) + "" + " and trafcodsx not in (select ingtrafico from ingreso where ingcodcia=" + trafcompania + " and ingtipo='TRAFICO' )" + " order by trafcodsx desc " + "  limit "				+ this.maxfilas + " offset  " + (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistatraficoNoIngreso(String trafcompania, String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM trafico where trafcompania = " + trafcompania + " AND " + getTextoBusquedaResumen(param) + " and trafcodsx not in (select ingtrafico from ingreso where ingcodcia=" + trafcompania + " and ingtipo='TRAFICO' )";		return getPaginas(consulta);	}	public Collection getListaResumenEmbarque(String codcia, String fechainicial, String fechafinal) {		String consulta = "select trafembarque,trafdocumento, " + "sum(entsaldonacf) as saldonac, sum(entsaldosinnacf) as saldosinnac, ( sum(entsaldonacf) + sum(entsaldosinnacf) ) as saldototal " + "FROM  entrada, producto, reporte_saldos_embarque " + "where comcodsx ='" + codcia + "' "				+ "and ingfecha between '" + fechainicial + "' and '" + fechafinal + "' " + "and entcodingreso = ingcodsx " + "and entcodproducto = procodsx " + "group by trafembarque,trafdocumento " + "order by  1,2 asc ";		return getListaDeListas(consulta);	}	public Collection reporte_pend_nal_excel(String codcia) {		String consulta = "select promodelo, trafembarque, trafdocumento, trafpedido, sum(entsaldosinnac ) " + "from trafico, ingreso, entrada, producto  " + "where entsaldosinnac>0  and entcodproducto=procodsx and entcodingreso=ingcodsx and trafcompania='" + codcia + "' and ingtrafico=trafcodsx "				+ "group by trafcodsx, trafembarque, trafdocumento, trafpedido, entcodingreso,promodelo " + "order by promodelo, trafembarque,trafpedido";		return getListaDeListas(consulta);	}}