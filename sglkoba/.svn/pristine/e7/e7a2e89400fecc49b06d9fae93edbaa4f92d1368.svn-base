package maestro.form;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import maestro.control.*;import maestro.entity.*;import org.apache.struts.action.ActionMessage;/******************************************************************************* * CLASE GENERADA CON generator V3.0 By pablito**** ******************************************************************************/public class departamentoForm extends ActionForm {	private String depcodigo;	private String depnombre;	private String depzona;	private String opcion;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getdepcodigo() {		return depcodigo;	}	public String getdepnombre() {		return depnombre;	}	public String getdepzona() {		return depzona;	}	public void setdepcodigo(String new_depcodigo) {		this.depcodigo = new_depcodigo;	}	public void setdepnombre(String new_depnombre) {		this.depnombre = new_depnombre;	}	public void setdepzona(String new_depzona) {		this.depzona = new_depzona;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping,			HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstdepartamento gdepartamento = new gstdepartamento();		opcion = opcion == null || opcion.equals("") ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;		// valido campos requeridos:				if (depcodigo.equals(""))			errors.add("depcodigo", new ActionMessage(					"<b>El Codigo no puede ser vacio</b>", false));		if (depnombre.equals(""))			errors.add("depnombre", new ActionMessage(					"<b>El Nombre del departamento no puede ser vacio</b>", false));		if (depzona.equals(""))			errors.add("depzona", new ActionMessage(					"<b>La zona no puede ser vacio</b>", false));		if(!errors.isEmpty()) errors.add("general", new ActionMessage("<b>No se pudo guardar los datos, revise <b>", false));		if (opcion.equals("crear")) {			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS			departamento depCodigo = gdepartamento.getdepartamento_by_ukeyCodigo(depcodigo);			departamento depNombre = gdepartamento.getdepartamento_by_ukeyNombre(depnombre);			if (depCodigo != null) {				errors.add("depcodigo", new ActionMessage("<b>El Codigo "						+ depcodigo + " ya existe</b></br>", false));			}			if (depNombre != null) {				errors.add("depnombre", new ActionMessage("<b>El Nombre "						+ depnombre + " ya existe</b></br>", false));			}			//if(errors != null)return errors;		}				return errors;	}	public void llenar(departamento entity) {		this.depcodigo = entity.getdepcodigo();		this.depnombre = entity.getdepnombre();		this.depzona = entity.getdepzona();	}}