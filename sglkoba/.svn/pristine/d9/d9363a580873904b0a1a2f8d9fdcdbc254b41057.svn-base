package maestro.form;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import maestro.control.*;import maestro.entity.*;import org.apache.struts.action.ActionMessage;/******************************************************************************* * CLASE GENERADA CON generator V3.0 By pablito**** ******************************************************************************/public class empleadoForm extends ActionForm {	private String empcodsx;	private String empnombre;	private String empcedula;	private String empmail;		private String empcargo;	private String opcion;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getempcodsx() {		return empcodsx;	}	public String getempnombre() {		return empnombre;	}	public String getempcedula() {		return empcedula;	}	public String getempmail() {		return empmail;	}		public String getempcargo() {		return empcargo;	}	public void setempcodsx(String new_empcodsx) {		this.empcodsx = new_empcodsx;	}	public void setempnombre(String new_empnombre) {		this.empnombre = new_empnombre;	}	public void setempcedula(String new_empcedula) {		this.empcedula = new_empcedula;	}	public void setempmail(String new_empmail) {		this.empmail = new_empmail;	}		public void setempcargo(String new_empcargo) {		this.empcargo = new_empcargo;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping,			HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstempleado gempleado = new gstempleado();		opcion = opcion == null || opcion.equals("") ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;		if (opcion.equals("crear")) {			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS			empleado emp = gempleado.getempleado_by_ukey(empcedula);			if (emp != null) {				errors.add("general", new ActionMessage("<b>El empleado "						+ emp.getempnombre() + " ya tiene el numero de cedula "+empcedula+".</b>", false));				return errors;			}		}		// valido campos requeridos:		if (empnombre.equals(""))			errors.add("empnombre", new ActionMessage(					"<b>El Nombre no puede ser vacio</b>", false));		if (empcedula.equals(""))			errors.add("empcedula", new ActionMessage(					"<b>La Cedula no puede ser vacia</b>", false));		if (empmail.equals(""))			errors.add("empmail", new ActionMessage(					"<b>El Email no puede ser vacio</b>", false));		if(!errors.isEmpty()) errors.add("general", new ActionMessage("<b>No se pudo guardar los datos, revise</b> ", false));		return errors;	}	public void llenar(empleado entity) {		this.empcodsx = entity.getempcodsx();		this.empnombre = entity.getempnombre();		this.empcedula = entity.getempcedula();		this.empmail = entity.getempmail();		this.empcargo = entity.getempcargo();	}}