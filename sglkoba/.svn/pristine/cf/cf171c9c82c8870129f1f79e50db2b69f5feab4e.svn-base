package auditoria.control;

import java.sql.SQLException;
import java.util.Collection;

import db.*;
import auditoria.entity.auditoriacargue;

public class gstauditoriacargue extends GstTabla implements java.io.Serializable {
	
	public gstauditoriacargue() {
		db = new beanConnector();
		this.classEntidad = auditoriacargue.class;
	}

	public gstauditoriacargue(beanConnector db) {
		this.db = db;
		this.classEntidad = auditoriacargue.class;
	}

	
	public int crearauditoriacargue(String accodcia, String acactividad, String acfechainicio, String acobservacion, String accodusuario, String acarchivo) throws SQLException {
		String insert = "INSERT INTO auditoriacargue (accodcia, acactividad, acfechainicio, acobservacion, accodusuario,acarchivo) VALUES (" + "'" + accodcia + "','" + acactividad + "','"
				+ acfechainicio + "','" + acobservacion + "','" + accodusuario + "','" + acarchivo + "')" + " RETURNING accodsx";
		return getConteo(insert);
	}
	
	public auditoriacargue getauditoriacargue(String accodcia, String acactividad, String acfechainicio) {
		String cad = "SELECT * FROM auditoriacargue WHERE accodcia ='" + accodcia + "' AND acactividad ='" + acactividad + "' AND acfechainicio ='" + acfechainicio + "' ORDER BY accodsx DESC LIMIT 1";
		return (auditoriacargue) getEntidad(cad);
	}
	
	public auditoriacargue getauditoriacargue(String accodsx) {
		String cad = "SELECT * FROM auditoriacargue WHERE accodsx = " + accodsx + " ORDER BY accodsx DESC LIMIT 1";
		return (auditoriacargue) getEntidad(cad);
	}
	
	public Collection getlistaauditoriacargue(String fechainicio, String fechafinal) {
		String cad = "SELECT accodsx, accodcia, acactividad, acfechainicio, acfechafinal,acobservacion, accodusuario,"
				+"to_char(case when acfechafinal is null then now()-acfechainicio else acfechafinal-acfechainicio end, 'DD, HH24:MI:SS') as tiempo FROM auditoriacargue WHERE acfechainicio BETWEEN '"
				+ fechainicio + "' AND '" + fechafinal + "' ORDER BY acfechainicio DESC";
		return getListaDeListas(cad);
	}
	
	public Collection getlistaauditoriacargueByActividad(String actividad, String fechainicio, String fechafinal) {
		String cad = "SELECT * FROM auditoriacargue WHERE acactividad = '" + actividad + "' AND acfechainicio BETWEEN '"
				+ fechainicio + "' AND '" + fechafinal + "' ORDER BY acfechainicio DESC";
		return getLista(cad);
	}
	
	public boolean updateauditoriacargue(String accodsx, String accodcia, String acactividad, String acfechainicio, String acfechafinal, String acobservacion) throws SQLException {
		boolean r = false;
		String cad = " update auditoriacargue set  " + " accodcia ='" + accodcia + "' ," + " acactividad ='" + acactividad + "' ," + " acfechainicio ='" + acfechainicio + "' ," + " acfechafinal ='"
				+ acfechafinal + "' ," + " acobservacion ='" + acobservacion + "' " + " where accodsx = '" + accodsx + "'";
		int resp = db.executeUpdate(cad);
		if (resp == 0)
			r = false;
		else
			r = true;
		return r;
	}
	
	public boolean eliminarauditoricargue(String accodsx) throws SQLException {
		String elim = " delete from auditoriacargue where accodsx=  '" + accodsx + "'";
		int r = db.executeUpdate(elim);
		if (r == 0)
			return false;
		return true;
	}
	
	public boolean set_archivo_auditoriacargue(String accodsx, String acarchivo) throws SQLException {
		boolean r = false;
		String cad = " update auditoriacargue set  " + " acarchivo ='" + acarchivo + "' where accodsx = " + accodsx;
		int resp = db.executeUpdate(cad);
		if (resp == 0)
			r = false;
		else
			r = true;
		return r;
	}
	
	public Collection getlistainconsistencias(String accodsx) {
		
		String cad = "SELECT arr[i] FROM ( " +
			  " SELECT generate_series(1, array_upper(arr, 1)) AS i, arr " +
			  " FROM (select acinconsistencias as arr from auditoriacargue where accodsx = " + accodsx + ") t ) t";
		 Collection inco = getListaDeListas(cad);
		 String upd = "update auditoriacargue set acinconsistencias = null where accodsx  = " + accodsx;
		 try {
			int resp = db.executeUpdate(upd);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		 return inco;
	}
	
	public Collection getlistainconsistenciasOriginal(String accodsx) {
		String cad = "SELECT arr[i] FROM ( " +
			  " SELECT generate_series(1, array_upper(arr, 1)) AS i, arr " +
			  " FROM (select acinconsistencias as arr from auditoriacargue where accodsx = " + accodsx + ") t ) t";
		return getListaDeListas(cad);
	}
	
}
