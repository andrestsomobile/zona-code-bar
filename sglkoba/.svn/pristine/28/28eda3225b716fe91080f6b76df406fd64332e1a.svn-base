package maestro.form;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import maestro.control.*;import maestro.entity.*;import org.apache.struts.action.ActionMessage;/** * CLASE GENERADA CON generator V3.0 By pablito**** */public class clienteForm extends ActionForm {	private String clicodsx;	private String clinombre;	private String clinit;	private String clidireccion;	private String clitelefono;	private String cliciudad;	private String clicontacto;	private String climail;	private String cliobservacion;	private String clicodcompania;	private String opcion;	private String clidevolucion;	/**	 * @uml.property  name="clicodigo"	 */	private String clicodigo;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getclicodsx() {		return clicodsx;	}	public String getclinombre() {		return clinombre;	}	public String getclinit() {		return clinit;	}	public String getclidireccion() {		return clidireccion;	}	public String getclitelefono() {		return clitelefono;	}	public String getcliciudad() {		return cliciudad;	}	public String getclicontacto() {		return clicontacto;	}	public String getclimail() {		return climail;	}	public String getcliobservacion() {		return cliobservacion;	}	public String getclicodcompania() {		return clicodcompania;	}	public void setclicodsx(String new_clicodsx) {		this.clicodsx = new_clicodsx;	}	public void setclinombre(String new_clinombre) {		this.clinombre = new_clinombre;	}	public void setclinit(String new_clinit) {		this.clinit = new_clinit;	}	public void setclidireccion(String new_clidireccion) {		this.clidireccion = new_clidireccion;	}	public void setclitelefono(String new_clitelefono) {		this.clitelefono = new_clitelefono;	}	public void setcliciudad(String new_cliciudad) {		this.cliciudad = new_cliciudad;	}	public void setclicontacto(String new_clicontacto) {		this.clicontacto = new_clicontacto;	}	public void setclimail(String new_climail) {		this.climail = new_climail;	}	public void setcliobservacion(String new_cliobservacion) {		this.cliobservacion = new_cliobservacion;	}	public void setclicodcompania(String new_clicodcompania) {		this.clicodcompania = new_clicodcompania;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping,			HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstcliente gcliente = new gstcliente();		opcion = opcion == null || opcion.equals("") ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;		if (opcion.equals("crear")) {			cliente cli = gcliente.getcliente_by_ukeyNit(clinit);			cliente cli2 = gcliente.getcliente_by_ukeyNombre(clinombre);			if (cli != null) {				errors.add("general", new ActionMessage("<b>El NIT "						+ clinit + " ya existe</b>", false));				return errors;			}						if (cli2 != null) {				errors.add("general", new ActionMessage("<b>El nombre "						+ clinombre + " ya existe</b>", false));				return errors;			}		}		// valido campos requeridos:		if (clinombre.equals(""))			errors.add("clinombre", new ActionMessage(					"<b>El Nombre no puede ser vacio</b>", false));		if (clinit.equals(""))			errors.add("clinit", new ActionMessage("<b>El Nit no puede ser vacio</b>",					false));		if (clidireccion.equals(""))			errors.add("clidireccion", new ActionMessage(					"<b>La direccion no puede ser vacia</b>", false));		if (clitelefono.equals(""))			errors.add("clitelefono", new ActionMessage(					"<b>El Telefono no puede ser vacio</b>", false));		if (clicontacto.equals(""))			errors.add("clicontacto", new ActionMessage(					"<b>El Contacto no puede ser vacio</b>", false));		if (clicodcompania.equals(""))			errors.add("clicodcompania", new ActionMessage(					"El codigo de la compa?ia no puede ser vacio", false));		if (clicodigo.equals(""))			errors.add("clicodigo", new ActionMessage(					"El codigo del cliente no puede ser vacio", false));		if(!errors.isEmpty()) errors.add("general", new ActionMessage("<b>No se pudo guardar los datos, revise<b> ", false));		return errors;	}	public void llenar(cliente entity) {		this.clicodsx = entity.getclicodsx();		this.clinombre = entity.getclinombre();		this.clinit = entity.getclinit();		this.clidireccion = entity.getclidireccion();		this.clitelefono = entity.getclitelefono();		this.cliciudad = entity.getcliciudad();		this.clicontacto = entity.getclicontacto();		this.climail = entity.getclimail();		this.cliobservacion = entity.getcliobservacion();		this.clicodcompania = entity.getclicodcompania();		this.clicodigo = entity.getClicodigo();		this.clidevolucion = entity.getClidevolucion(); 	}	/**	 * @return	 * @uml.property  name="clicodigo"	 */	public String getClicodigo() {		return clicodigo;	}	/**	 * @param clicodigo	 * @uml.property  name="clicodigo"	 */	public void setClicodigo(String clicodigo) {		this.clicodigo = clicodigo;	}	public String getClidevolucion() {		return clidevolucion;	}	public void setClidevolucion(String clidevolucion) {		this.clidevolucion = clidevolucion;	}}