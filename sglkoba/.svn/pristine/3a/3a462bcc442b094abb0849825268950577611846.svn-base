package maestro.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import maestro.control.*;import maestro.entity.*;import maestro.form.*;import org.apache.struts.action.*;public final class centrocostoAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {		centrocostoForm _form = (centrocostoForm) form;		gstcentrocosto control = new gstcentrocosto();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear" : opcion;		// OPCION DE set:		if (opcion.equals("set")) {			centrocosto entity = control.getcentrocosto(request.getParameter("codsx"));			centrocostoForm temp = new centrocostoForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("centrocostoForm", temp);			return mapping.findForward("centrocosto_datos");		}		String mensaje = "";		// opcion de CREAR		if (opcion.equals("crear")) {			String cccod = _form.getcccod();			String ccdesc = _form.getccdesc();			try {				control.crearcentrocosto(cccod,ccdesc);				mensaje = "centrocosto Creado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Crear el centrocosto: <br> " + e.getLocalizedMessage();			}		}		// Opcion de update		if (opcion.equals("update")) {			try {				control.updatecentrocosto(_form);				mensaje = "centrocosto Actualizado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el centrocosto: <br> " + e.getLocalizedMessage();			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			String codsx = request.getParameter("codsx");			try {				control.eliminar(codsx);				mensaje = "centrocosto Eliminado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el centrocosto: <br> " + e.getLocalizedMessage();			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward("centrocosto");	}}