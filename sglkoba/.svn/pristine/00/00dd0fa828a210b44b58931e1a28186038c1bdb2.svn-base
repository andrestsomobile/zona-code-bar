package maestro.form;import static util.validador.validarNumero;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import maestro.control.*;import maestro.entity.*;import org.apache.struts.action.ActionMessage;/******************************************************************************* * CLASE GENERADA CON generator V3.0 By pablito**** ******************************************************************************/public class fleteForm extends ActionForm {	private String flecodsx;	private String flecliente;	private String flesucursal;	private String fletransportadora;		private String fletipoveh;	private String flevalor;	private String opcion;		private String nomcliente;		private String nomsucursal;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getflecodsx() {		return flecodsx;	}	public String getflecliente() {		return flecliente;	}	public String getflesucursal() {		return flesucursal;	}	public String getfletransportadora() {		return fletransportadora;	}	public String getfletipoveh() {		return fletipoveh;	}	public String getflevalor() {		return flevalor;	}	public void setflecodsx(String new_flecodsx) {		this.flecodsx = new_flecodsx;	}	public void setflecliente(String new_flecliente) {		this.flecliente = new_flecliente;	}	public void setflesucursal(String flesucursal) {		this.flesucursal = flesucursal;	}	public void setfletransportadora(String new_fletransportadora) {		this.fletransportadora = new_fletransportadora;	}	public void setflevalor(String new_flevalor) {		this.flevalor = new_flevalor;	}	public void setfletipoveh(String new_fletipoveh) {		this.fletipoveh = new_fletipoveh;	}	public String getNomcliente() {		return nomcliente;	}	public void setNomcliente(String nomcliente) {		this.nomcliente = nomcliente;	}	public String getNomsucursal() {		return nomsucursal;	}	public void setNomsucursal(String nomsucursal) {		this.nomsucursal = nomsucursal;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}		public ActionErrors validate(ActionMapping mapping,			HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstflete gflete = new gstflete();		opcion = opcion == null || opcion.equals("") ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;		if (opcion.equals("crear")) {			flete fle = gflete.getflete_by_ukey(flecliente, flesucursal, fletransportadora, fletipoveh);			if (fle != null) {				gstcliente gCli = new gstcliente();				gstsucursal gSuc = new gstsucursal();				gsttransportadora gTrans = new gsttransportadora();				errors.add("general", new ActionMessage("<b>Origen Cliente "						+ gCli.getcliente(flecliente).getclinombre() + " , Destino Sucursal "						+ gSuc.getsucursal(flesucursal).getsucnombre() + " , la transportadora "						+ gTrans.gettransportadora(fletransportadora).gettranspnombre() + " y el Tipo de Vehiculo "						+ fletipoveh + " ya existen</b>", false));				return errors;			}		}		// valido campos requeridos:		if (flecliente.equals(""))			errors.add("flecliente", new ActionMessage(					"<b>El Origen Cliente no puede ser vacio</b>", false));		if (flesucursal.equals(""))			errors.add("flesucursal", new ActionMessage(					"<b>El Destino Sucursal no puede ser vacio</b>", false));		if (fletransportadora.equals(""))			errors.add("fletransportadora", new ActionMessage(					"<b>La Transportadora no puede ser vacia</b>", false));		if (flevalor.equals(""))			errors.add("flevalor", new ActionMessage(					"<b>El Valor no puede ser vacio</b>", false));		if (fletipoveh.equals(""))			errors.add("fletipoveh", new ActionMessage(					"<b>El tipo de Vehiculo no puede ser vacio</b>", false));		// aseguro que los valores vacios queden en lo que deben quedar, es		// decir, que fechas que sean vacias '' queden en null, al		// igual que los numeros		flevalor = flevalor == null || flevalor != null && flevalor.equals("") ? null : flevalor;		fletipoveh = fletipoveh == null || fletipoveh != null && fletipoveh.equals("") ? null : fletipoveh;		if (flevalor != null && !validarNumero(flevalor))			errors.add("flevalor", new ActionMessage(					"<b>Este campo debe ser numerico</b>", false));		if (!errors.isEmpty())			errors.add("general", new ActionMessage(					"<b>No se pudo guardar los datos, revise</b> ", false));		return errors;	}	public void llenar(flete entity) {		this.flecodsx = entity.getflecodsx();		this.flecliente = entity.getflecliente();		this.flesucursal = entity.getflesucursal();		this.fletransportadora = entity.getfletransportadora();		this.flevalor = entity.getflevalor();		this.fletipoveh = entity.getfletipoveh();				cliente cli = (new gstcliente()).getcliente(flecliente);		if (cli != null)			this.nomcliente = cli.getclinombre();		sucursal suc = (new gstsucursal()).getsucursal(flesucursal);		if (suc != null)			this.nomsucursal = suc.getsucnombre();	}}