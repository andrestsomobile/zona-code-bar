package pedido.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import pedido.control.*;import pedido.entity.*;import pedido.form.*;import org.apache.struts.action.*;public final class referencia_despacho_pedidoAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {		referencia_despacho_pedidoForm _form = (referencia_despacho_pedidoForm) form;		gstreferencia_despacho_pedido control = new gstreferencia_despacho_pedido();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear" : opcion;		String mensaje = "";		String destino = "";		// OPCION DE set:		if (opcion.equals("set")) {			referencia_despacho_pedido entity = control.getreferencia_despacho_pedido(request.getParameter("codsx"));			referencia_despacho_pedidoForm temp = new referencia_despacho_pedidoForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("referencia_despacho_pedidoForm", temp);			destino = "referencia_despacho_pedido_datos";		}		// opcion de CREAR		if (opcion.equals("crear")) {			String refdpcodrefd = _form.getrefdpcodrefd();			String refdcodrefp = _form.getrefdcodrefp();			String refdcant = _form.getrefdcant();			destino = "referencia_despacho_pedido_datos";			try {				control.crearreferencia_despacho_pedido(refdpcodrefd, refdcodrefp, refdcant, null, null, null, null, null, null, null, null);				mensaje = "referencia_despacho_pedido Creado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Crear el referencia_despacho_pedido: <br> " + e.getLocalizedMessage();			}		}		// Opcion de update		if (opcion.equals("update")) {			try {				destino = "referencia_despacho_pedido_datos";				control.updatereferencia_despacho_pedido(_form);				mensaje = "referencia_despacho_pedido Actualizado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el referencia_despacho_pedido: <br> " + e.getLocalizedMessage();			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			destino = "referencia_despacho_pedido";			String codsx = request.getParameter("codsx");			try {				control.eliminar(codsx);				mensaje = "referencia_despacho_pedido Eliminado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el referencia_despacho_pedido: <br> " + e.getLocalizedMessage();			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward("referencia_despacho_pedido");	}}