package maestro.form;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import maestro.control.*;import maestro.entity.*;import org.apache.struts.action.ActionMessage;/******************************************************************************* * CLASE GENERADA CON generator V3.0 By pablito**** ******************************************************************************/public class ciudadForm extends ActionForm {	private String ciucodigo;	private String ciunombre;	private String ciudepto;	private String opcion;		private String ciusaferbo;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getciucodigo() {		return ciucodigo;	}	public String getciunombre() {		return ciunombre;	}	public String getciudepto() {		return ciudepto;	}	public void setciucodigo(String new_ciucodigo) {		this.ciucodigo = new_ciucodigo;	}	public void setciunombre(String new_ciunombre) {		this.ciunombre = new_ciunombre;	}	public void setciudepto(String new_ciudepto) {		this.ciudepto = new_ciudepto;	}		public String getciusaferbo() {		return ciusaferbo;	}	public void setciusaferbo(String ciusaferbo) {		this.ciusaferbo = ciusaferbo;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping,			HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		//Validar llaves unicas		gstciudad gciudad = new gstciudad();		opcion = opcion == null || opcion.equals("") ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;			// valido campos requeridos:		if (ciucodigo.equals(""))			errors.add("ciucodigo", new ActionMessage(					"<b>El Codigo no puede ser vacio</b>", false));		if (ciunombre.equals(""))			errors.add("ciunombre", new ActionMessage(					"<b>El Nombre no puede ser vacio</b>", false));		if (ciudepto.equals(""))			errors.add("ciudepto", new ActionMessage(					"<b>El Departamento no puede ser vacio</b>", false));		if (!errors.isEmpty())			errors.add("general", new ActionMessage(					"<b>No se pudo guardar los datos, revise</b> ", false));			if (opcion.equals("crear")) {			ciudad ciudCod = gciudad.getciudad_by_ukeyCodigo(ciucodigo);			ciudad ciudNombre = gciudad.getciudad_by_ukeyNombre(ciunombre, ciudepto);			if (ciudCod != null) {				errors.add("ciucodigo", new ActionMessage("<b>El codigo "+ciucodigo+" ya existe</b><br/>", false));			}			if (ciudNombre != null) {				gstdepartamento gdep = new gstdepartamento();				errors.add("ciunombre", new ActionMessage("<b>La ciudad "+ciunombre+" ya existe en el departamento "+gdep.getdepartamento(ciudepto).getdepnombre()+"</b>", false));			}						if(errors != null)return errors;		}				return errors;	}	public void llenar(ciudad entity) {		this.ciucodigo = entity.getciucodigo();		this.ciunombre = entity.getciunombre();		this.ciudepto = entity.getciudepto();		this.ciusaferbo = entity.getciusaferbo();	}}