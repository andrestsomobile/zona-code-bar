package pedido.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException; import org.apache.struts.action.ActionMessage;  import org.apache.struts.action.ActionMessages; import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import pedido.control.*;import pedido.entity.*;import pedido.form.*;import org.apache.struts.action.*;  public final class causal_pedidoAction  extends Action{
			 public ActionForward execute(ActionMapping mapping,	ActionForm form, 			HttpServletRequest request,	HttpServletResponse response)			throws IOException, ServletException {
causal_pedidoForm _form = (causal_pedidoForm)form;  gstcausal_pedido control = new gstcausal_pedido(); String opcion = request.getParameter("opcion");  opcion = opcion==null || ( opcion!=null && opcion.equals("")) ? "crear" : opcion; 
 String mensaje = "";  String destino = ""; //OPCION DE set:  if(opcion.equals("set")) {  causal_pedido entity = control.getcausal_pedido(request.getParameter("codsx")); causal_pedidoForm  temp  = new causal_pedidoForm();  temp.setopcion("update"); temp.llenar(entity);  request.setAttribute("causal_pedidoForm", temp);  destino = "causal_pedido_datos";  }  //opcion de CREAR  if(opcion.equals("crear")) {  String cauppedido = _form.getcauppedido();   String caupcausal = _form.getcaupcausal();   String caupdesccausal = _form.getcaupdesccausal();   String caupfecha = _form.getcaupfecha();   destino = "causal_pedido_datos"; 
  try {  control.crearcausal_pedido(cauppedido,caupcausal,caupdesccausal,caupfecha);  mensaje = "causal_pedido Creado con Exito";  //causal_pedido entity = control.getconcepto(llavanica);//causal_pedidoForm  temp  = new causal_pedidoForm();//temp.setopcion("update"); //temp.llenar(entity);//request.setAttribute("causal_pedidoForm", temp);  } catch (SQLException e) {   e.printStackTrace();  mensaje = "No se pudo Crear el causal_pedido: <br> " + e.getLocalizedMessage();   }  }  // Opcion de update  if(opcion.equals("update")) {   try {  destino = "causal_pedido_datos";   control.updatecausal_pedido(_form);   mensaje = "causal_pedido Actualizado con Exito";    } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Actualizar el causal_pedido: <br> " + e.getLocalizedMessage();  }  }  // Opcion de eliminar  if(opcion.equals("delete")) {  destino = "causal_pedido"; String codsx = request.getParameter("codsx");  try {   control.eliminar(codsx);   mensaje = "causal_pedido Eliminado con Exito";    } catch (SQLException e) { e.printStackTrace();   mensaje = "No se pudo Eliminar el causal_pedido: <br> " + e.getLocalizedMessage();  }  }  ActionMessages e = getErrors(request);  e.add("general", new ActionMessage(mensaje, false)); addErrors(request, e);  return mapping.findForward(destino);    } }