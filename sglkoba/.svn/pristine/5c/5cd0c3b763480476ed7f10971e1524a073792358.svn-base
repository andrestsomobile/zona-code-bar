package pedido.action;import ingreso.control.gstentrada;import ingreso.entity.entrada;import maestro.control.gstproducto;import maestro.entity.producto;import java.io.IOException;import java.sql.SQLException;import java.util.Collection;import java.util.Iterator;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.struts.action.Action;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import pedido.control.gestionSaldos;import pedido.control.gstreferencia_pedido;import pedido.entity.referencia_pedido;import pedido.form.referencia_pedidoForm;import util.Math;public final class referencia_pedidoAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {		referencia_pedidoForm _form = (referencia_pedidoForm) form;		gstreferencia_pedido control = new gstreferencia_pedido();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear" : opcion;		String mensaje = "";		String destino = "";		gstreferencia_pedido grefp = new gstreferencia_pedido();		gstproducto gpro = new gstproducto();		Collection c =  grefp.getProductosPedido( "1");        		// OPCION DE set:		if (opcion.equals("set")) {			referencia_pedido entity = control.getreferencia_pedido(request.getParameter("codsx"));			referencia_pedidoForm temp = new referencia_pedidoForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("referencia_pedidoForm", temp);			destino = "referencia_pedido_datos";		}		/**		 * opcion que agrega un total grande de una referencia... el usuario solo digito el codigo del producto y aqui se tiene que hacer el barrido FIFO y todo eso...		 * 		 */		if (opcion.equals("agregar_total")) {			String pedcodsx = request.getParameter("pedcodsx");			String procodsx = request.getParameter("procodsx");			String cantidad = request.getParameter("cantidad");			String valorunit = request.getParameter("valorunit");			String valorfacunit = request.getParameter("valorfacunit");			String tipocantidad  = request.getParameter("tipocantidad");						gestionSaldos gst = new gestionSaldos();			try {				if (tipocantidad != null && tipocantidad.equalsIgnoreCase("UNIDAD")) {					producto prod = gpro.getproducto(procodsx);					cantidad = util.Math.dividir_bigdecimal(cantidad,prod.getprouniempaque(),8).toPlainString();									}				mensaje = gst.respaldarProductoTotal(pedcodsx, _form.getRefpentrada(), procodsx, cantidad, valorunit, valorfacunit);			} catch (SQLException e1) {				e1.printStackTrace();				mensaje = e1.getMessage();			}			_form.setCantidad("");			_form.setValorunit("");			destino = "referencia_pedido";		}				if (opcion.equals("modificar")) {			String pedcodsx = request.getParameter("pedcodsx");			String codsx = request.getParameter("codsx");			String cantidad = request.getParameter("cantidad");			String valorunit = request.getParameter("valorunit");			String valorfacunit = request.getParameter("valorfacunit");			gestionSaldos gst = new gestionSaldos();			try {				referencia_pedido _rp = control.getreferencia_pedido(codsx);				control.eliminar(codsx);				mensaje = gst.respaldarProductoTotal(pedcodsx, _rp.getRefpentrada(), _rp.getrefpproducto(), cantidad, valorunit, valorfacunit);			} catch (SQLException e1) {				e1.printStackTrace();				mensaje = e1.getMessage();			}			destino = "referencia_pedido";		}		// opcion de CREAR		if (opcion.equals("crear")) {			String refpnumpedido = _form.getrefpnumpedido();			String refpproducto = _form.getrefpproducto();			String ingreso = _form.getIngreso();			String bodega = _form.getRefpbodega();			String refpposicion = _form.getrefpposicion();			String refpcantidad = _form.getrefpcantidad();			String refpvalorunit = _form.getrefpvalorunit();			String refpvalorfacunit = _form.getRefpvalorfacunit();			String refpvalortotal = (Float.parseFloat(refpvalorunit) * Float.parseFloat(refpcantidad)) + "";			String refpvalorfactotal = (Float.parseFloat(refpvalorfacunit) * Float.parseFloat(refpcantidad)) + "";			destino = "referencia_pedido";			try {				// para agregar una referencia, tengo que restar el saldo en la tabla entrada, asi como el peso y todo				// gestionSaldos gst = new gestionSaldos();				// gst.respaldarProductoTotal()				gstentrada gent = new gstentrada();				entrada ent = gent.getentrada(ingreso, refpproducto, bodega, refpposicion);				String pesoneto = ent.getentpesoneto();				String pesobruto = ent.getentpesobruto();				String pesonetototal = Math.multiplicar(pesoneto, refpcantidad);				String pesobrutototal = Math.multiplicar(pesobruto, refpcantidad);				control.crearreferencia_pedido(refpnumpedido, refpproducto, bodega, refpposicion, refpcantidad, refpvalorunit, refpvalortotal, ent.getentcodsx(), "", refpcantidad, pesoneto, pesobruto, pesonetototal, pesobrutototal, refpvalorfacunit, refpvalorfactotal);				mensaje = "referencia_pedido Creado con Exito";			} catch (Exception e) {				e.printStackTrace();				mensaje = "No se pudo Crear el referencia_pedido: <br> " + e.getLocalizedMessage();			}		}		// Opcion de update		if (opcion.equals("update")) {			try {				destino = "referencia_pedido_datos";				String tot = Float.parseFloat(_form.getrefpcantidad()) * Float.parseFloat(_form.getrefpvalorunit()) + "";				_form.setrefpvalortotal(tot);				control.updatereferencia_pedido(_form);				mensaje = "referencia_pedido Actualizado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el referencia_pedido: <br> " + e.getLocalizedMessage();			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			String codsx = request.getParameter("codsx");			try {				destino = "referencia_pedido";				control.eliminar(codsx);				mensaje = "referencia_pedido Eliminado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el referencia_pedido: <br> " + e.getLocalizedMessage();			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward(destino);	}}