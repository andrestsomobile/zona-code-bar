package maestro.control;import maestro.form.*;import maestro.entity.*;import db.*;import java.util.Collection;import java.sql.SQLException;/******************************************************************************* * CLASE GENERADA CON generator V3.0 By pablito**** ******************************************************************************/public class gstbodega extends GstTabla {	public gstbodega() {		db = new beanConnector();		this.classEntidad = bodega.class;	}	public gstbodega(beanConnector db) {		this.db = db;		this.classEntidad = bodega.class;	}	public Collection getlistabodega() {		String consulta = " SELECT * FROM bodega";		return getLista(consulta);	}	public Collection getlistabodega(String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " SELECT * FROM bodega where " + 				getTextoBusquedaResumen(param) +				"  limit "				+ this.maxfilas + " offset  "				+ (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistabodega(String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM bodega where  " +				getTextoBusquedaResumen(param);		return getPaginas(consulta);	}		public bodega getbodega_by_ukey(String bodnombre) {		String cad = "SELECT * FROM bodega WHERE bodnombre='" + bodnombre				+ "'";		return (bodega) getEntidad(cad);		}	public boolean crearbodega(String bodnombre, String boddesc,			String bodurlplano) throws SQLException {		String insert = "INSERT INTO bodega (bodnombre,boddesc,bodurlplano) VALUES ("				+ (bodnombre == null ? "NULL" : "'" + bodnombre + "'")				+ ","				+ (boddesc == null ? "NULL" : "'" + boddesc + "'")				+ ","				+ (bodurlplano == null ? "NULL" : "'" + bodurlplano + "'")				+ ")";		int resp = db.executeUpdate(insert);		return resp == 0 ? false : true;	}	public bodega getbodega(String bodcodsx) {		String cad = "SELECT * FROM bodega WHERE bodcodsx='" + bodcodsx + "'";		return (bodega) getEntidad(cad);	}	public boolean updatebodega(bodega entity) throws SQLException {		String cad = " update bodega set  "				+ " bodnombre = "				+ (entity.getbodnombre() == null ? "NULL" : "'"						+ entity.getbodnombre() + "'")				+ ","				+ " boddesc = "				+ (entity.getboddesc() == null ? "NULL" : "'"						+ entity.getboddesc() + "'")				+ ","				+ " bodurlplano = "				+ (entity.getbodurlplano() == null ? "NULL" : "'"						+ entity.getbodurlplano() + "'") + " where bodcodsx = "				+ entity.getbodcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean updatebodega(bodegaForm entity) throws SQLException {		String cad = " update bodega set  "				+ " bodnombre = "				+ (entity.getbodnombre() == null ? "NULL" : "'"						+ entity.getbodnombre() + "'")				+ ","				+ " boddesc = "				+ (entity.getboddesc() == null ? "NULL" : "'"						+ entity.getboddesc() + "'")				+ ","				+ " bodurlplano = "				+ (entity.getbodurlplano() == null ? "NULL" : "'"						+ entity.getbodurlplano() + "'") + " where bodcodsx = "				+ entity.getbodcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean eliminar(String bodcodsx) throws SQLException {		String elim = " delete from bodega where bodcodsx = '" + bodcodsx + "'";		int r = db.executeUpdate(elim);		return r == 0 ? false : true;	}}