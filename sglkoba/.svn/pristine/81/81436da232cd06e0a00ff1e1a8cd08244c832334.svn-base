package maestro.control;import maestro.form.*;import maestro.entity.*;import db.*;import java.util.Collection;import java.sql.SQLException;/******************************************************************************* * CLASE GENERADA CON generator V3.0 By pablito**** ******************************************************************************/public class gstempleado extends GstTabla {	public gstempleado() {		db = new beanConnector();		this.classEntidad = empleado.class;	}	public gstempleado(beanConnector db) {		this.db = db;		this.classEntidad = empleado.class;	}	public Collection getlistaempleado() {		String consulta = " SELECT * FROM empleado";		return getLista(consulta);	}	public Collection getlistaempleado(String start, String param) {		start = start == null ? "0" : start;		param = param == null ? "" : param;		String consulta = " SELECT * FROM empleado where "				+ 					getTextoBusquedaResumen(param) + " order by empcodsx asc " 				+ "  limit " 				+ this.maxfilas + " offset  "				+ (Integer.parseInt(start) * this.maxfilas);		return getLista(consulta);	}	public int getTotalPaginaslistaempleado(String param) {		param = param == null ? "" : param;		String consulta = " SELECT count(1) FROM empleado where  " +			getTextoBusquedaResumen(param);		return getPaginas(consulta);	}		public empleado getempleado_by_ukey(String empcedula) {		String cad = "SELECT * FROM empleado WHERE empcedula='" + empcedula				+ "'";		return (empleado) getEntidad(cad);		}	public boolean crearempleado(String empnombre, String empcedula,			String empmail, String empcargo) throws SQLException {		String insert = "INSERT INTO empleado (empnombre,empcedula,empmail, empcargo) VALUES ("				+ (empnombre == null ? "NULL" : "'" + empnombre + "'")				+ ","				+ (empcedula == null ? "NULL" : "'" + empcedula + "'")				+ ","				+ (empmail == null ? "NULL" : "'" + empmail + "'")				+ ","				+ (empcargo == null ? "NULL" : "'" + empcargo + "'") + ")";		int resp = db.executeUpdate(insert);		return resp == 0 ? false : true;	}	public empleado getempleado(String empcodsx) {		String cad = "SELECT * FROM empleado WHERE empcodsx='" + empcodsx + "'";		return (empleado) getEntidad(cad);	}	public boolean updateempleado(empleado entity) throws SQLException {		String cad = " update empleado set  "				+ " empnombre = "				+ (entity.getempnombre() == null ? "NULL" : "'"						+ entity.getempnombre() + "'")				+ ","				+ " empcedula = "				+ (entity.getempcedula() == null ? "NULL" : "'"						+ entity.getempcedula() + "'")				+ ","				+ " empmail = "				+ (entity.getempmail() == null ? "NULL" : "'"						+ entity.getempmail() + "'")				+ ","				+ " empcargo = "				+ (entity.getempcargo() == null ? "NULL" : "'"						+ entity.getempcargo() + "'") + " where empcodsx = "				+ entity.getempcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean updateempleado(empleadoForm entity) throws SQLException {		String cad = " update empleado set  "				+ " empnombre = "				+ (entity.getempnombre() == null ? "NULL" : "'"						+ entity.getempnombre() + "'")				+ ","				+ " empcedula = "				+ (entity.getempcedula() == null ? "NULL" : "'"						+ entity.getempcedula() + "'")				+ ","				+ " empmail = "				+ (entity.getempmail() == null ? "NULL" : "'"						+ entity.getempmail() + "'")				+ ","				+ " empcargo = "				+ (entity.getempcargo() == null ? "NULL" : "'"						+ entity.getempcargo() + "'") + " where empcodsx = "				+ entity.getempcodsx();		int resp = db.executeUpdate(cad);		return resp == 0 ? false : true;	}	public boolean eliminar(String empcodsx) throws SQLException {		String elim = " delete from empleado where empcodsx = '" + empcodsx				+ "'";		int r = db.executeUpdate(elim);		return r == 0 ? false : true;	}}