package maestro.form;import javax.servlet.http.HttpServletRequest;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import maestro.control.*;import maestro.entity.*;import org.apache.struts.action.ActionMessage;/******************************************************************************* * CLASE GENERADA CON generator V3.0 By pablito**** ******************************************************************************/public class bodegaForm extends ActionForm {	private String bodcodsx;	private String bodnombre;	private String boddesc;	private String bodurlplano;	private String opcion;	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getbodcodsx() {		return bodcodsx;	}	public String getbodnombre() {		return bodnombre;	}	public String getboddesc() {		return boddesc;	}	public String getbodurlplano() {		return bodurlplano;	}	public void setbodcodsx(String new_bodcodsx) {		this.bodcodsx = new_bodcodsx;	}	public void setbodnombre(String new_bodnombre) {		this.bodnombre = new_bodnombre;	}	public void setboddesc(String new_boddesc) {		this.boddesc = new_boddesc;	}	public void setbodurlplano(String new_bodurlplano) {		this.bodurlplano = new_bodurlplano;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping,			HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstbodega gbodega = new gstbodega();		opcion = opcion == null || opcion.equals("") ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;		if (opcion.equals("crear")) {			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS			bodega bod = gbodega.getbodega_by_ukey(bodnombre);			if (bod != null) {				errors.add("general", new ActionMessage("<b>La bodega "						+ bodnombre + " ya existe</b>", false));				return errors;			}		}		// valido campos requeridos:		if (bodnombre.equals(""))			errors.add("bodnombre", new ActionMessage(					"<b>El Nombre no puede ser vacio</b>", false));		if (boddesc.equals(""))			errors.add("boddesc", new ActionMessage(					"<b>La descripcion no puede ser vacia</b>", false));		if (bodurlplano.equals(""))			errors.add("bodurlplano", new ActionMessage(					"<b>La direccion del plano no puede ser vacia</b>", false));		if(!errors.isEmpty()) errors.add("general", new ActionMessage("<b>No se pudo guardar los datos, revise </b>", false));		return errors;	}	public void llenar(bodega entity) {		this.bodcodsx = entity.getbodcodsx();		this.bodnombre = entity.getbodnombre();		this.boddesc = entity.getboddesc();		this.bodurlplano = entity.getbodurlplano();	}}