package maestro.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import maestro.control.*;import maestro.entity.*;import maestro.form.*;import org.apache.struts.action.*;public final class tipoproductoAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {		tipoproductoForm _form = (tipoproductoForm) form;		gsttipoproducto control = new gsttipoproducto();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear" : opcion;		// OPCION DE set:		if (opcion.equals("set")) {			tipoproducto entity = control.gettipoproducto(request.getParameter("codsx"));			tipoproductoForm temp = new tipoproductoForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("tipoproductoForm", temp);			return mapping.findForward("tipoproducto_datos");		}		String mensaje = "";		// opcion de CREAR		if (opcion.equals("crear")) {			String tiprdescripcion = _form.gettiprdescripcion();			String tiprcodcompania = _form.gettiprcodcompania();			String tiprcodigo = _form.gettiprcodigo();			try {				control.creartipoproducto(tiprdescripcion, tiprcodcompania, tiprcodigo);				mensaje = "Tipo Producto Creado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Crear el Tipo Producto: <br> " + e.getLocalizedMessage();			}		}		// Opcion de update		if (opcion.equals("update")) {			try {				control.updatetipoproducto(_form);				mensaje = "Tipo Producto Actualizado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el Tipo Producto: <br> " + e.getLocalizedMessage();			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			String codsx = request.getParameter("codsx");			try {				control.eliminar(codsx);				mensaje = "Tipo Producto Eliminado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el Tipo Producto: <br> " + e.getLocalizedMessage();			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward("tipoproducto");	}}