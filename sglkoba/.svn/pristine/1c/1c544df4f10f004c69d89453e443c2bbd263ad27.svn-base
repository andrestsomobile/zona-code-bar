package ingreso.action;import java.io.IOException;import javax.servlet.ServletException;import java.sql.SQLException;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.util.*;import ingreso.control.*;import ingreso.entity.*;import ingreso.form.*;import util.Fecha;import org.apache.struts.action.*;public final class contenedor_traficoAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {		contenedor_traficoForm _form = (contenedor_traficoForm) form;		gstcontenedor_trafico control = new gstcontenedor_trafico();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear" : opcion;		String destino = "";//OPCION DE set: 		if (opcion.equals("set")) {			contenedor_trafico entity = control.getcontenedor_trafico(request.getParameter("codsx"));			contenedor_traficoForm temp = new contenedor_traficoForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("contenedor_traficoForm", temp);			request.setAttribute("trafcodsx", temp.getctrafnumtrafico());			return mapping.findForward("contenedor_trafico_datos");		}		String mensaje = "";		// opcion de CREAR		if (opcion.equals("crear")) {			String ctrafnumtrafico = _form.getctrafnumtrafico();			String ctraftamano = _form.getctraftamano();			String ctrafnumero = _form.getctrafnumero();			String ctrafplaca = _form.getCtrafplaca();			String ctrafconductor = _form.getCtrafconductor();			String ctrafcedula = _form.getCtrafcedula();			String ctrafobservacion = _form.getCtrafobservacion();			String ctrafestado = _form.getCtrafestado();			String ctrafiniciodescargue = _form.getCtrafiniciodescargue();			try {				control.crearcontenedor_trafico(ctrafnumtrafico, ctraftamano, ctrafnumero, ctrafplaca, ctrafconductor, ctrafcedula, ctrafobservacion, ctrafestado,ctrafiniciodescargue);				mensaje = "contenedor_trafico Creado con Exito";				request.setAttribute("trafcodsx", _form.getctrafnumtrafico());				destino = "contenedor_trafico";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Crear el contenedor_trafico: <br> " + e.getLocalizedMessage();			}		}		// Opcion de update		if (opcion.equals("update")) {			String nuevo_ctrafestado = _form.getCtrafestado();			contenedor_trafico actual_entity = control.getcontenedor_trafico(_form.getctrafcodsx());			try {				if (nuevo_ctrafestado != null && nuevo_ctrafestado.equals("CARGANDO") && !nuevo_ctrafestado.equals(actual_entity.getCtrafestado())) {					_form.setCtrafiniciodescargue(Fecha.getFecha());				} else if (nuevo_ctrafestado != null && nuevo_ctrafestado.equals("FINALIZADO") && !nuevo_ctrafestado.equals(actual_entity.getCtrafestado())) {					_form.setCtraffindescargue(Fecha.getFecha());				}				control.updatecontenedor_trafico(_form);				mensaje = "contenedor_trafico Actualizado con Exito";				request.setAttribute("trafcodsx", _form.getctrafnumtrafico());				destino = "contenedor_trafico";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el contenedor_trafico: <br> " + e.getLocalizedMessage();			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			String codsx = request.getParameter("codsx");			try {				contenedor_trafico ctraf = control.getcontenedor_trafico(codsx);				String trafcodsx = ctraf.getctrafnumtrafico();				control.eliminar(codsx);				mensaje = "contenedor Eliminado con Exito";				request.setAttribute("trafcodsx", trafcodsx);				destino = "contenedor_trafico";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el contenedor_trafico: <br> " + e.getLocalizedMessage();			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward(destino);	}}