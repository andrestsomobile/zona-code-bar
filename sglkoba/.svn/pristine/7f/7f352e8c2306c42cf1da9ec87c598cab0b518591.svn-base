package ingreso.action;import ingreso.control.gstingreso;import ingreso.control.gsttrafico;import ingreso.entity.trafico;import ingreso.form.traficoForm;import java.io.IOException;import java.sql.SQLException;import java.util.Collection;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import maestro.control.gstcompania;import maestro.entity.compania;import org.apache.struts.action.Action;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import util.Propiedades;import util.gstenviarmail;import administracion.entity.usuario;public final class traficoAction extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {		traficoForm _form = (traficoForm) form;		gsttrafico control = new gsttrafico();		String opcion = request.getParameter("opcion");		opcion = opcion == null || (opcion != null && opcion.equals("")) ? "crear" : opcion;		String mensaje = "";		String destino = "trafico";		usuario usu = (usuario) request.getSession().getAttribute("usuario");		String trafusuario = usu.getusucodsx();		// opcion de activar un ingreso:		if (opcion.equals("activar")) {			trafico entity = control.gettrafico(request.getParameter("codsx"));			// miro que no este en ningun ingreso:			Collection c = new gstingreso().getlistaingresoFinalizadoByTrafico(entity.gettrafcodsx());			if (!c.isEmpty()) {				mensaje = "No puede activar el trafico si este se encuentra en uno o varios ingresos Y ESTOS YA ESTAN FINALIZADOS";				destino = "trafico";			} else {				entity.setTrafestado("TRAMITE");				// entity.settraffechacreacion( util.Fecha.getFecha());				try {					control.updatetrafico(entity);					traficoForm temp = new traficoForm();					temp.setopcion("update");					temp.llenar(entity);					request.setAttribute("traficoForm", temp);					destino = "trafico_datos";					mensaje = "Trafico Activado con exito";				} catch (SQLException e1) {					mensaje = "No se pudo Activar el Ingreso <br>" + e1.getMessage();					e1.printStackTrace();					destino = "ingreso_datos";				}			}		}		// OPCION DE set:		if (opcion.equals("set")) {			trafico entity = control.gettrafico(request.getParameter("codsx"));			traficoForm temp = new traficoForm();			temp.setopcion("update");			temp.llenar(entity);			request.setAttribute("traficoForm", temp);			request.setAttribute("trafcodsx", temp.gettrafcodsx());			destino = "trafico_datos";		}		// opcion de CREAR		if (opcion.equals("crear")) {			String trafcompania = _form.gettrafcompania();			String traffechacreacion = _form.gettraffechacreacion();			String trafdocumento = _form.gettrafdocumento();			String trafembarque = _form.gettrafembarque();			String traftransportadora = null;_form.gettraftransportadora();			String trafprocedencia = _form.gettrafprocedencia();			String traffechaarribopuerto = _form.gettraffechaarribopuerto();			String traffechapresentdta = _form.gettraffechapresentdta();			String traffechaaprobaciondta = _form.gettraffechaaprobaciondta();			String traffob = "0";// _form.gettraffob();			String trafcif = "0";// _form.gettrafcif();			String trafconsec = _form.gettrafconsec();			String trafnumerofmm = _form.gettrafnumerofmm();			String traftrm = _form.gettraftrm();			String trafnumdta = _form.gettrafnumdta();			String trafnumsobordo = _form.gettrafnumsobordo();			String traffechadescargue = _form.gettraffechadescargue();			String traffechalevante = _form.gettraffechalevante();			String traffechaingresozf = _form.gettraffechaingresozf();			String trafentregadocusia = _form.gettrafentregadocusia();			String trafobservaciones = _form.gettrafobservaciones();			String trafpesobruto = "0";// _form.gettrafpesobruto();			String traffechasobordo = _form.gettraffechasobordo();			String traforigen = _form.gettraforigen();			String trafpesoneto = "0";// _form.gettrafpesoneto();			String traffletesseguro = _form.gettraffletesseguro();			String trafestado = _form.getTrafestado();			try {				control.creartrafico(trafcompania, traffechacreacion, trafdocumento, trafembarque, traftransportadora, trafprocedencia, traffechaarribopuerto, traffechapresentdta, traffechaaprobaciondta, traffob, trafcif, trafconsec, trafnumerofmm, traftrm, trafnumdta, trafnumsobordo,						traffechadescargue, traffechalevante, traffechaingresozf, trafentregadocusia, trafobservaciones, trafpesobruto, trafusuario, traffechasobordo, traforigen, trafpesoneto, traffletesseguro, trafestado, _form.getTrafpedido(), _form.getTrafmotonave());				// lo mando para la lista de contenedores...				destino = "contenedor_trafico";				// _form.setopcion("update");				trafico entity_creada = control.gettrafico(trafcompania, trafdocumento);				_form.settrafcodsx(entity_creada.gettrafcodsx());				control.actualiar_CIF_referencias(entity_creada.gettrafcodsx());				request.setAttribute("trafcodsx", entity_creada.gettrafcodsx());				mensaje = "trafico Creado con Exito";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Crear el trafico: <br> " + e.getLocalizedMessage();				destino = "trafico_datos";			}		}		// Opcion de update		if (opcion.equals("update")) {			try {				_form.settrafusuario(trafusuario);				// _form.settraffechacreacion( util.Fecha.getFecha());				// actualizo los datos generales								trafico entity = control.gettrafico(_form.gettrafcodsx());								control.updatetrafico(_form);				control.actualiar_CIF_referencias(_form.gettrafcodsx());				/*				if (!entity.getTrafestado().equalsIgnoreCase(_form.getTrafestado())) { // es decir que cambia de tramite a finalizado					gstenviarmail gem = new gstenviarmail();					gstcompania gcom = new gstcompania();					compania entidad_com = gcom.getcompania(_form.gettrafcompania());					String correoclientesvarios = Propiedades.getProperties("correoclientesvarios");					String texto = "Cliente: " + _form.gettrafcompania() + " - " + entidad_com.getcomnombre() + " <br> " +							"Se finalizó TRAFICO No. " + _form.gettrafcodsx() + ". Documento Transporte: <a href=\"http://10.1.54.112:8080/sgljde/traficoAction.do?opcion=set&codsx=" + _form.gettrafcodsx() + "\">" + _form.gettrafdocumento() + "</a> . <br> " +							//"Se finalizó TRAFICO No. " + _form.gettrafcodsx() + ". Documento Transporte: <a href=\"http://10.1.54.112:8080/pacific/traficoAction.do?opcion=set&codsx=" + _form.gettrafcodsx() + "\">" + _form.gettrafdocumento() + "</a> . <br> " +							"Tener en cuenta para facturación de los servicios prestados.";					gem.crea(correoclientesvarios, "Revision Facturacion Ingresos Tipo Trafico", texto);									}*/				mensaje = "trafico Actualizado con Exito";				destino = "contenedor_trafico";				request.setAttribute("trafcodsx", _form.gettrafcodsx());			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Actualizar el trafico: <br> " + e.getLocalizedMessage();				destino = "trafico_datos";			}		}		// Opcion de eliminar		if (opcion.equals("delete")) {			String codsx = request.getParameter("codsx");			try {				control.eliminar(codsx);				mensaje = "trafico Eliminado con Exito";				destino = "trafico";			} catch (SQLException e) {				e.printStackTrace();				mensaje = "No se pudo Eliminar el trafico: <br> " + e.getLocalizedMessage();				destino = "trafico";			}		}		ActionMessages e = getErrors(request);		e.add("general", new ActionMessage(mensaje, false));		addErrors(request, e);		return mapping.findForward(destino);	}}