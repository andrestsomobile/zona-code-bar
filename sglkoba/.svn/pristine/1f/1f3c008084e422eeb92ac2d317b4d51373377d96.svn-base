package pedido.form;import javax.servlet.http.HttpServletRequest;import maestro.control.gstproducto;import maestro.entity.producto;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionMapping;import pedido.control.*;import pedido.entity.*;import util.validador;import org.apache.struts.action.ActionMessage;public class referencia_despacho_serialForm extends ActionForm {	private String refdscodsx;	private String refdsreferencia_despacho;	private String refdsserial;	private String opcion;	private String total;	private String promodelo;	private String prodescripcion;	private String max;	private String[] selectedItems = {};		public String[] getSelectedItems() {		return selectedItems;	}	public void setSelectedItems(String[] selectedItems) {		this.selectedItems = selectedItems;	}	public void setopcion(String newopcion) {		this.opcion = newopcion;	}	public String getopcion() {		return this.opcion;	}	public String getRefdscodsx() {		return refdscodsx;	}	public void setRefdscodsx(String refdscodsx) {		this.refdscodsx = refdscodsx;	}	public String getRefdsreferencia_despacho() {		return refdsreferencia_despacho;	}	public void setRefdsreferencia_despacho(String refdsreferencia_despacho) {		this.refdsreferencia_despacho = refdsreferencia_despacho;	}	public String getRefdsserial() {		return refdsserial;	}	public void setRefdsserial(String refdsserial) {		this.refdsserial = refdsserial;	}	public void reset(ActionMapping mapping, HttpServletRequest request) {	}	public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {		ActionErrors errors = new ActionErrors();		gstreferencia_despacho_serial gstreferencia_despacho_serial = new gstreferencia_despacho_serial();		opcion = opcion == null ? "crear" : opcion;		if (opcion.equals("set") || opcion.equals("delete"))			return null;		if (opcion.equals("crear")) {			// @todo COMPLETAR EL CREAR, SOLO LLAVES UNICAS O REPETIDAS
		}		// valido campos requeridos:		if (!errors.isEmpty())			errors.add("general", new ActionMessage("No se pudo crear , revise", false));		return errors;	}	public void llenar(referencia_despacho_serial entity) {		this.refdscodsx = entity.getRefdscodsx();		this.refdsreferencia_despacho = entity.getRefdsreferencia_despacho();		this.refdsserial = entity.getRefdsserial();		gstreferencia_despacho greferencia_despacho = new gstreferencia_despacho();		referencia_despacho referencia_despacho = greferencia_despacho.getreferencia_despacho(entity.getRefdsreferencia_despacho());		gstproducto gprod = new gstproducto();		producto prod = gprod.getproducto(referencia_despacho.getrefdproducto());		if (prod != null) {			promodelo = prod.getpromodelo();			prodescripcion = prod.getprodescripcion();		}	}	public String getTotal() {		return total;	}	public void setTotal(String total) {		this.total = total;	}	public String getProdescripcion() {		return prodescripcion;	}	public void setProdescripcion(String prodescripcion) {		this.prodescripcion = prodescripcion;	}	public String getPromodelo() {		return promodelo;	}	public void setPromodelo(String promodelo) {		this.promodelo = promodelo;	}	public String getMax() {		return max;	}	public void setMax(String max) {		this.max = max;	}	}